import lit.formats, os, os.path, sys, subprocess
srcDir = os.path.dirname(__file__)
config.test_format = lit.formats.ShTest(True)
config.pipefail = False
rustyRootDirectory = subprocess.check_output("dirname `cargo locate-project --message-format plain`", shell=True).decode("utf-8").strip()

stdlibLocation = lit_config.params["LIB"]
compilerLocation = lit_config.params["COMPILER"]

# ...to make the compile command more reable we build it over multiple lines
compile = f'{compilerLocation}'
compile = f'{compile} -o /tmp/%basename_t.out'
compile = f'{compile} -liec61131std -L{stdlibLocation}/lib -i "{stdlibLocation}/include/*.st"'
compile = f'{compile} -i {rustyRootDirectory}/tests/lit/util/*.pli'
compile = f'{compile} --linker=cc'
print(f'Compile command: {compile}')

config.substitutions.append(('%COMPILE', f'{compile}'))
config.substitutions.append(('%RUN', f'LD_LIBRARY_PATH="{stdlibLocation}/lib" /tmp/%basename_t.out'))
config.substitutions.append(('%CHECK', f'FileCheck-14 --check-prefixes CHECK --allow-unused-prefixes --match-full-lines'))