---
source: tests/integration/cfc.rs
expression: output_file_content_without_headers
---
define i32 @foo(i32 %0) !dbg !3 {
entry:
  %foo = alloca i32, align 4, !dbg !8
  %val = alloca i32, align 4, !dbg !8
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9, metadata !DIExpression()), !dbg !10
  store i32 %0, i32* %val, align 4, !dbg !8
  call void @llvm.dbg.declare(metadata i32* %foo, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 0, i32* %foo, align 4, !dbg !8
  %load_val = load i32, i32* %val, align 4, !dbg !13
  %tmpVar = icmp eq i32 %load_val, 5, !dbg !13
  br i1 %tmpVar, label %then_block, label %else_block, !dbg !13

then_block:                                       ; preds = %entry
  %foo_ret = load i32, i32* %foo, align 4, !dbg !8
  ret i32 %foo_ret, !dbg !8

else_block:                                       ; preds = %entry
  store i32 10, i32* %val, align 4, !dbg !14
  %foo_ret1 = load i32, i32* %foo, align 4, !dbg !14
  ret i32 %foo_ret1, !dbg !14
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Dwarf Version", i32 5}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!2 = !DIFile(filename: "<internal>.cfc", directory: "")
!3 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !2, file: !2, line: 1, type: !4, scopeLine: 4, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !7)
!4 = !DISubroutineType(flags: DIFlagPublic, types: !5)
!5 = !{null, !6}
!6 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!7 = !{}
!8 = !DILocation(line: 3, scope: !3)
!9 = !DILocalVariable(name: "val", scope: !3, file: !2, line: 1, type: !6)
!10 = !DILocation(line: 1, column: 30, scope: !3)
!11 = !DILocalVariable(name: "foo", scope: !3, file: !2, line: 1, type: !6, align: 32)
!12 = !DILocation(line: 1, column: 9, scope: !3)
!13 = !DILocation(line: 2, scope: !3)
!14 = !DILocation(line: 5, scope: !3)
