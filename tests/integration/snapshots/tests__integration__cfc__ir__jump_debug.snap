---
source: tests/integration/cfc.rs
expression: output_file_content_without_headers
---
%foo = type { i32 }

@foo_instance = global %foo zeroinitializer, section "var-$RUSTY$foo_instance:r1i32", !dbg !0

define void @foo(%foo* %0) section "fn-$RUSTY$foo:v" !dbg !11 {
entry:
  call void @llvm.dbg.declare(metadata %foo* %0, metadata !15, metadata !DIExpression()), !dbg !16
  %val = getelementptr inbounds %foo, %foo* %0, i32 0, i32 0, !dbg !17
  br label %lbl, !dbg !17

lbl:                                              ; preds = %lbl, %entry
  %load_val = load i32, i32* %val, align 4, !dbg !16
  %tmpVar = icmp eq i32 %load_val, 0, !dbg !16
  br i1 %tmpVar, label %lbl, label %else_block, !dbg !18

else_block:                                       ; preds = %lbl
  store i32 1, i32* %val, align 4, !dbg !19
  ret void, !dbg !19
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!7, !8}
!llvm.dbg.cu = !{!9}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "foo", scope: !2, file: !2, line: 1, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>.cfc", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "foo", scope: !2, file: !2, line: 1, size: 32, align: 64, flags: DIFlagPublic, elements: !4, identifier: "foo")
!4 = !{!5}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2, file: !2, line: 1, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!6 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!7 = !{i32 2, !"Dwarf Version", i32 5}
!8 = !{i32 2, !"Debug Info Version", i32 3}
!9 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !10, splitDebugInlining: false)
!10 = !{!0}
!11 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !2, file: !2, line: 1, type: !12, scopeLine: 3, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !14)
!12 = !DISubroutineType(flags: DIFlagPublic, types: !13)
!13 = !{null}
!14 = !{}
!15 = !DILocalVariable(name: "foo", scope: !11, file: !2, line: 1, type: !3)
!16 = !DILocation(line: 1, scope: !11)
!17 = !DILocation(line: 2, scope: !11)
!18 = !DILocation(line: 3, scope: !11)
!19 = !DILocation(line: 4, scope: !11)
