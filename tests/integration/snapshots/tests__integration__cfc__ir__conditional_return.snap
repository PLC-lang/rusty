---
source: tests/integration/cfc.rs
expression: output_file_content_without_headers
---
%conditional_return = type { i32 }

@__conditional_return__init = constant %conditional_return zeroinitializer
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___plc, i8* null }]

define void @conditional_return(%conditional_return* %0) {
entry:
  %val = getelementptr inbounds %conditional_return, %conditional_return* %0, i32 0, i32 0
  %load_val = load i32, i32* %val, align 4
  %tmpVar = icmp eq i32 %load_val, 5
  br i1 %tmpVar, label %then_block, label %else_block

then_block:                                       ; preds = %entry
  ret void

else_block:                                       ; preds = %entry
  store i32 10, i32* %val, align 4
  ret void
}

define void @__init_conditional_return(%conditional_return* %0) {
entry:
  %self = alloca %conditional_return*, align 8
  store %conditional_return* %0, %conditional_return** %self, align 8
  ret void
}

define void @__init___plc() {
entry:
  ret void
}
