---
source: tests/integration/cfc.rs
expression: output_file_content_without_headers
---
%main = type { i32 }

@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___plc, i8* null }]
@main_instance = global %main zeroinitializer, !dbg !0

define void @main(%main* %0) !dbg !21 {
entry:
  call void @llvm.dbg.declare(metadata %main* %0, metadata !25, metadata !DIExpression()), !dbg !26
  %x = getelementptr inbounds %main, %main* %0, i32 0, i32 0, !dbg !27
  store i32 5, i32* %x, align 4, !dbg !28
  ret void, !dbg !28
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

define void @__init_main(%main* %0) !dbg !29 {
entry:
  %self = alloca %main*, align 8, !dbg !33
  call void @llvm.dbg.declare(metadata %main** %self, metadata !34, metadata !DIExpression()), !dbg !33
  store %main* %0, %main** %self, align 8, !dbg !33
  ret void, !dbg !33
}

define void @__init___plc() !dbg !35 {
entry:
  call void @__init_main(%main* @main_instance), !dbg !37
  ret void, !dbg !37
}

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!7, !8}
!llvm.dbg.cu = !{!9, !11, !16}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "main", scope: !2, file: !2, line: 1, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>.cfc", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "main", scope: !2, file: !2, line: 1, size: 32, align: 64, flags: DIFlagPublic, elements: !4, identifier: "main")
!4 = !{!5}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2, file: !2, line: 1, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!6 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!7 = !{i32 2, !"Dwarf Version", i32 5}
!8 = !{i32 2, !"Debug Info Version", i32 3}
!9 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !10, splitDebugInlining: false)
!10 = !{!0}
!11 = distinct !DICompileUnit(language: DW_LANG_C, file: !12, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !13, splitDebugInlining: false)
!12 = !DIFile(filename: "__initializers", directory: "")
!13 = !{!14}
!14 = !DIGlobalVariableExpression(var: !15, expr: !DIExpression())
!15 = distinct !DIGlobalVariable(name: "main", scope: !2, file: !2, line: 1, type: !3, isLocal: false, isDefinition: true)
!16 = distinct !DICompileUnit(language: DW_LANG_C, file: !17, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !18, splitDebugInlining: false)
!17 = !DIFile(filename: "__init___plc", directory: "")
!18 = !{!19}
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "main", scope: !2, file: !2, line: 1, type: !3, isLocal: false, isDefinition: true)
!21 = distinct !DISubprogram(name: "main", linkageName: "main", scope: !2, file: !2, line: 1, type: !22, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !9, retainedNodes: !24)
!22 = !DISubroutineType(flags: DIFlagPublic, types: !23)
!23 = !{null}
!24 = !{}
!25 = !DILocalVariable(name: "main", scope: !21, file: !2, line: 1, type: !3)
!26 = !DILocation(line: 1, scope: !21)
!27 = !DILocation(line: 0, scope: !21)
!28 = !DILocation(line: 4, scope: !21)
!29 = distinct !DISubprogram(name: "__init_main", linkageName: "__init_main", scope: !2, file: !2, line: 1, type: !30, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !24)
!30 = !DISubroutineType(flags: DIFlagPublic, types: !31)
!31 = !{null, !32}
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__auto_pointer_to_main", baseType: !3, size: 64, align: 64, dwarfAddressSpace: 1)
!33 = !DILocation(line: 1, column: 8, scope: !29)
!34 = !DILocalVariable(name: "self", scope: !29, file: !2, line: 1, type: !32)
!35 = distinct !DISubprogram(name: "__init___plc", linkageName: "__init___plc", scope: !36, file: !36, type: !22, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !16, retainedNodes: !24)
!36 = !DIFile(filename: "<internal>", directory: "")
!37 = !DILocation(line: 0, scope: !35)
