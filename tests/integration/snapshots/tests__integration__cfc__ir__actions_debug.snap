---
source: tests/integration/cfc.rs
expression: output_file_content_without_headers
---
target triple = "[filtered]"

%main = type { i32, i32 }

@llvm.used = appending global [2 x i8*] [i8* bitcast (void ()* @__init___plc to i8*), i8* bitcast (void ()** @__init_array_entry___init___plc to i8*)]
@main_instance = global %main zeroinitializer, !dbg !0
@__init_array_entry___init___plc = internal unnamed_addr global void ()* @__init___plc, section ".init_array"

define void @main(%main* %0) !dbg !12 {
entry:
  call void @llvm.dbg.declare(metadata %main* %0, metadata !16, metadata !DIExpression()), !dbg !17
  %a = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %b = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  store i32 0, i32* %a, align 4, !dbg !18
  call void @main__newAction(%main* %0), !dbg !17
  call void @main__newAction2(%main* %0), !dbg !19
  ret void, !dbg !20
}

define void @main__newAction(%main* %0) {
entry:
  call void @llvm.dbg.declare(metadata %main* %0, metadata !15, metadata !DIExpression()), !dbg !21
  %a = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %b = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %load_a = load i32, i32* %a, align 4, !dbg !21
  %tmpVar = add i32 %load_a, 1, !dbg !21
  store i32 %tmpVar, i32* %a, align 4, !dbg !21
  ret void, !dbg !22
}

define void @main__newAction2(%main* %0) {
entry:
  call void @llvm.dbg.declare(metadata %main* %0, metadata !15, metadata !DIExpression()), !dbg !21
  %a = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %b = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %load_b = load i32, i32* %b, align 4, !dbg !23
  %tmpVar = add i32 %load_b, 2, !dbg !23
  store i32 %tmpVar, i32* %b, align 4, !dbg !23
  ret void, !dbg !22
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

define void @__init_main(%main* %0) {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

define void @__user_init_main(%main* %0) {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

define void @__init___plc() {
entry:
  call void @__init_main(%main* @main_instance)
  call void @__user_init_main(%main* @main_instance)
  ret void
}

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!8, !9}
!llvm.dbg.cu = !{!10}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "main", scope: !2, file: !2, line: 1, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>.cfc", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "main", scope: !2, file: !2, line: 1, size: 64, align: 64, flags: DIFlagPublic, elements: !4, identifier: "main")
!4 = !{!5, !7}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, line: 1, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!6 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!7 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, line: 1, baseType: !6, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!8 = !{i32 2, !"Dwarf Version", i32 5}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !11, splitDebugInlining: false)
!11 = !{!0}
!12 = distinct !DISubprogram(name: "main", linkageName: "main", scope: !2, file: !2, line: 1, type: !13, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !15)
!13 = !DISubroutineType(flags: DIFlagPublic, types: !14)
!14 = !{null, !3}
!15 = !{}
!16 = !DILocalVariable(name: "main", scope: !12, file: !2, type: !3)
!17 = !DILocation(line: 1, scope: !12)
!18 = !DILocation(line: 3, scope: !12)
!19 = !DILocation(line: 2, scope: !12)
!20 = !DILocation(line: 0, scope: !12)
!21 = !DILocation(line: 1, scope: !2)
!22 = !DILocation(line: 0, scope: !2)
!23 = !DILocation(line: 2, scope: !2)
