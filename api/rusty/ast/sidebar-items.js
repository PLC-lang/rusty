window.SIDEBAR_ITEMS = {"enum":[["AccessModifier",""],["ArgumentProperty",""],["AstStatement",""],["DataType",""],["DataTypeDeclaration",""],["DirectAccessType",""],["HardwareAccessType",""],["LinkageType",""],["Operator",""],["PolymorphismMode",""],["PouType",""],["TypeNature",""],["VariableBlockType",""]],"fn":[["create_binary_expression",""],["create_call_to","helper function that creates a call-statement"],["create_call_to_check_function_ast",""],["create_call_to_with_ids",""],["create_cast_statement",""],["create_literal_int",""],["create_not_expression","helper function that creates an not-expression"],["create_or_expression","helper function that creates an or-expression"],["create_reference",""],["flatten_expression_list","flattens expression-lists and MultipliedStatements into a vec of statements. It can also handle nested structures like 2(3(4,5))"],["get_enum_element_name","expects a Reference or an Assignment"],["get_enum_element_names","enum_elements should be the statement between then enumâ€™s brackets ( ) e.g. x : ( this, that, etc)"],["pre_process",""]],"mod":[["literals",""]],"struct":[["CompilationUnit",""],["ConditionalBlock",""],["GenericBinding",""],["Implementation",""],["NewLines","A datastructure that stores the location of newline characters of a string. It also offers some useful methods to determine the line-number of an offset-location."],["Pou",""],["SourceRange",""],["SourceRangeFactory",""],["UserTypeDeclaration",""],["Variable",""],["VariableBlock",""]],"trait":[["DiagnosticInfo",""]],"type":[["AstId",""]]};