initSidebarItems({"enum":[["FormatOption",""]],"fn":[["build","The driver function for the compilation Sorts files that need compilation Parses, validates and generates code for the given source files Links all provided object files with the compilation result Links any provided libraries Returns the location of the output file"],["build_with_params","The driver function for the compilation Sorts files that need compilation Parses, validates and generates code for the given source files Links all provided object files with the compilation result Links any provided libraries Returns the location of the output file"],["compile",""],["compile_module","Compiles the given source into a `codegen::CodeGen` using the provided context"],["compile_to_bitcode","Compiles the given source into a bitcode file"],["compile_to_ir","Compiles the given source into LLVM IR and saves it to the given output location"],["compile_to_shared_object","Compiles a given source string to a dynamic non PIC object and saves the output."],["compile_to_shared_pic_object","Compiles a given source string to a shared position independent object and saves the output."],["compile_to_static_obj","Compiles a given source string to a static object and saves the output."],["compile_to_string","Compiles the given source into LLVM IR and returns it"],["get_target_triple",""],["link",""]],"macro":[["expect_token",""]],"mod":[["cli",""],["diagnostics",""],["index",""],["runner",""]],"struct":[["CompileOptions",""],["FilePath",""],["LinkOptions",""],["SourceCode","The SourceCode unit is the smallest unit of compilation that can be passed to the compiler"]],"trait":[["SourceContainer","SourceContainers offer source-code to be compiled via the load_source function. Furthermore it offers a location-String used when reporting diagnostics."]]});