window.SIDEBAR_ITEMS = {"constant":[["BOOL_SIZE",""],["BOOL_TYPE","used internally for forced casts to u1"],["BYTE_SIZE",""],["BYTE_TYPE",""],["CHAR_TYPE",""],["DATE_AND_TIME_TYPE",""],["DATE_TIME_SIZE",""],["DATE_TYPE",""],["DEFAULT_STRING_LEN",""],["DINT_SIZE",""],["DINT_TYPE",""],["DWORD_TYPE",""],["INT_SIZE",""],["INT_TYPE",""],["LINT_SIZE",""],["LINT_TYPE",""],["LONG_DATE_AND_TIME_TYPE",""],["LONG_DATE_AND_TIME_TYPE_SHORTENED",""],["LONG_DATE_TYPE",""],["LONG_DATE_TYPE_SHORTENED",""],["LONG_TIME_OF_DAY_TYPE",""],["LONG_TIME_OF_DAY_TYPE_SHORTENED",""],["LONG_TIME_TYPE",""],["LONG_TIME_TYPE_SHORTENED",""],["LREAL_SIZE",""],["LREAL_TYPE",""],["LWORD_TYPE",""],["POINTER_SIZE",""],["RANGE_CHECK_LS_FN",""],["RANGE_CHECK_LU_FN",""],["RANGE_CHECK_S_FN",""],["RANGE_CHECK_U_FN",""],["REAL_SIZE",""],["REAL_TYPE",""],["SHORT_DATE_AND_TIME_TYPE",""],["SHORT_DATE_TYPE",""],["SHORT_TIME_OF_DAY_TYPE",""],["SHORT_TIME_TYPE",""],["SINT_SIZE",""],["SINT_TYPE",""],["STRING_TYPE",""],["TIME_OF_DAY_TYPE",""],["TIME_TYPE",""],["U1_SIZE",""],["U1_TYPE",""],["UDINT_TYPE",""],["UINT_TYPE",""],["ULINT_TYPE",""],["USINT_TYPE",""],["VOID_TYPE",""],["WCHAR_TYPE",""],["WORD_TYPE",""],["WSTRING_TYPE",""],["__VLA_TYPE",""]],"enum":[["DataTypeInformation",""],["InternalType",""],["StringEncoding",""],["StructSource","indicates where this Struct origins from."],["TypeSize","Enum for ranges and aggregate type sizes."],["VarArgs",""]],"fn":[["create_internal_type_name","returns a name for internally created types using the given prefix and original type name the return name starts with “__”"],["get_bigger_type","Returns the bigger of the two provided types"],["get_builtin_types",""],["get_equals_function_name_for","returns the compare-function name for the given type and operator. Returns None if the given operator is no comparison operator"],["get_signed_type","returns the signed version of the given data_type if its a signed int-type returns the original type if it is no signed int-type"],["is_same_type_class","Returns true if provided types have the same type nature i.e. Both are numeric or both are floats"]],"struct":[["DataType",""],["Dimension",""]],"trait":[["DataTypeInformationProvider",""]],"type":[["NativeDintType",""],["NativeIntType",""],["NativeLintType",""],["NativeLrealType",""],["NativePointerType",""],["NativeRealType",""],["NativeSintType",""]]};