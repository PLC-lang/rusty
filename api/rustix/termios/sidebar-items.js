window.SIDEBAR_ITEMS = {"enum":[["Action","`TC*` values for use with `tcflow`."],["OptionalActions","`TCSA*` values for use with `tcsetattr`."],["QueueSelector","`TC*` values for use with `tcflush`."]],"fn":[["ioctl_tiocexcl","`ioctl(fd, TIOCEXCL)`—Enables exclusive mode on a terminal."],["ioctl_tiocnxcl","`ioctl(fd, TIOCNXCL)`—Disables exclusive mode on a terminal."],["isatty","`isatty(fd)`—Tests whether a file descriptor refers to a terminal."],["tcdrain","`tcdrain(fd, duration)`—Wait until all pending output has been written."],["tcflow","`tcflow(fd, action)`—Suspend or resume transmission or reception."],["tcflush","`tcflush(fd, queue_selector)`—Wait until all pending output has been written."],["tcgetattr","`tcgetattr(fd)`—Get terminal attributes."],["tcgetpgrp","`tcgetpgrp(fd)`—Get the terminal foreground process group."],["tcgetsid","`tcgetsid(fd)`—Return the session ID of the current session with `fd` as its controlling terminal."],["tcgetwinsize","`tcgetwinsize(fd)`—Get the current terminal window size."],["tcsendbreak","`tcsendbreak(fd, 0)`—Transmit zero-valued bits."],["tcsetattr","`tcsetattr(fd)`—Set terminal attributes."],["tcsetpgrp","`tcsetpgrp(fd, pid)`—Set the terminal foreground process group."],["tcsetwinsize","`tcsetwinsize(fd)`—Set the current terminal window size."]],"mod":[["speed","Speeds for use with [`Termios::set_input_speed`] and [`Termios::set_output_speed`]."]],"struct":[["ControlModes","Flags controlling special terminal modes."],["InputModes","Flags controlling terminal input."],["LocalModes","Flags controlling “local” terminal modes."],["OutputModes","Flags controlling terminal output."],["SpecialCodeIndex","Indices for use with [`Termios::special_codes`]."],["SpecialCodes","An array indexed by [`SpecialCodeIndex`] indicating the current values of various special control codes."],["Termios","`struct termios` for use with `tcgetattr` and `tcsetattr`."]],"type":[["Winsize","`struct winsize` for use with `tcgetwinsize`."]]};