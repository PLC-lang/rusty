(function() {
    var type_impls = Object.fromEntries([["num_modular",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivExact%3Cu128,+()%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#418\">source</a><a href=\"#impl-DivExact%3Cu128,+()%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.DivExact.html\" title=\"trait num_modular::DivExact\">DivExact</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.unit.html\">()</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#418\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.DivExact.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#418\">source</a><a href=\"#method.div_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.DivExact.html#tymethod.div_exact\" class=\"fn\">div_exact</a>(self, d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, _: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.unit.html\">()</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"num_modular/trait.DivExact.html#associatedtype.Output\" title=\"type num_modular::DivExact::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Check if d divides self with the help of the precomputation. If d divides self,\nthen the quotient is returned.</div></details></div></details>","DivExact<u128, ()>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivExact%3Cu64,+PreModInv%3Cu64%3E%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/preinv.rs.html#95\">source</a><a href=\"#impl-DivExact%3Cu64,+PreModInv%3Cu64%3E%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.DivExact.html\" title=\"trait num_modular::DivExact\">DivExact</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"num_modular/struct.PreModInv.html\" title=\"struct num_modular::PreModInv\">PreModInv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/preinv.rs.html#95\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.DivExact.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/preinv.rs.html#95\">source</a><a href=\"#method.div_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.DivExact.html#tymethod.div_exact\" class=\"fn\">div_exact</a>(self, d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u64.html\">u64</a>, pre: &amp;<a class=\"struct\" href=\"num_modular/struct.PreModInv.html\" title=\"struct num_modular::PreModInv\">PreModInv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"num_modular/trait.DivExact.html#associatedtype.Output\" title=\"type num_modular::DivExact::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Check if d divides self with the help of the precomputation. If d divides self,\nthen the quotient is returned.</div></details></div></details>","DivExact<u64, PreModInv<u64>>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivExact%3Cusize,+PreModInv%3Cusize%3E%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/preinv.rs.html#96\">source</a><a href=\"#impl-DivExact%3Cusize,+PreModInv%3Cusize%3E%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.DivExact.html\" title=\"trait num_modular::DivExact\">DivExact</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"num_modular/struct.PreModInv.html\" title=\"struct num_modular::PreModInv\">PreModInv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/preinv.rs.html#96\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.DivExact.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/preinv.rs.html#96\">source</a><a href=\"#method.div_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.DivExact.html#tymethod.div_exact\" class=\"fn\">div_exact</a>(self, d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.usize.html\">usize</a>, pre: &amp;<a class=\"struct\" href=\"num_modular/struct.PreModInv.html\" title=\"struct num_modular::PreModInv\">PreModInv</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"num_modular/trait.DivExact.html#associatedtype.Output\" title=\"type num_modular::DivExact::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Check if d divides self with the help of the precomputation. If d divides self,\nthen the quotient is returned.</div></details></div></details>","DivExact<usize, PreModInv<usize>>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModularCoreOps%3C%26u128,+%26u128%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#impl-ModularCoreOps%3C%26u128,+%26u128%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.ModularCoreOps.html\" title=\"trait num_modular::ModularCoreOps\">ModularCoreOps</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.ModularCoreOps.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.addm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#method.addm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularCoreOps.html#tymethod.addm\" class=\"fn\">addm</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self + rhs) % m</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#method.subm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularCoreOps.html#tymethod.subm\" class=\"fn\">subm</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self - rhs) % m</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mulm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#method.mulm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularCoreOps.html#tymethod.mulm\" class=\"fn\">mulm</a>(self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self * rhs) % m</div></details></div></details>","ModularCoreOps<&u128, &u128>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModularCoreOps%3Cu128,+%26u128%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#40-69\">source</a><a href=\"#impl-ModularCoreOps%3Cu128,+%26u128%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.ModularCoreOps.html\" title=\"trait num_modular::ModularCoreOps\">ModularCoreOps</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#41\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.ModularCoreOps.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.addm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#44-50\">source</a><a href=\"#method.addm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularCoreOps.html#tymethod.addm\" class=\"fn\">addm</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self + rhs) % m</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#53-59\">source</a><a href=\"#method.subm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularCoreOps.html#tymethod.subm\" class=\"fn\">subm</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self - rhs) % m</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mulm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#62-68\">source</a><a href=\"#method.mulm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularCoreOps.html#tymethod.mulm\" class=\"fn\">mulm</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self * rhs) % m</div></details></div></details>","ModularCoreOps<u128, &u128>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModularPow%3C%26u128,+%26u128%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#impl-ModularPow%3C%26u128,+%26u128%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.ModularPow.html\" title=\"trait num_modular::ModularPow\">ModularPow</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.ModularPow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.powm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#381\">source</a><a href=\"#method.powm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularPow.html#tymethod.powm\" class=\"fn\">powm</a>(self, exp: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self ^ exp) % m</div></details></div></details>","ModularPow<&u128, &u128>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModularPow%3Cu128,+%26u128%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#82\">source</a><a href=\"#impl-ModularPow%3Cu128,+%26u128%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.ModularPow.html\" title=\"trait num_modular::ModularPow\">ModularPow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#82\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.ModularPow.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.powm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#82\">source</a><a href=\"#method.powm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularPow.html#tymethod.powm\" class=\"fn\">powm</a>(self, exp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (self ^ exp) % m</div></details></div></details>","ModularPow<u128, &u128>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModularSymbols%3C%26u128%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#165\">source</a><a href=\"#impl-ModularSymbols%3C%26u128%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.ModularSymbols.html\" title=\"trait num_modular::ModularSymbols\">ModularSymbols</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_legendre\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#165\">source</a><a href=\"#method.checked_legendre\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularSymbols.html#tymethod.checked_legendre\" class=\"fn\">checked_legendre</a>(&amp;self, n: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Calculate Legendre Symbol (a|n), where a is <code>self</code>. Returns <a href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\">None</a> only if n is\nnot a prime. <a href=\"num_modular/trait.ModularSymbols.html#tymethod.checked_legendre\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_jacobi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#165\">source</a><a href=\"#method.checked_jacobi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularSymbols.html#tymethod.checked_jacobi\" class=\"fn\">checked_jacobi</a>(&amp;self, n: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Calculate Jacobi Symbol (a|n), where a is <code>self</code>. Returns <a href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\">None</a> if n is negative or even.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kronecker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#165\">source</a><a href=\"#method.kronecker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularSymbols.html#tymethod.kronecker\" class=\"fn\">kronecker</a>(&amp;self, n: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Calculate Kronecker Symbol (a|n), where a is <code>self</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.legendre\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/lib.rs.html#104-106\">source</a><a href=\"#method.legendre\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularSymbols.html#method.legendre\" class=\"fn\">legendre</a>(&amp;self, n: Modulus) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Calculate Legendre Symbol (a|n), where a is <code>self</code>. <a href=\"num_modular/trait.ModularSymbols.html#method.legendre\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.jacobi\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/lib.rs.html#123-126\">source</a><a href=\"#method.jacobi\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularSymbols.html#method.jacobi\" class=\"fn\">jacobi</a>(&amp;self, n: Modulus) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Calculate Jacobi Symbol (a|n), where a is <code>self</code> <a href=\"num_modular/trait.ModularSymbols.html#method.jacobi\">Read more</a></div></details></div></details>","ModularSymbols<&u128>","num_modular::double::umax"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ModularUnaryOps%3C%26u128%3E-for-u128\" class=\"impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#282\">source</a><a href=\"#impl-ModularUnaryOps%3C%26u128%3E-for-u128\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"num_modular/trait.ModularUnaryOps.html\" title=\"trait num_modular::ModularUnaryOps\">ModularUnaryOps</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#282\">source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"num_modular/trait.ModularUnaryOps.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.negm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#282\">source</a><a href=\"#method.negm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularUnaryOps.html#tymethod.negm\" class=\"fn\">negm</a>(self, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Return (-self) % m and make sure the result is normalized in range [0,m)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.invm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#282\">source</a><a href=\"#method.invm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularUnaryOps.html#tymethod.invm\" class=\"fn\">invm</a>(self, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.83.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Calculate modular inverse (x such that self*x = 1 mod m). <a href=\"num_modular/trait.ModularUnaryOps.html#tymethod.invm\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dblm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#282\">source</a><a href=\"#method.dblm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularUnaryOps.html#tymethod.dblm\" class=\"fn\">dblm</a>(self, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Calculate modular double ( x+x mod m)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sqm\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_modular/prim.rs.html#282\">source</a><a href=\"#method.sqm\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_modular/trait.ModularUnaryOps.html#tymethod.sqm\" class=\"fn\">sqm</a>(self, m: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.83.0/core/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Calculate modular square ( x*x mod m )</div></details></div></details>","ModularUnaryOps<&u128>","num_modular::double::umax"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[28575]}