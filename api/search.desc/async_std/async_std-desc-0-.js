searchState.loadedDescShard("async_std", 0, "Async version of the Rust standard library\nChannels\nFilesystem manipulation operations.\nAsynchronous values.\nTraits, helpers, and type definitions for core I/O …\nNetworking primitives for TCP/UDP communication.\nOS-specific extensions.\nCross-platform path manipulation.\nThe async prelude.\nComposable asynchronous iteration.\nSynchronization primitives.\nTypes and traits for working with asynchronous tasks.\nDeclares task-local values.\nThe channel is closed.\nThe channel is empty and closed.\nThe channel is empty but not closed.\nThe channel is full but not closed.\nThe receiving side of a channel.\nA future returned by <code>Receiver::recv()</code>.\nAn error returned from <code>Receiver::recv()</code>.\nA future returned by <code>Sender::send()</code>.\nAn error returned from <code>Sender::send()</code>.\nThe sending side of a channel.\nAn error returned from <code>Receiver::try_recv()</code>.\nAn error returned from <code>Sender::try_send()</code>.\nA <code>Receiver</code> that prevents the channel from not being closed.\nA <code>Sender</code> that prevents the channel from not being closed.\nCreates a bounded channel.\nReturns the channel capacity if it’s bounded.\nReturns the channel capacity if it’s bounded.\nCloses the channel.\nCloses the channel.\nDowngrade the sender to a weak reference.\nDowngrade the receiver to a weak reference.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps the message that couldn’t be sent.\nUnwraps the message that couldn’t be sent.\nReturns <code>true</code> if the channel is closed.\nReturns <code>true</code> if the channel is closed.\nReturns <code>true</code> if the channel is closed.\nReturns <code>true</code> if the channel is empty and closed.\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the channel is empty but not closed.\nReturns <code>true</code> if the channel is full.\nReturns <code>true</code> if the channel is full.\nReturns <code>true</code> if the channel is full but not closed.\nReturns the number of messages in the channel.\nReturns the number of messages in the channel.\nReturns the number of receivers for the channel.\nReturns the number of receivers for the channel.\nReceives a message from the channel.\nReceives a message from the channel using the blocking …\nSends a message into the channel.\nSends a message into this channel using the blocking …\nReturns the number of senders for the channel.\nReturns the number of senders for the channel.\nAttempts to receive a message from the channel.\nAttempts to send a message into the channel.\nCreates an unbounded channel.\nUpgrade the <code>WeakSender</code> into a <code>Sender</code>.\nUpgrade the <code>WeakReceiver</code> into a <code>Receiver</code>.\nA builder for creating directories with configurable …\nAn entry in a directory.\nAn open file on the filesystem.\nA structure representing a type of file with accessors for …\nMetadata information about a file.\nA builder for opening files with configurable options.\nRepresentation of the various permissions on a file.\nA stream of entries in a directory.\nReturns the last access time of this metadata.\nConfigures the option for append mode.\nReturns the canonical form of a path.\nCopies the contents and permissions of a file to a new …\nCreates a directory with the configured options.\nOpens a file in write-only mode.\nConfigures the option for creating a new file if it doesn…\nCreates a new directory.\nCreates a new directory and all of its parents if they are …\nConfigures the option for creating a new file or failing …\nReturns the creation time listed in this metadata.\nReturns the bare name of this entry without the leading …\nReads the file type for this entry.\nReturns the file type for this metadata.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a hard link on the filesystem.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this metadata is for a directory. The …\nTests whether this file type represents a directory. The …\nReturns <code>true</code> if this metadata is for a regular file. The …\nTests whether this file type represents a regular file. …\nReturns <code>true</code> if this metadata is for a symbolic link.\nTests whether this file type represents a symbolic link. …\nReturns the size of the file, in bytes, this metadata is …\nReads metadata for a path.\nReads the metadata for this entry.\nReads the file’s metadata.\nReturns the last modification time listed in this metadata.\nCreates a blank set of options.\nCreates a blank set of options.\nOpens a file in read-only mode.\nOpens a file with the configured options.\nReturns the full path to this entry.\nReturns the permissions of the file this metadata is for.\nReads the entire contents of a file as raw bytes.\nConfigures the option for read mode.\nReturns a stream of entries in a directory.\nReads a symbolic link and returns the path it points to.\nReads the entire contents of a file as a string.\nReturns <code>true</code> if these permissions describe a readonly …\nSets the option for recursive mode.\nRemoves an empty directory.\nRemoves a directory and all of its contents.\nRemoves a file.\nRenames a file or directory to a new location.\nTruncates or extends the file.\nChanges the permissions of a file or directory.\nChanges the permissions on the file.\nModifies the readonly flag for this set of permissions. If …\nReads metadata for a path without following symbolic links.\nSynchronizes OS-internal buffered contents and metadata to …\nSynchronizes OS-internal buffered contents to disk.\nConfigures the option for truncating the previous file.\nWrites a slice of bytes as the new contents of a file.\nConfigures the option for write mode.\nA future represents an asynchronous computation obtained …\nThe type of value produced on completion.\nAn error returned when a future times out.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNever resolves to a value.\nAttempts to resolve the future to a final value, …\nCreates a new future wrapping around a function returning …\nResolves to the provided value.\nAwaits a future or times out after a duration of time.\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nThe operation failed because a pipe was closed.\nRead bytes asynchronously.\nExtension methods for <code>BufRead</code>.\nAdds buffering to any reader.\nWraps a writer and buffers its output.\nA stream over <code>u8</code> values of a reader.\nAdaptor to chain together two readers.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nA <code>Cursor</code> wraps an in-memory buffer and provides it with a …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nA reader that contains no data.\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFilesystem quota was exceeded.\nThe remote host is not reachable.\nThis operation was interrupted.\nAn error returned by <code>into_inner</code> which combines an error …\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nA buffer type used with <code>Write::write_vectored</code>.\nA buffer type used with <code>Read::read_vectored</code>.\nThe filesystem object is, unexpectedly, a directory.\nA stream of lines in a byte stream.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nRead bytes asynchronously.\nExtension methods for <code>Read</code>.\nThe filesystem or storage medium is read-only, but a write …\nA reader which yields one byte over and over and over and …\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nSeek bytes asynchronously.\nExtension methods for <code>Seek</code>.\nEnumeration of possible methods to seek within an I/O …\nA writer that consumes and drops all data.\nA stream over the contents of an instance of <code>BufRead</code> split …\nStale network file handle.\nSets the offset to the provided number of bytes.\nA handle to the standard error of the current process.\nA handle to the standard input of the current process.\nA handle to the standard output of the current process.\nThe underlying storage (typically, a filesystem) is full.\nReader adaptor which limits the bytes read from an …\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nThe operation needs to block to complete, but the blocking …\nWrite bytes asynchronously.\nExtension methods for <code>Write</code>.\nAn error returned when an operation could not be completed …\nAdvance the internal cursor of the slice.\nAdvance the internal cursor of the slice.\nAdvance a slice of slices.\nAdvance a slice of slices.\nReturns a reference to the internally buffered data.\nReturns a reference to the internal buffer.\nTells this buffer that <code>amt</code> bytes have been consumed from …\nCopies the entire contents of a reader into a writer.\nAttempts to downcast the custom boxed error to <code>E</code>.\nCreates a reader that contains no data.\nShows a human-readable description of the <code>ErrorKind</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nReturns the argument unchanged.\nConverts <code>TryReserveError</code> to an error with …\nConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>Error</code> from a particular OS …\nGets a mutable reference to the underlying value in this …\nReturns a mutable reference to the inner error wrapped by …\nGets a mutable reference to the underlying writer.\nGets a mutable reference to the underlying reader.\nGets a mutable reference to the underlying reader.\nGets mutable references to the underlying readers in this …\nGets a reference to the underlying value in this cursor.\nReturns a reference to the inner error wrapped by this …\nGets a reference to the underlying writer.\nGets a reference to the underlying reader.\nGets a reference to the underlying reader.\nGets references to the underlying readers in this <code>Chain</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this cursor, returning the underlying value.\nConsumes the <code>Error</code>, returning its inner error (if any).\nConsumes BufWriter, returning the underlying writer\nUnwraps the buffered reader, returning the underlying …\nConsumes the <code>Take</code>, returning the wrapped reader.\nConsumes the <code>Chain</code>, returning the wrapped readers.\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns an error representing the last OS error which …\nReturns the number of bytes that can be read before this …\nCreates a new cursor wrapping the provided underlying …\nCreates a new I/O error from a known kind of error as well …\nCreates a new <code>IoSliceMut</code> wrapping a byte slice.\nCreates a new <code>BufWriter</code> with a default buffer capacity. …\nCreates a buffered reader with default buffer capacity.\nCreates a new <code>IoSlice</code> wrapping a byte slice.\nCreates a new I/O error from an arbitrary error payload.\nAttempt to close the object.\nAttempt to return the contents of the internal buffer, …\nAttempt to flush the object, ensuring that any buffered …\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to read from the <code>AsyncRead</code> into <code>buf</code>.\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nAttempt to seek to an offset, in bytes, in a stream.\nSeek to the offset, in bytes, in the underlying writer.\nSeeks to an offset, in bytes, in the underlying reader.\nAttempt to write bytes from <code>buf</code> into the object.\nAttempt to write bytes from <code>bufs</code> into the object using …\nAttempt to write bytes from <code>bufs</code> into the object using …\nReturns the current position of this cursor.\nThe async I/O prelude.\nReturns the OS error that this error represents (if any).\nReads a line of input into the specified buffer.\nCreates an instance of a reader that infinitely repeats …\nSets the number of bytes that can be read before this …\nSets the position of this cursor.\nCreates a writer that consumes and drops all data.\nConstructs a new handle to the standard error of the …\nConstructs a new handle to the standard input of the …\nConstructs a new handle to the standard output of the …\nAwaits an I/O future or times out after a duration of time.\nCreates a new <code>BufWriter</code> with the specified buffer capacity.\nCreates a new buffered reader with the specified capacity.\nExtension methods for <code>BufRead</code>.\nExtension methods for <code>Read</code>.\nExtension methods for <code>Seek</code>.\nExtension methods for <code>Write</code>.\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nCreates a “by reference” adaptor for this instance of …\nTransforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.\nTransforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.\nTransforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nCreates an adaptor which will chain this stream with …\nFlushes the stream to ensure that all buffered contents …\nFlushes the stream to ensure that all buffered contents …\nFlushes the stream to ensure that all buffered contents …\nReturns a stream over the lines of this byte stream.\nReturns a stream over the lines of this byte stream.\nReturns a stream over the lines of this byte stream.\nReads some bytes from the byte stream.\nReads some bytes from the byte stream.\nReads some bytes from the byte stream.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads the exact number of bytes required to fill <code>buf</code>.\nReads all bytes and appends them into <code>buf</code> until a newline …\nReads all bytes and appends them into <code>buf</code> until a newline …\nReads all bytes and appends them into <code>buf</code> until a newline …\nReads all bytes from the byte stream.\nReads all bytes from the byte stream.\nReads all bytes from the byte stream.\nReads all bytes from the byte stream and appends them into …\nReads all bytes from the byte stream and appends them into …\nReads all bytes from the byte stream and appends them into …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nLike <code>read</code>, except that it reads into a slice of buffers.\nLike <code>read</code>, except that it reads into a slice of buffers.\nLike <code>read</code>, except that it reads into a slice of buffers.\nSeeks to a new position in a byte stream.\nSeeks to a new position in a byte stream.\nSeeks to a new position in a byte stream.\nReturns a stream over the contents of this reader split on …\nReturns a stream over the contents of this reader split on …\nReturns a stream over the contents of this reader split on …\nCreates an adaptor which will read at most <code>limit</code> bytes …\nCreates an adaptor which will read at most <code>limit</code> bytes …\nCreates an adaptor which will read at most <code>limit</code> bytes …\nWrites some bytes into the byte stream.\nWrites some bytes into the byte stream.\nWrites some bytes into the byte stream.\nWrites an entire buffer into the byte stream.\nWrites an entire buffer into the byte stream.\nWrites an entire buffer into the byte stream.\nWrites a formatted string into this writer, returning any …\nWrites a formatted string into this writer, returning any …\nWrites a formatted string into this writer, returning any …\nLike <code>write</code>, except that it writes from a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nLike <code>write</code>, except that it writes from a slice of buffers.\nAn error which can be returned when parsing an IP address …\nThe size of an IPv4 address in bits.\nThe size of an IPv6 address in bits.\nAn IPv4 address representing the broadcast address: …\nBoth the reading and the writing portions of the <code>TcpStream</code> …\nA stream of incoming TCP connections.\nAn IP address, either IPv4 or IPv6.\nAn IPv4 address.\nAn IPv6 address.\nReturned iterator over socket addresses which this type …\nAn IPv4 address with the address pointing to localhost: …\nAn IPv6 address representing localhost: <code>::1</code>.\nThe reading portion of the <code>TcpStream</code> should be shut down.\nPossible values which can be passed to the …\nAn internet socket address, either IPv4 or IPv6.\nAn IPv4 socket address.\nAn IPv6 socket address.\nA TCP socket server, listening for connections.\nA TCP stream between a local and a remote socket.\nConverts or resolves addresses to <code>SocketAddr</code> values.\nAn IPv4 address representing an unspecified address: …\nAn IPv6 address representing the unspecified address: <code>::</code>.\nA UDP socket.\nAn IPv4 address.\nAn IPv4 socket address.\nAn IPv6 address.\nAn IPv6 socket address.\nThe writing portion of the <code>TcpStream</code> should be shut down.\nAccepts a new incoming connection to this listener.\nCreates a new <code>TcpListener</code> which will be bound to the …\nCreates a UDP socket from the given address.\nGets the value of the <code>SO_BROADCAST</code> option for this socket.\nCreates a new TCP stream connected to the specified …\nConnects the UDP socket to a remote address.\nReturns the flow information associated with this address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>std::net::TcpListener</code> into its asynchronous …\nConverts a <code>std::net::TcpStream</code> into its asynchronous …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>std::net::UdpSocket</code> into its asynchronous …\nReturns the argument unchanged.\nCopies this address to a new <code>IpAddr::V6</code>.\nCreates an <code>IpAddr::V6</code> from an eight element 16-bit array.\nCopies this address to a new <code>IpAddr::V4</code>.\nCreates an <code>IpAddr::V4</code> from a four element byte array.\nReturns the argument unchanged.\nCreates an <code>IpAddr::V6</code> from a sixteen element byte array.\nUses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> …\nCreates an <code>Ipv4Addr</code> from a four element byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> …\nCreates an <code>Ipv6Addr</code> from a sixteen element byte array.\nCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …\nConverts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.\nConverts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a native byte order <code>u32</code> into an IPv4 address.\nConverts a native byte order <code>u128</code> into an IPv6 address.\nReturns a stream of incoming connections.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket address.\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this address part of the <code>198.18.0.0/15</code> …\nReturns <code>true</code> if this is an address reserved for …\nReturns <code>true</code> if this is a broadcast address (…\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if this is an address reserved for …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if the address appears to be globally …\nReturns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if the address is an IPv4-mapped address (…\nReturns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).\nReturns <code>true</code> if this is a loopback address.\nReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).\nReturns <code>true</code> if this is the loopback address (<code>::1</code>), as …\nReturns <code>true</code> if this is a multicast address.\nReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).\nReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).\nReturns <code>true</code> if this is a private address.\nReturns <code>true</code> if this address is reserved by IANA for …\nReturns <code>true</code> if this address is part of the Shared Address …\nReturns <code>true</code> if this is a unicast address, as defined by …\nReturns <code>true</code> if the address is a globally routable unicast …\nReturns <code>true</code> if the address is a unicast address with …\nReturns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).\nReturns <code>true</code> for the special ‘unspecified’ address.\nReturns <code>true</code> for the special ‘unspecified’ address (…\nReturns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…\nExecutes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.\nReturns the local address that this listener is bound to.\nReturns the local address that this stream is connected to.\nReturns the local address that this listener is bound to.\nGets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nGets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nReturns the address’s multicast scope if the address is …\nGets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nCreates a new IPv4 address from four eight-bit octets.\nCreates a new IPv6 address from eight 16-bit segments.\nCreates a new socket address from an IP address and a port …\nCreates a new socket address from an <code>IPv4</code> address and a …\nCreates a new socket address from an <code>IPv6</code> address, a …\nGets the value of the <code>TCP_NODELAY</code> option on this socket.\nReturns the four eight-bit integers that make up this …\nReturns the sixteen eight-bit integers the IPv6 address …\nParse an IP address from a slice of bytes.\nParse an IPv4 address from a slice of bytes.\nParse an IPv6 address from a slice of bytes.\nParse a socket address from a slice of bytes.\nParse an IPv4 socket address from a slice of bytes.\nParse an IPv6 socket address from a slice of bytes.\nReceives data on the socket from the remote address to …\nReceives data from the socket without removing it from the …\nReceives data from socket without removing it from the …\nReturns the remote address that this stream is connected …\nReturns the peer address that this listener is connected …\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nReceives data from the socket.\nReceives data from the socket.\nReturns the scope ID associated with this address.\nReturns the eight 16-bit segments that make up this …\nSends data on the socket to the remote address to which it …\nSends data on the socket to the given address.\nSets the value of the <code>SO_BROADCAST</code> option for this socket.\nChanges the flow information associated with this socket …\nChanges the IP address associated with this socket address.\nChanges the IP address associated with this socket address.\nChanges the IP address associated with this socket address.\nSets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nSets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nSets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nSets the value of the <code>TCP_NODELAY</code> option on this socket.\nChanges the port number associated with this socket …\nChanges the port number associated with this socket …\nChanges the port number associated with this socket …\nChanges the scope ID associated with this socket address.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nShuts down the read, write, or both halves of this …\nConverts an IPv4 address into a <code>u32</code> representation using …\nConverts an IPv6 address into a <code>u128</code> representation using …\nConverts this address to an <code>IpAddr::V4</code> if it is an …\nConverts this address to an <code>IpAddr::V4</code> if it is an …\nConverts this address to an <code>IPv4</code> address if it is either …\nConverts this address to an <code>IPv4</code> address if it’s an …\nConverts this address to an IPv4-compatible <code>IPv6</code> address.\nConverts this address to an IPv4-mapped <code>IPv6</code> address.\nConverts this object to an iterator of resolved <code>SocketAddr</code>…\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nPlatform-specific extensions for Unix platforms.\nUnix-specific filesystem extensions.\nUnix-specific I/O extensions.\nUnix-specific networking extensions.\nUnix-specific extensions to <code>fs::DirBuilder</code>.\nUnix-specific extension methods for <code>fs::DirEntry</code>.\nUnix-specific extensions to <code>fs::OpenOptions</code>.\nPass custom flags to the <code>flags</code> argument of <code>open</code>.\nReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …\nSets the mode bits that a new file will be created with.\nSets the mode to create new directories with. This option …\nCreates a new symbolic link on the filesystem.\nA trait to extract the raw file descriptor from an …\nA trait to express the ability to construct an object from …\nA trait to express the ability to consume an object and …\nRaw file descriptors.\nExtracts the raw file descriptor.\nConstructs a new instance of <code>Self</code> from the given raw file …\nConsumes this object, returning the raw underlying file …\nA stream of incoming Unix domain socket connections.\nAn address associated with a Unix socket.\nA Unix datagram socket.\nA Unix domain socket server, listening for connections.\nA Unix stream socket.\nAccepts a new incoming connection to this listener.\nReturns the contents of this address if it is a <code>pathname</code> …\nCreates a Unix datagram socket bound to the given path.\nCreates a Unix datagram listener bound to the given path.\nConnects the socket to the specified address.\nConnects to the socket to the specified address.\nReturns the argument unchanged.\nConverts a <code>std::os::unix::net::UnixDatagram</code> into its …\nConverts a <code>std::os::unix::net::UnixListener</code> into its …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>std::os::unix::net::UnixStream</code> into its …\nReturns the argument unchanged.\nConstructs a <code>SockAddr</code> with the family <code>AF_UNIX</code> and the …\nReturns a stream of incoming connections.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the address is unnamed.\nReturns the address of this socket.\nReturns the local socket address of this listener.\nReturns the socket address of the local half of this …\nCreates an unnamed pair of connected sockets.\nCreates an unnamed pair of connected sockets.\nReturns the address of this socket’s peer.\nReturns the socket address of the remote half of this …\nReceives data from the socket.\nReceives data from the socket.\nSends data on the socket to the socket’s peer.\nSends data on the socket to the specified address.\nShut down the read, write, or both halves of this …\nShuts down the read, write, or both halves of this …\nCreates a Unix datagram which is not bound to any address.\nAn iterator over <code>Path</code> and its ancestors.\nA single component of a path.\nAn iterator over the <code>Component</code>s of a <code>Path</code>.\nA reference to the current directory, i.e., <code>.</code>.\nDevice namespace prefix, e.g., <code>\\\\.\\COM42</code>.\nPrefix <code>C:</code> for the given disk drive.\nHelper struct for safely printing paths with <code>format!</code> and <code>{}</code>…\nAn iterator over the <code>Component</code>s of a <code>Path</code>, as <code>OsStr</code> slices.\nThe primary separator of path components for the current …\nA normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.\nA reference to the parent directory, i.e., <code>..</code>.\nA slice of a path.\nThis struct is an async version of <code>std::path::PathBuf</code>.\nWindows path prefixes, e.g., <code>C:</code> or <code>\\\\server\\share</code>.\nA Windows path prefix, e.g., <code>C:</code> or <code>\\\\server\\share</code>.\nA structure wrapping a Windows path prefix as well as its …\nThe root directory component, appears after any prefix and …\nAn error returned from <code>Path::strip_prefix</code> if the prefix …\nPrefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. …\nVerbatim prefix, e.g., <code>\\\\?\\cat_pics</code>.\nVerbatim disk prefix, e.g., <code>\\\\?\\C:</code>.\nVerbatim prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>,\nProduces an iterator over <code>Path</code> and its ancestors.\nReturns the underlying <code>OsStr</code> slice.\nReturns the raw <code>OsStr</code> slice for this prefix.\nExtracts the underlying <code>OsStr</code> slice.\nExtracts a slice corresponding to the portion of the path …\nExtracts a slice corresponding to the portion of the path …\nCoerces to a <code>Path</code> slice.\nReturns the canonical form of a path.\nProduces an iterator over the <code>Component</code>s of the path.\nReturns an object that implements <code>Display</code> for safely …\nDetermines whether <code>child</code> is a suffix of <code>self</code>.\nReturns <code>true</code> if the path points at an existing entity.\nExtracts the extension of <code>file_name</code>, if possible.\nReturns the final component of the <code>Path</code>, if there is one.\nExtracts the stem (non-extension) portion of <code>file_name</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>true</code> if the <code>Path</code> has a root.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>PathBuf</code> into a boxed <code>Path</code>.\nConsumes the <code>PathBuf</code>, returning its internal <code>OsString</code> …\nConverts a <code>Box&lt;Path&gt;</code> into a <code>PathBuf</code> without copying or …\nReturns <code>true</code> if the <code>Path</code> is absolute, i.e. if it is …\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturns <code>true</code> if the path exists on disk and is pointing at …\nReturns <code>true</code> if the <code>Path</code> is relative, i.e. not absolute.\nDetermines whether the character is one of the permitted …\nDetermines if the prefix is verbatim, i.e., begins with …\nProduces an iterator over the path’s components viewed …\nCreates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.\nReturns the parsed prefix data.\nReads the metadata of a file or directory.\nDirectly wraps a string slice as a <code>Path</code> slice.\nAllocates an empty <code>PathBuf</code>.\nReturns the <code>Path</code> without its final component, if there is …\nTruncates <code>self</code> to <code>self.parent</code>.\nExtends <code>self</code> with <code>path</code>.\nReturns a stream over the entries within a directory.\nReads a symbolic link, returning the file that the link …\nUpdates <code>self.extension</code> to <code>extension</code>.\nUpdates <code>self.file_name</code> to <code>file_name</code>.\nDetermines whether <code>base</code> is a prefix of <code>self</code>.\nReturns a path that becomes <code>self</code> when joined onto <code>base</code>.\nReads the metadata of a file or directory without …\nConverts a <code>Path</code> to an owned <code>PathBuf</code>.\nReturns a <code>&amp;str</code> slice if the <code>Path</code> is valid unicode.\nConverts a <code>Path</code> to a <code>Cow&lt;str&gt;</code>.\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the given …\nCreates an owned <code>PathBuf</code> like <code>self</code> but with the given file …\nExtension methods for <code>Future</code>.\nExtension methods for <code>Stream</code>.\nA stream that chains two streams one after another.\nA stream that clones the elements of an underlying stream.\nA stream that copies the elements of an underlying stream.\nA stream that doesn’t yield any items.\nA stream to filter elements of another stream with a …\nA stream that yields elements by calling a closure.\nA stream that was created from iterator.\nA stream that yields <code>None</code> forever after the underlying …\nA stream that does something with each element of another …\nValues yielded by the stream.\nA stream that maps value of another stream with a function.\nA stream that yields a single item.\nA stream that yields the same item repeatedly.\nA stream that repeats elements of type <code>T</code> endlessly by …\nA stream to maintain state while polling another stream.\nA stream to skip first n elements of another stream.\nA stream to skip elements of another stream based on a …\nA stream that steps a given amount of elements of another …\nA stream of values produced asynchronously.\nExtension methods for <code>Stream</code>.\nA stream that yields the first <code>n</code> items of another stream.\nA stream that yields elements based on a predicate.\nA stream that takes items from two other streams …\nTests if every element of the stream matches a predicate.\nTests if every element of the stream matches a predicate.\nTests if every element of the stream matches a predicate.\nTests if any element of the stream matches a predicate.\nTests if any element of the stream matches a predicate.\nTests if any element of the stream matches a predicate.\nTakes two streams and creates a new stream over both in …\nTakes two streams and creates a new stream over both in …\nTakes two streams and creates a new stream over both in …\nCreates an stream which copies all of its elements.\nCreates an stream which copies all of its elements.\nCreates an stream which copies all of its elements.\nLexicographically compares the elements of this <code>Stream</code> …\nLexicographically compares the elements of this <code>Stream</code> …\nLexicographically compares the elements of this <code>Stream</code> …\nCreates an stream which copies all of its elements.\nCreates an stream which copies all of its elements.\nCreates an stream which copies all of its elements.\nCreates a stream that yields the provided values …\nCreates a stream that yields the provided values …\nCreates a stream that yields the provided values …\nCreates a stream that doesn’t yield any items.\nCreates a stream that gives the current element’s count …\nCreates a stream that gives the current element’s count …\nCreates a stream that gives the current element’s count …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nCreates a stream that uses a predicate to determine if an …\nCreates a stream that uses a predicate to determine if an …\nCreates a stream that uses a predicate to determine if an …\nBoth filters and maps a stream.\nBoth filters and maps a stream.\nBoth filters and maps a stream.\nSearches for an element in a stream that satisfies a …\nSearches for an element in a stream that satisfies a …\nSearches for an element in a stream that satisfies a …\nApplies function to the elements of stream and returns the …\nApplies function to the elements of stream and returns the …\nApplies function to the elements of stream and returns the …\nA combinator that applies a function to every element in a …\nA combinator that applies a function to every element in a …\nA combinator that applies a function to every element in a …\nCall a closure on each element of the stream.\nCall a closure on each element of the stream.\nCall a closure on each element of the stream.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new stream where to produce each new element a …\nConverts an iterator into a stream.\nCreates a stream which ends after the first <code>None</code>.\nCreates a stream which ends after the first <code>None</code>.\nCreates a stream which ends after the first <code>None</code>.\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nA combinator that does something with each element in the …\nA combinator that does something with each element in the …\nA combinator that does something with each element in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the last element of the stream.\nReturns the last element of the stream.\nReturns the last element of the stream.\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nTakes a closure and creates a stream that calls that …\nTakes a closure and creates a stream that calls that …\nTakes a closure and creates a stream that calls that …\nReturns the element that gives the maximum value. If …\nReturns the element that gives the maximum value. If …\nReturns the element that gives the maximum value. If …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value with …\nReturns the element that gives the minimum value. If …\nReturns the element that gives the minimum value. If …\nReturns the element that gives the minimum value. If …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value with …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nDetermines if the elements of this <code>Stream</code> are …\nAdvances the stream and returns the next value.\nAdvances the stream and returns the next value.\nAdvances the stream and returns the next value.\nReturns the nth element of the stream.\nReturns the nth element of the stream.\nReturns the nth element of the stream.\nCreates a stream that yields a single item.\nLexicographically compares the elements of this <code>Stream</code> …\nLexicographically compares the elements of this <code>Stream</code> …\nLexicographically compares the elements of this <code>Stream</code> …\nAttempt to pull out the next value of this stream, …\nSearches for an element in a Stream that satisfies a …\nSearches for an element in a Stream that satisfies a …\nSearches for an element in a Stream that satisfies a …\nCreates a stream that yields the same item repeatedly.\nCreates a new stream that repeats elements of type <code>A</code> …\nA stream adaptor similar to <code>fold</code> that holds internal state …\nA stream adaptor similar to <code>fold</code> that holds internal state …\nA stream adaptor similar to <code>fold</code> that holds internal state …\nReturns the bounds on the remaining length of the stream.\nReturns the bounds on the remaining length of the stream.\nCreates a combinator that skips the first <code>n</code> elements.\nCreates a combinator that skips the first <code>n</code> elements.\nCreates a combinator that skips the first <code>n</code> elements.\nCombinator that <code>skip</code>s elements based on a predicate.\nCombinator that <code>skip</code>s elements based on a predicate.\nCombinator that <code>skip</code>s elements based on a predicate.\nCreates a stream that yields each <code>step</code>th element.\nCreates a stream that yields each <code>step</code>th element.\nCreates a stream that yields each <code>step</code>th element.\nCreates a stream that yields its first <code>n</code> elements.\nCreates a stream that yields its first <code>n</code> elements.\nCreates a stream that yields its first <code>n</code> elements.\nCreates a stream that yields elements based on a predicate.\nCreates a stream that yields elements based on a predicate.\nCreates a stream that yields elements based on a predicate.\nA combinator that applies a function as long as it returns …\nA combinator that applies a function as long as it returns …\nA combinator that applies a function as long as it returns …\nApplies a falliable function to each element in a stream, …\nApplies a falliable function to each element in a stream, …\nApplies a falliable function to each element in a stream, …\n‘Zips up’ two streams into a single stream of pairs.\n‘Zips up’ two streams into a single stream of pairs.\n‘Zips up’ two streams into a single stream of pairs.\nA thread-safe reference-counting pointer. ‘Arc’ stands …\nAn async mutex.\nA guard that releases the mutex when dropped.\nAn owned guard that releases the mutex when dropped.\nAn async reader-writer lock.\nA guard that releases the read lock when dropped.\nA guard that releases the upgradable read lock when …\nA guard that releases the write lock when dropped.\n<code>Weak</code> is a version of <code>Arc</code> that holds a non-owning reference …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nProvides a raw pointer to the data.\nReturns a raw pointer to the object <code>T</code> pointed to by this …\nConverts to <code>Arc&lt;T&gt;</code>.\nConverts to <code>Arc&lt;[T]&gt;</code>.\nMakes a clone of the <code>Arc</code> pointer.\nMakes a clone of the <code>Weak</code> pointer that points to the same …\nComparison for two <code>Arc</code>s.\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nCreates an empty CStr inside an Arc\nCreates an empty <code>[T]</code> inside an Arc\nCreates an empty str inside an Arc\nCreates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating memory. …\nAttempts to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …\nDowncasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …\nDowngrades into a regular reader guard.\nDowngrades into a regular reader guard.\nCreates a new <code>Weak</code> pointer to this allocation.\nDowngrades into an upgradable reader guard.\nDrops the <code>Arc</code>.\nDrops the <code>Weak</code> pointer.\nEquality for two <code>Arc</code>s.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>CString</code> into an Arc&lt;CStr&gt; by moving the <code>CString</code> …\nCopies the string into a newly allocated Arc&lt;OsStr&gt;.\nConverts a <code>T</code> into an <code>Arc&lt;T&gt;</code>\nConverts a <code>[T; N]</code> into an <code>Arc&lt;[T]&gt;</code>.\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted slice and moves <code>v</code>’s items …\nReturns the argument unchanged.\nConverts a <code>&amp;CStr</code> into a <code>Arc&lt;CStr&gt;</code>, by copying the contents …\nConverts a <code>PathBuf</code> into an Arc&lt;Path&gt; by moving the <code>PathBuf</code> …\nConverts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nConverts an atomically reference-counted string slice into …\nCreates an atomically reference-counted pointer from a …\nAllocates a reference-counted <code>str</code> and copies <code>v</code> into it.\nMove a boxed object to a new, reference-counted allocation.\nConverts an <code>OsString</code> into an Arc&lt;OsStr&gt; by moving the …\nConverts a Path into a Rc by copying the Path data into a …\nReturns the argument unchanged.\nTakes each element in the <code>Iterator</code> and collects it into an …\nConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.\nConverts a raw pointer previously created by <code>into_raw</code> back …\nConstructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.\nConverts a raw pointer previously created by <code>into_raw</code> back …\n‘Greater than or equal to’ comparison for two <code>Arc</code>s.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the inner value.\nReturns a mutable reference into the given <code>Arc</code>, if there …\nReturns a mutable reference into the given <code>Arc</code>, without …\nGreater-than comparison for two <code>Arc</code>s.\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the mutex, returning the underlying data.\nUnwraps the lock and returns the inner value.\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nConsumes the <code>Arc</code>, returning the wrapped pointer.\nConsumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.\nConsumes the <code>Arc</code>, returning the wrapped pointer and …\nConsumes the <code>Weak&lt;T&gt;</code>, returning the wrapped pointer and …\n‘Less than or equal to’ comparison for two <code>Arc</code>s.\nAcquires the mutex.\nAcquires the mutex and clones a reference to it.\nAcquires the mutex and clones a reference to it using the …\nAcquires the mutex using the blocking strategy.\nLess-than comparison for two <code>Arc</code>s.\nMakes a mutable reference into the given <code>Arc</code>.\nInequality for two <code>Arc</code>s.\nCreates a new async mutex.\nCreates a new reader-writer lock.\nConstructs a new <code>Arc&lt;T&gt;</code>.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …\nConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.\nConstructs a new <code>Weak&lt;T, A&gt;</code>, without allocating any …\nConstructs a new <code>Arc</code> with uninitialized contents.\nConstructs a new <code>Arc</code> with uninitialized contents in the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nPartial comparison for two <code>Arc</code>s.\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …\nReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation …\nReturns <code>true</code> if the two <code>Weak</code>s point to the same allocation …\nAcquires a read lock.\nAcquires an owned, reference-counted read lock.\nAcquires an owned, reference-counted read lock.\nAcquires a read lock.\nReturns a reference to the mutex a guard came from.\nReturns a reference to the mutex a guard came from.\nGets the number of strong (<code>Arc</code>) pointers to this …\nGets the number of strong (<code>Arc</code>) pointers pointing to this …\nAttempts to acquire the mutex.\nAttempts to acquire the mutex and clone a reference to it.\nConstructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …\nConstructs a new <code>Arc</code> with uninitialized contents, …\nConstructs a new <code>Arc</code> with uninitialized contents, in the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …\nAttempts to acquire a read lock.\nAttempts to acquire an an owned, reference-counted read …\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nAttempts to acquire a read lock with the possiblity to …\nAttempts to acquire an owned, reference-counted read lock …\nAttempts to upgrade into a write lock.\nAttempts to acquire a write lock.\nAttempts to acquire an owned, reference-counted write lock.\nIf we have the only reference to <code>T</code> then unwrap it. …\nAcquires a read lock with the possiblity to upgrade to a …\nAcquires an owned, reference-counted read lock with the …\nAttempts to acquire an owned, reference-counted read lock …\nAttempts to acquire a read lock with the possiblity to …\nUpgrades into a write lock.\nAttempts to upgrade the <code>Weak</code> pointer to an <code>Arc</code>, delaying …\nUpgrades into a write lock.\nGets the number of <code>Weak</code> pointers to this allocation.\nGets an approximation of the number of <code>Weak</code> pointers …\nAcquires a write lock.\nAcquires an owned, reference-counted write lock.\nAcquires an owned, reference-counted write lock.\nAcquires a write lock.\nAn error returned by <code>LocalKey::try_with</code>.\nTask builder that configures the settings of a new task.\nThe context of an asynchronous task.\nA handle that awaits the result of a task.\nThe key for accessing a task-local value.\nRepresents that a value is not ready yet.\nIndicates whether a value is available or if the current …\nRepresents that a value is immediately ready.\nA handle to a task.\nA unique identifier for a task.\nA <code>Waker</code> is a handle for waking up a task by notifying its …\nGets a reference to the underlying <code>RawWaker</code>.\nSpawns a task and blocks the current thread on its result.\nSpawns a task with the configured settings, blocking on …\nCancel this task.\nAssigns a clone of <code>source</code> to <code>self</code>, unless …\nReturns a handle to the current task.\nReturns a reference to the extension data for the current …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUse a <code>Wake</code>-able type as a <code>Waker</code>.\nReturns the argument unchanged.\nMoves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.\nReturns the argument unchanged.\nCreates a new <code>Waker</code> from <code>RawWaker</code>.\nCreates a new <code>Context</code> from a <code>&amp;Waker</code>.\nGets the task’s unique identifier.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the poll is a <code>Pending</code> value.\nReturns <code>true</code> if the poll is a <code>Poll::Ready</code> value.\nReturns a reference to the <code>LocalWaker</code> for the current task.\nMaps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a …\nMaps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …\nMaps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to …\nMaps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …\nMaps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by …\nConfigures the name of the task.\nReturns the name of this task.\nCreates a new builder.\nReturns a reference to a <code>Waker</code> that does nothing when used.\nExtracts the successful type of a <code>Poll&lt;T&gt;</code>.\nSleeps for the specified amount of time.\nSpawns a task.\nSpawns a task with the configured settings.\nSpawns a blocking task.\nReturns a handle to the underlying task.\nReturns a handle to the current task if called within the …\nAttempts to get a reference to the task-local value with …\nWakes up the task associated with this <code>Waker</code>.\nWakes up the task associated with this <code>Waker</code> without …\nReturns a reference to the <code>Waker</code> for the current task.\nReturns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> would awake …\nGets a reference to the task-local value with this key.\nCooperatively gives up a timeslice to the task scheduler.")