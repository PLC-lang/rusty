searchState.loadedDescShard("bstr", 0, "A byte string library.\nA short-hand constructor for building a <code>&amp;[u8]</code>.\nA wrapper for <code>&amp;[u8]</code> that provides convenient string …\nA wrapper for <code>Vec&lt;u8&gt;</code> that provides convenient string …\nA trait that extends <code>&amp;[u8]</code> with string oriented methods.\nA trait that extends <code>Vec&lt;u8&gt;</code> with string oriented methods.\nAn iterator over the bytes in a byte string.\nAn iterator over Unicode scalar values in a byte string …\nAn iterator over Unicode scalar values in a byte string.\nA draining byte oriented iterator for <code>Vec&lt;u8&gt;</code>.\nAn iterator of <code>char</code> values that represent an escaping of …\nAn iterator over the fields in a byte string, separated by …\nAn iterator over fields in the byte string, separated by a …\nAn iterator over non-overlapping substring matches.\nAn iterator over non-overlapping substring matches in …\nA single substring searcher fixed to a particular needle.\nA single substring reverse searcher fixed to a particular …\nAn error that may occur when converting a <code>Vec&lt;u8&gt;</code> to a …\nAn iterator over grapheme clusters in a byte string and …\nAn iterator over grapheme clusters in a byte string.\nAn iterator over all lines in a byte string, without their …\nAn iterator over all lines in a byte string, including …\nAn iterator over sentences in a byte string, along with …\nAn iterator over sentences in a byte string.\nAn iterator over substrings in a byte string, split by a …\nAn iterator over at most <code>n</code> substrings in a byte string, …\nAn iterator over at most <code>n</code> substrings in a byte string, …\nAn iterator over substrings in a byte string, split by a …\nA chunk of valid UTF-8, possibly followed by invalid UTF-8 …\nAn iterator over chunks of valid UTF-8 in a byte slice.\nAn error that occurs when UTF-8 decoding fails.\nAn iterator over words in a byte string and their byte …\nAn iterator over words in a byte string.\nAn iterator over all word breaks in a byte string, along …\nAn iterator over all word breaks in a byte string.\nReturn this byte slice as a <code>&amp;BStr</code>.\nReturn this byte slice as a <code>&amp;BStr</code>.\nReturn this byte slice as a <code>&amp;mut BStr</code>.\nReturn this byte slice as a <code>&amp;mut BStr</code>.\nViews the remaining underlying data as a subslice of the …\nReturn a copy of the rest of the underlying bytes without …\nReturn a copy of the rest of the underlying bytes without …\nReturn the original bytes as a slice that failed to …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nView the underlying data as a subslice of the original …\nReturns an iterator over the bytes in this byte string.\nReturns an iterator over the bytes in this byte string.\nReturns an iterator over the Unicode scalar values in this …\nReturns an iterator over the Unicode scalar values in this …\nReturns an iterator over the Unicode scalar values in this …\nReturns an iterator over the Unicode scalar values in this …\nConcatenate the elements given by the iterator together …\nReturns true if and only if this byte string contains the …\nReturns true if and only if this byte string contains the …\nUTF-8 decode a single Unicode scalar value from the end of …\nUTF-8 decode a single Unicode scalar value from the …\nCreates a draining iterator that removes the specified …\nCreates a draining iterator that removes the specified …\nReturns true if and only if this byte string has the given …\nReturns true if and only if this byte string has the given …\nReturns the total number of invalid UTF-8 bytes …\nEscapes this byte string into a sequence of <code>char</code> values.\nEscapes this byte string into a sequence of <code>char</code> values.\nReturns an iterator over the fields in a byte string, …\nReturns an iterator over the fields in a byte string, …\nReturns an iterator over the fields in a byte string, …\nReturns an iterator over the fields in a byte string, …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of this needle …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of any of the …\nReturns the index of the first occurrence of any of the …\nReturns the index of the first occurrence of the given …\nReturns the index of the first occurrence of the given …\nReturns an iterator of the non-overlapping occurrences of …\nReturns an iterator of the non-overlapping occurrences of …\nReturns the index of the first non-ASCII byte in this byte …\nReturns the index of the first non-ASCII byte in this byte …\nReturns the index of the first occurrence of a byte that …\nReturns the index of the first occurrence of a byte that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an immutable byte string from an OS string slice.\nCreate an immutable byte string from an OS string slice.\nLossily create a new byte string from an OS string slice.\nLossily create a new byte string from an OS string slice.\nCreate a new byte string from an owned OS string.\nCreate a new byte string from an owned OS string.\nCreate an immutable byte string from a file path.\nCreate an immutable byte string from a file path.\nCreate a new byte string from an owned file path.\nCreate a new byte string from an owned file path.\nLossily create a new byte string from a file path.\nLossily create a new byte string from a file path.\nCreate a new owned byte string from the given byte slice.\nCreate a new owned byte string from the given byte slice.\nReturns an iterator over the grapheme clusters in this …\nReturns an iterator over the grapheme clusters in this …\nReturns an iterator over the grapheme clusters in this …\nReturns an iterator over the grapheme clusters in this …\nReturns whether the invalid sequence might still become …\nInserts the given codepoint into this <code>Vec&lt;u8&gt;</code> at a …\nInserts the given codepoint into this <code>Vec&lt;u8&gt;</code> at a …\nInserts the given byte string into this byte string at a …\nInserts the given byte string into this byte string at a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this byte string into an OS string, in place.\nConverts this byte string into an OS string, in place.\nLossily converts this byte string into an OS string, in …\nLossily converts this byte string into an OS string, in …\nConvert this finder into its owned variant, such that it …\nConvert this finder into its owned variant, such that it …\nConverts this byte string into an owned file path, in …\nConverts this byte string into an owned file path, in …\nLossily converts this byte string into an owned file path, …\nLossily converts this byte string into an owned file path, …\nConverts a <code>Vec&lt;u8&gt;</code> into a <code>String</code> if and only if this byte …\nConverts a <code>Vec&lt;u8&gt;</code> into a <code>String</code> if and only if this byte …\nLossily converts a <code>Vec&lt;u8&gt;</code> into a <code>String</code>. If this byte …\nLossily converts a <code>Vec&lt;u8&gt;</code> into a <code>String</code>. If this byte …\nUnsafely convert this byte string into a <code>String</code>, without …\nUnsafely convert this byte string into a <code>String</code>, without …\nConsume this error and return the original byte string …\nReturns the (possibly empty) invalid UTF-8 bytes in this …\nUtilities for working with I/O using byte strings.\nReturns true if and only if every byte in this byte string …\nReturns true if and only if every byte in this byte string …\nReturns true if and only if the entire byte string is …\nReturns true if and only if the entire byte string is …\nJoin the elements given by the iterator with the given …\nReturns the last byte in this byte string, if it’s …\nReturns the last byte in this byte string, if it’s …\nAn iterator over all lines in a byte string, without their …\nAn iterator over all lines in a byte string, without their …\nAn iterator over all lines in a byte string, including …\nAn iterator over all lines in a byte string, including …\nConvert this byte string to its lowercase ASCII equivalent …\nConvert this byte string to its lowercase ASCII equivalent …\nConvert this byte string to its uppercase ASCII equivalent …\nConvert this byte string to its uppercase ASCII equivalent …\nReturns the needle that this finder searches for.\nReturns the needle that this finder searches for.\nDirectly creates a <code>BStr</code> slice from anything that can be …\nConstructs a new <code>BString</code> from the given <code>Vec</code>.\nCreate a new finder for the given needle.\nCreate a new reverse finder for the given needle.\nRemoves the last byte from this <code>Vec&lt;u8&gt;</code> and returns it.\nRemoves the last byte from this <code>Vec&lt;u8&gt;</code> and returns it.\nRemoves the last codepoint from this <code>Vec&lt;u8&gt;</code> and returns …\nRemoves the last codepoint from this <code>Vec&lt;u8&gt;</code> and returns …\nAppends the given byte to the end of this byte string.\nAppends the given byte to the end of this byte string.\nAppends the given <code>char</code> to the end of this byte string.\nAppends the given <code>char</code> to the end of this byte string.\nAppends the given slice to the end of this byte string. …\nAppends the given slice to the end of this byte string. …\nRemoves a <code>char</code> from this <code>Vec&lt;u8&gt;</code> at the given byte …\nRemoves a <code>char</code> from this <code>Vec&lt;u8&gt;</code> at the given byte …\nCreate a new byte string by repeating this byte string <code>n</code> …\nCreate a new byte string by repeating this byte string <code>n</code> …\nReplace all matches of the given needle with the given …\nReplace all matches of the given needle with the given …\nReplace all matches of the given needle with the given …\nReplace all matches of the given needle with the given …\nRemoves the specified range in this byte string and …\nRemoves the specified range in this byte string and …\nReplace up to <code>limit</code> matches of the given needle with the …\nReplace up to <code>limit</code> matches of the given needle with the …\nReplace up to <code>limit</code> matches of the given needle with the …\nReplace up to <code>limit</code> matches of the given needle with the …\nReverse the bytes in this string, in place.\nReverse the bytes in this string, in place.\nReverse the codepoints in this string, in place.\nReverse the codepoints in this string, in place.\nReverse the graphemes in this string, in place.\nReverse the graphemes in this string, in place.\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of this needle in …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of any of the …\nReturns the index of the last occurrence of any of the …\nReturns the index of the last occurrence of the given …\nReturns the index of the last occurrence of the given …\nReturns an iterator of the non-overlapping occurrences of …\nReturns an iterator of the non-overlapping occurrences of …\nReturns the index of the last occurrence of a byte that is …\nReturns the index of the last occurrence of a byte that is …\nSplit this byte string at the last occurrence of <code>splitter</code>.\nSplit this byte string at the last occurrence of <code>splitter</code>.\nReturns an iterator over substrings of this byte string, …\nReturns an iterator over substrings of this byte string, …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns an iterator over the sentences in this byte string …\nReturns an iterator over the sentences in this byte string …\nReturns an iterator over the sentences in this byte string.\nReturns an iterator over the sentences in this byte string.\nSplit this byte string at the first occurrence of <code>splitter</code>.\nSplit this byte string at the first occurrence of <code>splitter</code>.\nReturns an iterator over substrings of this byte string, …\nReturns an iterator over substrings of this byte string, …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns an iterator of at most <code>limit</code> substrings of this …\nReturns true if and only if this byte string has the given …\nReturns true if and only if this byte string has the given …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the ASCII lowercase …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the ASCII lowercase …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the ASCII uppercase …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the ASCII uppercase …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the lowercase equivalent …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the lowercase equivalent …\nWrites the lowercase equivalent of this byte string into …\nWrites the lowercase equivalent of this byte string into …\nCreate an OS string slice from this byte string.\nCreate an OS string slice from this byte string.\nLossily create an OS string slice from this byte string.\nLossily create an OS string slice from this byte string.\nCreate a path slice from this byte string.\nCreate a path slice from this byte string.\nLossily create a path slice from this byte string.\nLossily create a path slice from this byte string.\nSafely convert this byte string into a <code>&amp;str</code> if it’s …\nSafely convert this byte string into a <code>&amp;str</code> if it’s …\nConvert this byte string to a valid UTF-8 string by …\nConvert this byte string to a valid UTF-8 string by …\nCopy the contents of this byte string into the given owned …\nCopy the contents of this byte string into the given owned …\nUnsafely convert this byte string into a <code>&amp;str</code>, without …\nUnsafely convert this byte string into a <code>&amp;str</code>, without …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the uppercase equivalent …\nReturns a new <code>Vec&lt;u8&gt;</code> containing the uppercase equivalent …\nWrites the uppercase equivalent of this byte string into …\nWrites the uppercase equivalent of this byte string into …\nReturn a byte string slice with leading and trailing …\nReturn a byte string slice with leading and trailing …\nReturn a byte string slice with trailing whitespace …\nReturn a byte string slice with trailing whitespace …\nReturn a byte string slice with trailing characters …\nReturn a byte string slice with trailing characters …\nReturn a byte string slice with leading whitespace removed.\nReturn a byte string slice with leading whitespace removed.\nReturn a byte string slice with leading characters …\nReturn a byte string slice with leading characters …\nReturn a byte string slice with leading and trailing …\nReturn a byte string slice with leading and trailing …\nUnescapes the given string into its raw bytes.\nUnescapes the given string into its raw bytes.\nIterate over chunks of valid UTF-8.\nIterate over chunks of valid UTF-8.\nReturn the underlying UTF-8 error that occurred. This …\nReturns the (possibly empty) valid UTF-8 bytes in this …\nReturns the byte index of the position immediately …\nReturns an iterator over the words in this byte string …\nReturns an iterator over the words in this byte string …\nReturns an iterator over the words in this byte string. If …\nReturns an iterator over the words in this byte string. If …\nReturns an iterator over the words and their byte offsets …\nReturns an iterator over the words and their byte offsets …\nReturns an iterator over the words in this byte string, …\nReturns an iterator over the words in this byte string, …\nAn extension trait for <code>std::io::BufRead</code> which provides …\nAn iterator over lines from an instance of <code>std::io::BufRead</code>…\nAn iterator over records from an instance of …\nReturns an iterator over the lines of this reader, where …\nReturns an iterator over byte-terminated records of this …\nExecutes the given closure on each line in the underlying …\nExecutes the given closure on each line in the underlying …\nExecutes the given closure on each byte-terminated record …\nExecutes the given closure on each byte-terminated record …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")