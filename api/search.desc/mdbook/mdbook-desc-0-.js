searchState.loadedDescShard("mdbook", 0, "mdBook\nThe current version of <code>mdbook</code>.\nThe internal representation of a book and infrastructure …\nMdbook’s configuration system.\nThe error types used through out this crate.\nBook preprocessing.\n<code>mdbook</code>’s low level rendering interface.\nVarious helpers and utilities.\nA dumb tree structure representing a book.\nA helper for setting up a new book and its directory …\nEnum representing any type of item which can be added to a …\nA depth-first iterator over the items in a book.\nThe representation of a “chapter”, usually mapping to …\nA nested chapter.\nA struct representing an entry in the <code>SUMMARY.md</code>, possibly …\nA link to a chapter.\nThe object used to manage and build a book.\nA part title.\nA part title.\nA section number like “1.2.3”, basically just a newtype…\nA section separator.\nA separator (<code>---</code>).\nThe parsed <code>SUMMARY.md</code>, specifying how the book should be …\nAn item in <code>SUMMARY.md</code> which could be either a separator or …\nA representation of the book’s contents in memory.\nTells the renderer to build our book and put it in the …\nGenerate the actual book. This will:\nThe logic for determining where a backend should put its …\nGet the config used by the <code>BookBuilder</code>.\nThe configuration used to tweak now a book is built.\nThe chapter’s contents.\nShould the theme be copied into the generated book (so …\nShould we create a <code>.gitignore</code> file?\nRun the entire build process for a particular <code>Renderer</code>.\nRecursively apply a closure to each item in the book, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>init()</code> gives you a <code>BookBuilder</code> which you can use to setup …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the chapter is a draft chapter, meaning it has no …\nReturns a flat depth-first iterator over the elements of …\nGet a depth-first iterator over the items in the book.\nLoad a book from its root directory on disk.\nLoad a book into memory from its <code>src/</code> directory.\nLoad a book from its root directory using a custom <code>Config</code>.\nLoad a book from its root directory using a custom <code>Config</code> …\nThe location of the chapter’s source file, taking the …\nThe chapter’s name.\nThe name of the chapter.\nAny nested items this chapter may contain.\nCreate an empty book.\nCreate a new chapter with the provided content.\nCreate a new <code>BookBuilder</code> which will generate a book in the …\nCreate a new link with no nested items.\nCreate a new draft chapter that is not attached to a …\nThe chapter’s section number, if it has one.\nThe section number, if this chapter is in the numbered …\nThe main numbered chapters of the book, broken into one or …\nAn ordered list of the names of each chapter above this …\nParse the text from a <code>SUMMARY.md</code> file into a sort of “…\nThe chapter’s location, relative to the <code>SUMMARY.md</code> file.\nChapters before the main text (e.g. an introduction).\nRun preprocessors and return the final book.\nAppend a <code>BookItem</code> to the <code>Book</code>.\nThe book’s root directory.\nThe sections in this book.\nGet the directory containing this book’s source files.\nThe chapter’s source file, relative to the <code>SUMMARY.md</code> …\nNested items.\nItems which come after the main document (e.g. a …\nRun <code>rustdoc</code> tests on the book, linking against the …\nRun <code>rustdoc</code> tests on a specific chapter of the book, …\nGet the directory containing the theme resources for the …\nAn optional title for the <code>SUMMARY.md</code>, currently just …\nSet the <code>Config</code> to be used.\nRegister a <code>Preprocessor</code> to be used when rendering the book.\nYou can change the default renderer to another one by …\nConfiguration options which are specific to the book and …\nConfiguration for the build procedure.\nConfiguration for tweaking how the HTML renderer handles …\nThe overall configuration object for MDBook, essentially …\nThe 2015 edition of Rust\nThe 2018 edition of Rust\nThe 2021 edition of Rust\nThe 2024 edition of Rust\nConfiguration for how to fold chapters of sidebar.\nConfiguration for the HTML renderer.\nLeft to right.\nConfiguration for tweaking how the HTML renderer handles …\nConfiguration for how to render the print icon, …\nRight to left\nConfiguration for the Rust compiler(e.g., for playground)\nRust edition to use for the code.\nConfiguration of the search functionality of the HTML …\nSearch options for chapters (or paths).\nText direction to use for HTML output\nAdditional CSS stylesheets to include in the rendered page…\nAdditional JS scripts to include at the bottom of the …\nThe book’s authors.\nMetadata about the book.\nBoost factor for the search result score if a search word …\nBoost factor for the search result score if a search word …\nBoost factor for the search result score if a search word …\nInformation about the build environment.\nWhere to put built artefacts relative to the book’s root …\nSpecifies search settings for the given path.\nThe DNS subdomain or apex domain at which your book will …\nCode settings.\nWhether to fonts.css and respective font files to the …\nCopy JavaScript files for the editor to the output …\nCopy JavaScript files for the search functionality to the …\nDisplay the copy button. Default: <code>true</code>.\nShould non-existent markdown files specified in <code>SUMMARY.md</code> …\nDeprecated alias for <code>smart_punctuation</code>.\nThe default theme to use, defaults to ‘light’\nAn optional description for the book.\nEdit url template, when set shows a “Suggest an edit” …\nShould playground snippets be editable? Default: <code>false</code>.\nRust edition used in playground\nWhether print support is enabled.\nWhen off, all folds are open. Default: <code>false</code>.\nEnable the search feature. Default: <code>true</code>.\nWhether or not indexing is enabled, default <code>true</code>.\nTrue if the searchword <code>micro</code> should match <code>microwave</code>. …\nExtra directories to trigger rebuild when watching/serving\nFold settings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad the configuration file from disk.\nGets the text direction from language code\nLoad a <code>Config</code> from some string.\nFetch an arbitrary item from the <code>Config</code> as a <code>toml::Value</code>.\nDeprecated, use get_deserialized_opt instead.\nConvenience function to fetch a value from the config and …\nFetch a value from the <code>Config</code> so you can mutate it.\nGet the table associated with a particular preprocessor.\nGet the table associated with a particular renderer.\nFontAwesome icon class to use for the Git repository link. …\nGit repository url. If <code>None</code>, the git button will not be …\nAn optional google analytics code.\nIf this option is turned on, “cache bust” static files …\nDocuments are split into smaller parts, separated by …\nA prefix string to hide lines per language (one or more …\nInput path for the 404 file, defaults to 404.md, set to “…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe main language of the book.\nThe higher the more folded regions are open. When level is …\nMaximum number of visible results. Default: <code>30</code>.\nDisplay line numbers on playground snippets. Default: <code>false</code>…\nShould mathjax be enabled?\nDoes this book support more than one language?\nDon’t render section labels.\nInsert page breaks between chapters. Default: <code>true</code>.\nPlayground settings.\nThe theme to use if the browser requests the dark version …\nPrint settings.\nGets the realized text direction, either from …\nThe mapping from old pages to new pages/URLs to use when …\nDisplay the run button. Default: <code>true</code>\nInformation about Rust language support.\nSearch settings. If <code>None</code>, the default will be used.\nSet a config key, clobbering any existing values along the …\nAbsolute url to site, used to emit correct paths for the …\nReturns <code>true</code> if smart punctuation is enabled.\nSupports smart quotes, apostrophes, ellipsis, en-dash, and …\nLocation of the book source relative to the book’s root …\nThe number of words used for a search result teaser. …\nThe direction of text in the book: Left-to-right (LTR) or …\nThe theme directory, if specified.\nReturns the directory of theme from the provided root …\nThe book’s title.\nUpdates the <code>Config</code> from the available environment …\nDefine the logical link between multiple search words. If …\nShould the default preprocessors always be used when they …\nContains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nGet the backtrace for this Error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturns the argument unchanged.\nConstruct an error object from a type-erased standard …\nCalls <code>U::from(self)</code>.\nConvert to a standard library error trait object.\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nConvert to a standard library error trait object.\nThe lowest level cause of this error — this error’s …\nA custom preprocessor which will shell out to a 3rd-party …\nA preprocessor for converting file name <code>README.md</code> to …\nA preprocessor for expanding helpers in a chapter. …\nAn operation which is run immediately after loading a book …\nExtra information for a <code>Preprocessor</code> to give them more …\nThe command this <code>Preprocessor</code> will invoke.\nThe book configuration (<code>book.toml</code>).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe calling <code>mdbook</code> version.\nGet the <code>Preprocessor</code>’s name.\nCreate a new <code>CmdPreprocessor</code>.\nCreate a new <code>IndexPreprocessor</code>.\nCreate a new <code>LinkPreprocessor</code>.\nA convenience function custom preprocessors can use to …\nThe <code>Renderer</code> this preprocessor is being used with.\nThe location of the book directory on disk.\nRun this <code>Preprocessor</code>, allowing it to update the book …\nA hint to <code>MDBook</code> whether this preprocessor is compatible …\nA generic renderer which will shell out to an arbitrary …\nThe HTML renderer for mdBook.\nA renderer to output the Markdown after the preprocessors …\nThe context provided to all renderers.\nAn arbitrary <code>mdbook</code> backend.\nA loaded representation of the book itself.\nThe loaded configuration file.\nWhere the renderer <em>must</em> put any build artefacts generated. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad a <code>RenderContext</code> from its JSON representation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Renderer</code>’s name.\nReturns a new instance of <code>HtmlHandlebars</code>.\nCreate a new <code>MarkdownRenderer</code> instance.\nCreate a new <code>RenderContext</code>.\nCreate a new <code>CmdRenderer</code> which will invoke the provided <code>cmd</code>…\nInvoke the <code>Renderer</code>, passing in all the necessary …\nThe book’s root directory.\nGet the source directory’s (absolute) path on disk.\nWhich version of <code>mdbook</code> did this come from (as written in …\nThe <code>Theme</code> struct should be used instead of the static …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a <code>Theme</code> from the given <code>theme_dir</code>. If a file is …\nTheme dependencies for the playground editor.\nTheme dependencies for in-browser search. Not included in …\nReplaces multiple consecutive whitespace characters with a …\nFilesystem utilities and helpers.\nGenerate an ID for use with anchors which is derived from …\nPrints a “backtrace” of some <code>Error</code>.\nCreates a new pulldown-cmark parser of the given text.\nConvert the given string to a valid HTML element ID. The …\nWrapper around the pulldown-cmark parser for rendering …\nRenders markdown to HTML.\nTake anchored lines from a string. Lines containing anchor …\nTake a range of lines from a string.\nKeep lines between the anchor comments specified as-is. …\nKeep lines contained within the range specified as-is. For …\nGenerate an ID for use with anchors which is derived from …\nCopies all files of a directory to another one except the …\nThis function creates a file and returns it. But before …\nReturns the name of the file used for HTTP 404 “not found…\nNaively replaces any path separator with a forward-slash …\nTakes a path and returns a path containing just enough <code>../</code> …\nRemoves all the content of a directory but not the …\nWrite the given data to a file, creating it first if …")