searchState.loadedDescShard("plc_driver", 0, "Compiler driver for the PLC Compiler\nThe location where the build would happen. This is None if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates an IR string from a list of sources. Useful for …\nGenerates an IR string from a list of sources with debug …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the resulting compiled file\nParses and annotates a given project. Can be used in tests …\nDefault project location (where the plc.json is defined, …\nUses build description file.\nUsed to trigger a check, but not compile action.\nPrints out various configuration options\nExplains an error code\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the location where the build artifacts should be …\nDeprecated, replaced with [<code>Error::context()</code>]\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf set, no files will be generated\nDeprecated, replaced with [<code>Error::kind()</code>]\nA project that has been annotated with information about …\nA project that has been transformed into a binary …\nA project that has also been indexed Units inside an index …\nRepresents a parsed project For this struct to be built, …\nCreates annotations on the project in order to facilitate …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an index out of a pased project. The index could …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParses a giving project, transforming it to a <code>ParsedProject</code>\nValidates the project, reports any new diagnostics on the …\nCompiles and runs the given sources Sources must be …\nA Convenience method to compile and then run the given …\nA Convenience method to compile and then run the given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")