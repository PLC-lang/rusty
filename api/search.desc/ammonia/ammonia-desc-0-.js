searchState.loadedDescShard("ammonia", 0, "Ammonia is a whitelist-based HTML sanitization library. It …\nTypes that implement this trait can be used to remove or …\nAn HTML sanitizer.\nRewrite URLs with a custom function.\nRelative URLs will be completely stripped from the …\nA sanitized HTML document.\nRelative URLs will be passed through unchanged.\nRelative URLs will be changed into absolute URLs, based on …\nForce absolute and relative paths into a particular …\nA parsed URL record.\nPolicy for relative URLs, that is, URLs that do not …\nTypes that implement this trait can be used to convert a …\nAdd additonal whitelisted classes without overwriting old …\nAdd additonal blacklisted clean-content tags without …\nAdd additional whitelisted attribute prefix without …\nAdd additonal whitelisted attributes without overwriting …\nAdd additonal whitelisted tag-specific attribute values …\nAdd additonal whitelisted tag-specific attributes without …\nAdd additonal whitelisted tags without overwriting old …\nAdd additonal whitelisted URL schemes without overwriting …\nSets the CSS classes that are allowed on specific tags.\nReturn the serialization of this URL.\nAllows rewriting of all attributes using a callback.\nReturn the authority of this URL as an ASCII string.\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nClean HTML with a conservative set of defaults.\nSanitizes an HTML fragment in a string according to the …\nSets the tags whose contents will be completely removed …\nSanitizes an HTML fragment from a reader according to the …\nTurn an arbitrary string into unformatted HTML.\nReturns a copy of the set of whitelisted class attributes.\nReturns a copy of the set of blacklisted clean-content …\nReturns a copy of the set of whitelisted attribute …\nReturns a copy of the set of whitelisted attributes.\nReturns a copy of the set of tag-specific attribute values …\nReturns a copy of the set of whitelisted tag-specific …\nReturns a copy of the set of whitelisted tag-specific …\nReturns a copy of the set of whitelisted tags.\nReturns a copy of the set of whitelisted URL schemes.\nIf this URL has a host and it is a domain name (not an IP …\nConstructs a <code>Builder</code> instance configured with no allowed …\nReturn <code>None</code> to remove the attribute. Return <code>Some(str)</code> to …\nReturn <code>None</code> to remove the attribute. Return <code>Some(str)</code> to …\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nSets the prefix of attributes that are allowed on any tag.\nSets the attributes that are allowed on any tag.\nReturns the settings for links’ <code>rel</code> attribute, if one is …\nReturns the value that will be set for the attribute on …\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nPrefixes all “id” attribute values with a given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the serialization of this URL.\nDetermine if a given string contains HTML\nReturn whether the URL is special (has a special scheme)\nReturns <code>true</code> if the relative URL resolver is set to <code>Custom</code>.\nReturns <code>true</code> if the relative URL resolver is set to <code>Deny</code>.\nReturns <code>true</code> if the relative URL resolver is set to …\nParse a string as an URL, with this URL as the base URL.\nConfigures a <code>rel</code> attribute that will be added on links.\nCreates a relative URL if possible, with this URL as the …\nConstructs a <code>Builder</code> instance configured with the default …\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nParse an absolute URL from a string.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nRemove already-whitelisted attributes.\nRemove already-blacklisted clean-content tags.\nRemove already-whitelisted attribute prefixes.\nRemove already-whitelisted attributes.\nRemove existing tag-specific attribute values to be set.\nRemove already-whitelisted tag-specific attribute values.\nRemove already-whitelisted tag-specific attributes.\nRemove already-whitelisted tags.\nRemove already-whitelisted attributes.\nReturn the scheme of this URL, lower-cased, as an ASCII …\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nAdd an attribute value to set on a specific element.\nSets the values of HTML attributes that are to be set on …\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nConfigures the handling of HTML comments.\nSets the values of HTML attributes that are allowed on …\nSets the HTML attributes that are allowed on specific tags.\nSets the tags that are allowed.\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nConfigures the behavior for relative URLs: pass-through, …\nSets the URL schemes permitted on <code>href</code> and <code>src</code> attributes.\nReturn the username for this URL (typically the empty …\nReturns <code>true</code> if comment stripping is turned on.\nSerializes a <code>Document</code> instance to a writer.\nThe “current path” used to resolve relative paths.\nThe URL that is treated as the root by the resolver.")