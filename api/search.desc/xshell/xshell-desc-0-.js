searchState.loadedDescShard("xshell", 0, "xshell is a swiss-army knife for writing cross-platform “…\nA builder object for constructing a subprocess.\nContains the error value\nAn error returned by an <code>xshell</code> operation.\nContains the success value\nRAII guard returned from <code>Shell::push_dir</code>.\nRAII guard returned from <code>Shell::push_env</code>.\n<code>Result</code> from std, with the error type defaulting to xshell…\nA <code>Shell</code> is the main API entry point.\nA temporary directory.\nAdds an argument to this commands.\nAdds all of the arguments to this command.\nChanges the working directory for this <code>Shell</code>.\nCreates a new <code>Cmd</code> that executes the given <code>program</code>.\nConstructs a <code>Cmd</code> from the given string.\nCopies <code>src</code> into <code>dst</code>.\nCreates the specified directory.\nCreates an empty named world-readable temporary directory.\nReturns the working directory for this <code>Shell</code>.\nOverrides the value of the environmental variable for this …\nRemoves all of the environment variables from this command.\nRemoves the environment variable from this command.\nOverrides the values of specified environmental variables …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHardlinks <code>src</code> to <code>dst</code>.\nDon’t return an error if command the command exits with …\nIgnores the standard output stream of the process.\nIgnores the standard output stream of the process.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Shell</code>.\nRun the command and return its output.\nReturns the path to the underlying temporary directory.\nReturns whether a file or directory exists at the given …\nTemporary changes the working directory of this <code>Shell</code>.\nTemporary sets the value of <code>key</code> environment variable for …\nDon’t echo the command itself to stderr.\nRun the command and return its stdout as a string. Any …\nRead the entire contents of a file into a vector of bytes.\nReturns a sorted list of paths directly contained in the …\nRead the entire contents of a file into a string.\nRun the command and return its stderr as a string. Any …\nRemoves the file or directory at the given path.\nRuns the command.\nMarks the command as secret.\nControls whether non-zero exit status is considered an …\nControls whether the standard error is ignored.\nControls whether the standard output is ignored.\nControls whether the command itself is printed to stderr.\nControls whether the command is secret.\nSets the value of <code>key</code> environment variable for this <code>Shell</code> …\nPass the given slice to the standard input of the spawned …\nFetches the environmental variable <code>key</code> for this <code>Shell</code>.\nFetches the environmental variable <code>key</code> for this <code>Shell</code> as …\nWrite a slice as the entire contents of a file.")