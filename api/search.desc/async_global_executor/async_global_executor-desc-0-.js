searchState.loadedDescShard("async_global_executor", 0, "A global executor built on top of async-executor and …\nConfiguration to init the thread pool for the …\nA spawned task.\nRuns the global and the local executor on the current …\nCancels the task and waits for it to stop running.\nDetaches the task to let it keep running in the background.\nConverts this task into a <code>FallibleTask</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInit the global executor, spawning as many threads as the …\nInit the global executor, spawning as many threads as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the current task is finished.\nGet the metadata associated with this task.\nSpawns a task onto the multi-threaded global executor.\nRuns blocking code on a thread pool.\nSpawns a task onto the local executor.\nSpawn more executor threads, up to configured max value.\nStop the current executor thread, if we exceed the …\nStop one of the executor threads, down to configured min …\nUse the specified environment variable to find the number …\nUse the specified value as the maximum number of threads …\nUse the specified value as the minimum number of threads.\nUse the specified prefix to name the threads.")