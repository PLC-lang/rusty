searchState.loadedDescShard("notify_debouncer_mini", 0, "Debouncer for notify. Filters incoming events and emits …\nNo precise events\nEvent but debounce timed out (for example continuous …\nConfig for debouncer-mini\nThe set of requirements for watcher debounce event …\nA result of debounced events. Comes with either a vec of …\nA debounced event.\nA debounced event kind.\nDebouncer guard, stops the debouncer on drop\nContains the error value\nContains the success value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandles an event.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvent kind\nShort function to create a new debounced watcher with the …\nCreates a new debounced watcher with custom configuration.\nEvent path\nAccess to the internally used notify Watcher backend\nSet batch mode\nSet <code>notify::Config</code> for the backend\nSet timeout")