searchState.loadedDescShard("plc_diagnostics", 0, "This crates handles diagnostics, from creation to …\nthe assessor determins the severity of a diagnostic this …\nthe Diagnostician handle’s Diangostics with the help of a\ndetermines the severity of the given diagnostic\nCreates a buffered-diagnostician that saves its reports in …\nCreates a clang-format-diagnostician that reports …\nExplains the given error based on the diagnostician …\nExplain the error with the given code by consulting the …\nReturns the argument unchanged.\nReturns a serialized version of the diagnostics …\nAssess and reports the given diagnostics.\nCalls <code>U::from(self)</code>.\nCreates a null-diagnostician that does not report …\nregisters the given source-code at the diagnostician, so …\nThe <code>Diagnostics</code> struct describes an issue encountered …\na diagnostics severity\nError code for reference in the documentation\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf the diagnostic is caused by an error, this field …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Description of the error being reported.\nPrimary location where the diagnostic occurred\nSeconday locations relevant to the diagnostics\nChildren of the current diagnostic\nAssesses the diagnostic based on the current registered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe DiagnosticReporter decides on the format and where to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nregister the given path &amp; src and returns an ID to indicate\nreports the given diagnostic\nA reporter that reports diagnostics in clang format. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA reporter that reports diagnostics using …\ncreates the default CodeSpanDiagnosticReporter reporting …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA reporter that consumes all diagnostics without reporting …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")