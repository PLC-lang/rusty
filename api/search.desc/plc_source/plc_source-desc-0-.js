searchState.loadedDescShard("plc_source", 0, "The SourceCode unit is the smallest unit of compilation …\nExtension trait to create sources with names from strs, …\nSourceContainers offer source-code to be compiled via the …\nRepresents the type of source a SourceContainer holds\nA normal text file, the content of the file could be parsed\nUnknown type, probably a binary\nAn xml file, probably cfc\nReturns the argument unchanged.\nReturns the argument unchanged.\nreturns the location of this source-container. Used when …\nReturns a staticly available location for this source\nReturns the <code>SourceType</code> for the current container, by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nloads and returns the SourceEntry that contains the …\nthe location this code was loaded from\nthe location this code was loaded from\nthe source code to be compiled\nthe source code to be compiled\nThe location of a block in a diagram\nRepresents the location of a code element in a source code\nAn element spanning multiple IDs\nA datastructure that stores the location of newline …\nThe location does not point anywhere in the file\nA location inside a text\nThe location of a certain element in a text file\ncreates a new SourceRange using the factory’s file_name\nconstructs a SourceRangeFactory used to construct …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a codespan from line, column and range info\nGets the colmumn representation for a source location If …\nGets the colmumn representation for a source location If …\nreturns the 0 based column of the given offset-location\nreturns the 0 based column of end-of-line character for …\nGets the line representation for a source location If the …\nGets the line representation for a source location If the …\nreturns the 0 based line-nr of the given offset-location\nSame as [<code>get_line</code>] but adds one to the line number if its …\nconstructs a SourceRangeFactory used for internally …\ncreates a SymbolLocation with undefined source_range used …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns true if this SourceRange points to an undefined …\nreturns a new SourceRange that spans <code>this</code> and the <code>other</code> …\nconverts this SourceRange into a Range\nConstructs an undefined SourceRange with a 0..0 range and …")