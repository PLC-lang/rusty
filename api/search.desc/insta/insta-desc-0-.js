searchState.loadedDescShard("insta", 0, "What are snapshot tests\nSnapshot metadata information.\nConfigures how insta operates at test time.\nA helper to work with stored snapshots.\nUtility macro to permit a multi-snapshot run where all …\nAsserts a <code>Debug</code> snapshot.\nAsserts a <code>Display</code> snapshot.\nAsserts a string snapshot.\nRuns a function with the current settings bound to the …\nLike <code>bind</code> but for futures.\nBinds the settings to the current thread and resets when …\nReturns a copy of the current settings.\nThe snapshot contents\nThe snapshot contents as a &amp;str\nReturns the current description\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoads a snapshot from a file.\nReturns the current info\nReturns the current input file reference.\nExposes some library internals.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSnapshot contents match another snapshot’s.\nSnapshot contents <em>and</em> metadata match another snapshot’s.\nThe metadata in the snapshot.\nReturns the module name.\nReturns the default settings.\nReturns true if expressions are omitted from snapshots.\nReturns the current value for module name prepending.\nRemoves the description.\nRemoves the info.\nRemoves the input file reference.\nRemoves the snapshot suffix.\nSets the description.\nSets the input file reference.\nIf set to true, does not retain the expression in the …\nDisables prepending of modules to the snapshot filename.\nSets the info from a content object.\nSets the snapshot path.\nSets the snapshot suffix.\nEnables forceful sorting of maps before serialization.\nReturns the snapshot name.\nReturns the snapshot path.\nReturns the current snapshot suffix.\nReturns the current value for map sorting.\nSettings configuration macro.\nSpecial marker to use an automatic name.\nRepresents variable typed content.\nSnapshot metadata information.\nReturned from <code>bind_to_scope</code>\nThe contents of a Snapshot\nReturns the value as bool\nReturns the value as bytes\nReturns the value as f64\nReturns the value as i128\nReturns the value as i64\nReturns the value as slice of content values.\nReturns the value as string\nReturns the snapshot contents as string with surrounding …\nReturns the value as u128\nReturns the value as u64\nReturns the assertion line.\nReturns the description that created the snapshot.\nReturns the expression that created the snapshot.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the relative source path.\nReturns the input file reference.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the value is nil.\nThis resolves the innermost content in a chain of wrapped …\nMutable version of <code>resolve_inner</code>.\nReturns the absolute source path.\nRecursively walks the content structure mutably.")