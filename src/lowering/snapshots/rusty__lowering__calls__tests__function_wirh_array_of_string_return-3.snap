---
source: src/lowering/calls.rs
expression: unit
---
CompilationUnit {
    global_vars: [
        VariableBlock {
            variables: [],
            variable_block_type: Global,
        },
    ],
    var_config: [],
    pous: [
        POU {
            name: "foo",
            variable_blocks: [
                VariableBlock {
                    variables: [
                        Variable {
                            name: "foo",
                            data_type: DataTypeReference {
                                referenced_type: "__foo_return",
                            },
                        },
                    ],
                    variable_block_type: InOut,
                },
            ],
            pou_type: Function,
            return_type: Some(
                Aggregate {
                    referenced_type: "__foo_return",
                },
            ),
            interfaces: [],
        },
        POU {
            name: "main",
            variable_blocks: [],
            pou_type: Function,
            return_type: None,
            interfaces: [],
        },
    ],
    implementations: [
        Implementation {
            name: "foo",
            type_name: "foo",
            linkage: Internal,
            pou_type: Function,
            statements: [
                Assignment {
                    left: ReferenceExpr {
                        kind: Index(
                            LiteralInteger {
                                value: 0,
                            },
                        ),
                        base: Some(
                            ReferenceExpr {
                                kind: Member(
                                    Identifier {
                                        name: "foo",
                                    },
                                ),
                                base: None,
                            },
                        ),
                    },
                    right: LiteralString {
                        value: "hello",
                        is_wide: false,
                    },
                },
                Assignment {
                    left: ReferenceExpr {
                        kind: Index(
                            LiteralInteger {
                                value: 1,
                            },
                        ),
                        base: Some(
                            ReferenceExpr {
                                kind: Member(
                                    Identifier {
                                        name: "foo",
                                    },
                                ),
                                base: None,
                            },
                        ),
                    },
                    right: LiteralString {
                        value: "world",
                        is_wide: false,
                    },
                },
            ],
            overriding: false,
            generic: false,
            access: None,
        },
        Implementation {
            name: "main",
            type_name: "main",
            linkage: Internal,
            pou_type: Function,
            statements: [
                ExpressionList {
                    expressions: [
                        Allocation {
                            name: "__foo0",
                            reference_type: "__foo_return",
                        },
                        CallStatement {
                            operator: ReferenceExpr {
                                kind: Member(
                                    Identifier {
                                        name: "foo",
                                    },
                                ),
                                base: None,
                            },
                            parameters: Some(
                                ExpressionList {
                                    expressions: [
                                        ReferenceExpr {
                                            kind: Member(
                                                Identifier {
                                                    name: "__foo0",
                                                },
                                            ),
                                            base: None,
                                        },
                                    ],
                                },
                            ),
                        },
                        ReferenceExpr {
                            kind: Member(
                                Identifier {
                                    name: "__foo0",
                                },
                            ),
                            base: None,
                        },
                    ],
                },
            ],
            overriding: false,
            generic: false,
            access: None,
        },
    ],
    interfaces: [],
    user_types: [
        UserTypeDeclaration {
            data_type: ArrayType {
                name: Some(
                    "__foo_return",
                ),
                bounds: RangeStatement {
                    start: LiteralInteger {
                        value: 0,
                    },
                    end: LiteralInteger {
                        value: 1,
                    },
                },
                referenced_type: DataTypeReference {
                    referenced_type: "STRING",
                },
                is_variable_length: false,
            },
            initializer: None,
            scope: Some(
                "foo",
            ),
        },
    ],
    file: File(
        "<internal>",
    ),
}
