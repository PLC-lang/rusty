---
source: src/codegen/tests/debug_tests/expression_debugging.rs
assertion_line: 55
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%myPrg = type {}
%myFb = type {}

@myPrg_instance = global %myPrg zeroinitializer, !dbg !0
@__myFb__init = unnamed_addr constant %myFb zeroinitializer, !dbg !9

define i32 @myFunc() !dbg !15 {
entry:
  %a = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a, metadata !18, metadata !DIExpression()), !dbg !19
  %b = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %b, metadata !20, metadata !DIExpression()), !dbg !21
  %c = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c, metadata !22, metadata !DIExpression()), !dbg !23
  %myFunc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %myFunc, metadata !24, metadata !DIExpression()), !dbg !25
  store i32 0, i32* %a, align 4
  store i32 0, i32* %b, align 4
  store i32 0, i32* %c, align 4
  store i32 0, i32* %myFunc, align 4
  %myFunc_ret = load i32, i32* %myFunc, align 4
  ret i32 %myFunc_ret
}

define void @myPrg(%myPrg* %0) !dbg !26 {
entry:
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 0, i32* %a, align 4
  store i32 0, i32* %b, align 4
  store i32 0, i32* %c, align 4
  ret void
}

define void @myFb(%myFb* %0) !dbg !27 {
entry:
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  store i32 0, i32* %a, align 4
  store i32 0, i32* %b, align 4
  store i32 0, i32* %c, align 4
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!12}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myPrg", scope: !2, file: !2, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "main", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myPrg", scope: !2, file: !2, size: 96, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myPrg")
!4 = !{!5, !7, !8}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, baseType: !6, size: 32, align: 32, flags: DIFlagPublic)
!6 = !DIBasicType(name: "dint", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!7 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, baseType: !6, size: 32, align: 32, offset: 32, flags: DIFlagPublic)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2, file: !2, baseType: !6, size: 32, align: 32, offset: 64, flags: DIFlagPublic)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "__myFb__init", scope: !2, file: !2, type: !11, isLocal: false, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_structure_type, name: "myFb", scope: !2, file: !2, size: 96, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myFb")
!12 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !13, globals: !14, splitDebugInlining: false)
!13 = !{}
!14 = !{!0, !9}
!15 = distinct !DISubprogram(name: "myFunc", linkageName: "myFunc", scope: !2, file: !2, line: 1, type: !16, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !13)
!16 = !DISubroutineType(flags: DIFlagPublic, types: !17)
!17 = !{null}
!18 = !DILocalVariable(name: "a", scope: !2, file: !2, line: 2, type: !6, align: 32)
!19 = !DILocation(line: 2, column: 12, scope: !15)
!20 = !DILocalVariable(name: "b", scope: !2, file: !2, line: 2, type: !6, align: 32)
!21 = !DILocation(line: 2, column: 14, scope: !15)
!22 = !DILocalVariable(name: "c", scope: !2, file: !2, line: 2, type: !6, align: 32)
!23 = !DILocation(line: 2, column: 16, scope: !15)
!24 = !DILocalVariable(name: "myFunc", scope: !2, file: !2, line: 1, type: !6, align: 32)
!25 = !DILocation(line: 1, column: 17, scope: !15)
!26 = distinct !DISubprogram(name: "myPrg", linkageName: "myPrg", scope: !2, file: !2, line: 4, type: !16, scopeLine: 4, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !13)
!27 = distinct !DISubprogram(name: "myFb", linkageName: "myFb", scope: !2, file: !2, line: 7, type: !16, scopeLine: 7, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !12, retainedNodes: !13)

