---
source: src/codegen/tests/debug_tests/expression_debugging.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%myPrg = type {}
%myFb = type {}

@myPrg_instance = global %myPrg zeroinitializer, section "var-$RUSTY$myPrg_instance:r0", !dbg !0
@__myFb__init = unnamed_addr constant %myFb zeroinitializer, section "var-$RUSTY$__myFb__init:r0", !dbg !5

define i32 @myFunc() section "fn-$RUSTY$myFunc:i32" !dbg !13 {
entry:
  %myFunc = alloca i32, align 4, !dbg !16
  call void @llvm.dbg.declare(metadata i32* %myFunc, metadata !17, metadata !DIExpression()), !dbg !19
  store i32 0, i32* %myFunc, align 4, !dbg !16
  %myFunc_ret = load i32, i32* %myFunc, align 4, !dbg !16
  ret i32 %myFunc_ret, !dbg !16
}

define void @myPrg(%myPrg* %0) section "fn-$RUSTY$myPrg:v" !dbg !20 {
entry:
  call void @llvm.dbg.declare(metadata %myPrg* %0, metadata !21, metadata !DIExpression()), !dbg !22
  ret void, !dbg !22
}

define void @myFb(%myFb* %0) section "fn-$RUSTY$myFb:v" !dbg !23 {
entry:
  call void @llvm.dbg.declare(metadata %myFb* %0, metadata !24, metadata !DIExpression()), !dbg !25
  ret void, !dbg !25
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!8, !9}
!llvm.dbg.cu = !{!10}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myPrg", scope: !2, file: !2, line: 4, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myPrg", scope: !2, file: !2, line: 4, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myPrg")
!4 = !{}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "__myFb__init", scope: !2, file: !2, line: 6, type: !7, isLocal: false, isDefinition: true)
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "myFb", scope: !2, file: !2, line: 6, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myFb")
!8 = !{i32 2, !"Dwarf Version", i32 5}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = distinct !DICompileUnit(language: DW_LANG_C, file: !11, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !12, splitDebugInlining: false)
!11 = !DIFile(filename: "<internal>", directory: "src")
!12 = !{!0, !5}
!13 = distinct !DISubprogram(name: "myFunc", linkageName: "myFunc", scope: !2, file: !2, line: 2, type: !14, scopeLine: 3, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
!14 = !DISubroutineType(flags: DIFlagPublic, types: !15)
!15 = !{null}
!16 = !DILocation(line: 3, column: 8, scope: !13)
!17 = !DILocalVariable(name: "myFunc", scope: !13, file: !2, line: 2, type: !18, align: 32)
!18 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!19 = !DILocation(line: 2, column: 17, scope: !13)
!20 = distinct !DISubprogram(name: "myPrg", linkageName: "myPrg", scope: !2, file: !2, line: 4, type: !14, scopeLine: 5, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
!21 = !DILocalVariable(name: "myPrg", scope: !20, file: !2, line: 4, type: !3)
!22 = !DILocation(line: 5, column: 8, scope: !20)
!23 = distinct !DISubprogram(name: "myFb", linkageName: "myFb", scope: !2, file: !2, line: 6, type: !14, scopeLine: 7, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
!24 = !DILocalVariable(name: "myFb", scope: !23, file: !2, line: 6, type: !7)
!25 = !DILocation(line: 7, column: 8, scope: !23)
; ModuleID = '__initializers'
source_filename = "__initializers"

%myPrg = type {}
%myFb = type {}

@myPrg_instance = external global %myPrg, section "var-$RUSTY$myPrg_instance:r0", !dbg !0
@__myFb__init = external global %myFb, section "var-$RUSTY$__myFb__init:r0", !dbg !5

define void @__init_myprg(%myPrg* %0) section "fn-$RUSTY$__init_myprg:v[pr0]" !dbg !13 {
entry:
  %self = alloca %myPrg*, align 8, !dbg !17
  call void @llvm.dbg.declare(metadata %myPrg** %self, metadata !18, metadata !DIExpression()), !dbg !17
  store %myPrg* %0, %myPrg** %self, align 8, !dbg !17
  ret void, !dbg !17
}

declare !dbg !19 void @myPrg(%myPrg*) section "fn-$RUSTY$myPrg:v"

define void @__init_myfb(%myFb* %0) section "fn-$RUSTY$__init_myfb:v[pr0]" !dbg !22 {
entry:
  %self = alloca %myFb*, align 8, !dbg !26
  call void @llvm.dbg.declare(metadata %myFb** %self, metadata !27, metadata !DIExpression()), !dbg !26
  store %myFb* %0, %myFb** %self, align 8, !dbg !26
  ret void, !dbg !26
}

declare !dbg !28 void @myFb(%myFb*) section "fn-$RUSTY$myFb:v"

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!8, !9}
!llvm.dbg.cu = !{!10}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myPrg", scope: !2, file: !2, line: 4, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myprg", scope: !2, file: !2, line: 4, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myprg")
!4 = !{}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "__myFb__init", scope: !2, file: !2, line: 6, type: !7, isLocal: false, isDefinition: true)
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "myfb", scope: !2, file: !2, line: 6, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myfb")
!8 = !{i32 2, !"Dwarf Version", i32 5}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = distinct !DICompileUnit(language: DW_LANG_C, file: !11, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !12, splitDebugInlining: false)
!11 = !DIFile(filename: "__initializers", directory: "src")
!12 = !{!0, !5}
!13 = distinct !DISubprogram(name: "__init_myprg", linkageName: "__init_myprg", scope: !2, file: !2, line: 4, type: !14, scopeLine: 4, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
!14 = !DISubroutineType(flags: DIFlagPublic, types: !15)
!15 = !{null, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__auto_pointer_to_myPrg", baseType: !3, size: 64, align: 64, dwarfAddressSpace: 1)
!17 = !DILocation(line: 4, column: 16, scope: !13)
!18 = !DILocalVariable(name: "self", scope: !13, file: !2, line: 4, type: !16)
!19 = distinct !DISubprogram(name: "myPrg", linkageName: "myPrg", scope: !2, file: !2, line: 4, type: !20, scopeLine: 5, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
!20 = !DISubroutineType(flags: DIFlagPublic, types: !21)
!21 = !{null}
!22 = distinct !DISubprogram(name: "__init_myfb", linkageName: "__init_myfb", scope: !2, file: !2, line: 6, type: !23, scopeLine: 6, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
!23 = !DISubroutineType(flags: DIFlagPublic, types: !24)
!24 = !{null, !25}
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__auto_pointer_to_myFb", baseType: !7, size: 64, align: 64, dwarfAddressSpace: 1)
!26 = !DILocation(line: 6, column: 23, scope: !22)
!27 = !DILocalVariable(name: "self", scope: !22, file: !2, line: 6, type: !25)
!28 = distinct !DISubprogram(name: "myFb", linkageName: "myFb", scope: !2, file: !2, line: 6, type: !20, scopeLine: 7, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !10, retainedNodes: !4)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%myPrg = type {}

@myPrg_instance = external global %myPrg, section "var-$RUSTY$myPrg_instance:r0", !dbg !0

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" !dbg !10 {
entry:
  call void @__init_myprg(%myPrg* @myPrg_instance), !dbg !13
  ret void, !dbg !13
}

declare !dbg !14 void @__init_myprg(%myPrg*) section "fn-$RUSTY$__init_myprg:v[pr0]"

declare !dbg !18 void @myPrg(%myPrg*) section "fn-$RUSTY$myPrg:v"

!llvm.module.flags = !{!5, !6}
!llvm.dbg.cu = !{!7}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myPrg", scope: !2, file: !2, line: 4, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myprg", scope: !2, file: !2, line: 4, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myprg")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 5}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = distinct !DICompileUnit(language: DW_LANG_C, file: !8, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !9, splitDebugInlining: false)
!8 = !DIFile(filename: "__init___testproject", directory: "src")
!9 = !{!0}
!10 = distinct !DISubprogram(name: "__init___testproject", linkageName: "__init___testproject", scope: !2, file: !2, type: !11, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !7, retainedNodes: !4)
!11 = !DISubroutineType(flags: DIFlagPublic, types: !12)
!12 = !{null}
!13 = !DILocation(line: 0, scope: !10)
!14 = distinct !DISubprogram(name: "__init_myprg", linkageName: "__init_myprg", scope: !2, file: !2, line: 4, type: !15, scopeLine: 4, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !7, retainedNodes: !4)
!15 = !DISubroutineType(flags: DIFlagPublic, types: !16)
!16 = !{null, !17}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__auto_pointer_to_myPrg", baseType: !3, size: 64, align: 64, dwarfAddressSpace: 1)
!18 = distinct !DISubprogram(name: "myPrg", linkageName: "myPrg", scope: !2, file: !2, line: 4, type: !11, scopeLine: 5, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !7, retainedNodes: !4)
