---
source: src/codegen/tests/debug_tests/expression_debugging.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"
target datalayout = "[filtered]"
target triple = "[filtered]"

%myPrg = type {}
%myFb = type { i32* }

@myPrg_instance = global %myPrg zeroinitializer, !dbg !0
@__myFb__init = unnamed_addr constant %myFb zeroinitializer, !dbg !5

define i32 @myFunc() !dbg !14 {
entry:
  %myFunc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %myFunc, metadata !17, metadata !DIExpression()), !dbg !19
  store i32 0, i32* %myFunc, align 4
  %myFunc_ret = load i32, i32* %myFunc, align 4, !dbg !20
  ret i32 %myFunc_ret, !dbg !20
}

define void @myPrg(%myPrg* %0) !dbg !21 {
entry:
  call void @llvm.dbg.declare(metadata %myPrg* %0, metadata !24, metadata !DIExpression()), !dbg !25
  ret void, !dbg !25
}

define void @myFb(%myFb* %0) !dbg !26 {
entry:
  call void @llvm.dbg.declare(metadata %myFb* %0, metadata !29, metadata !DIExpression()), !dbg !30
  %this = alloca %myFb*, align 8
  store %myFb* %0, %myFb** %this, align 8
  ret void, !dbg !30
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!9, !10}
!llvm.dbg.cu = !{!11}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myPrg", scope: !2, file: !2, line: 4, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myPrg", scope: !2, file: !2, line: 4, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myPrg")
!4 = !{}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "__myFb__init", scope: !2, file: !2, line: 6, type: !7, isLocal: false, isDefinition: true)
!7 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!8 = !DICompositeType(tag: DW_TAG_structure_type, name: "myFb", scope: !2, file: !2, line: 6, align: 64, flags: DIFlagPublic, elements: !4, identifier: "myFb")
!9 = !{i32 2, !"Dwarf Version", i32 5}
!10 = !{i32 2, !"Debug Info Version", i32 3}
!11 = distinct !DICompileUnit(language: DW_LANG_C, file: !12, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !13, splitDebugInlining: false)
!12 = !DIFile(filename: "<internal>", directory: "src")
!13 = !{!0, !5}
!14 = distinct !DISubprogram(name: "myFunc", linkageName: "myFunc", scope: !2, file: !2, line: 2, type: !15, scopeLine: 3, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !4)
!15 = !DISubroutineType(flags: DIFlagPublic, types: !16)
!16 = !{null}
!17 = !DILocalVariable(name: "myFunc", scope: !14, file: !2, line: 2, type: !18, align: 32)
!18 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!19 = !DILocation(line: 2, column: 17, scope: !14)
!20 = !DILocation(line: 3, column: 8, scope: !14)
!21 = distinct !DISubprogram(name: "myPrg", linkageName: "myPrg", scope: !2, file: !2, line: 4, type: !22, scopeLine: 5, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !4)
!22 = !DISubroutineType(flags: DIFlagPublic, types: !23)
!23 = !{null, !3}
!24 = !DILocalVariable(name: "myPrg", scope: !21, file: !2, line: 5, type: !3)
!25 = !DILocation(line: 5, column: 8, scope: !21)
!26 = distinct !DISubprogram(name: "myFb", linkageName: "myFb", scope: !2, file: !2, line: 6, type: !27, scopeLine: 7, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !11, retainedNodes: !4)
!27 = !DISubroutineType(flags: DIFlagPublic, types: !28)
!28 = !{null, !8}
!29 = !DILocalVariable(name: "myFb", scope: !26, file: !2, line: 7, type: !8)
!30 = !DILocation(line: 7, column: 8, scope: !26)
