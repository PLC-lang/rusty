---
source: src/codegen/tests/debug_tests/expression_debugging.rs
expression: result
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"

define i32 @foo() !dbg !4 {
entry:
  %foo = alloca i32, align 4
  %a = alloca [64 x i32], align 4
  call void @llvm.dbg.declare(metadata [64 x i32]* %a, metadata !9, metadata !DIExpression()), !dbg !14
  %0 = bitcast [64 x i32]* %a to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 ptrtoint ([64 x i32]* getelementptr ([64 x i32], [64 x i32]* null, i32 1) to i64), i1 false)
  call void @llvm.dbg.declare(metadata i32* %foo, metadata !15, metadata !DIExpression()), !dbg !16
  store i32 0, i32* %foo, align 4
  %foo_ret = load i32, i32* %foo, align 4, !dbg !17
  ret i32 %foo_ret, !dbg !17
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #1 = { argmemonly nofree nounwind willreturn writeonly }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}

!0 = !{i32 2, !"Dwarf Version", i32 5}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!3 = !DIFile(filename: "<internal>", directory: "src")
!4 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !5, file: !5, line: 2, type: !6, scopeLine: 6, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !8)
!5 = !DIFile(filename: "<internal>", directory: "")
!6 = !DISubroutineType(flags: DIFlagPublic, types: !7)
!7 = !{null}
!8 = !{}
!9 = !DILocalVariable(name: "a", scope: !4, file: !5, line: 4, type: !10)
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 2048, elements: !12)
!11 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!12 = !{!13}
!13 = !DISubrange(count: 64, lowerBound: 1)
!14 = !DILocation(line: 4, column: 12, scope: !4)
!15 = !DILocalVariable(name: "foo", scope: !4, file: !5, line: 2, type: !11)
!16 = !DILocation(line: 2, column: 17, scope: !4)
!17 = !DILocation(line: 6, column: 8, scope: !4)
