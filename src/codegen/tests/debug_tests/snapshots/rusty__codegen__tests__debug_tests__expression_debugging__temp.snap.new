---
source: src/codegen/tests/debug_tests/expression_debugging.rs
assertion_line: 319
expression: result
---
; ModuleID = 'main'
source_filename = "main"

define i32 @main() !dbg !3 {
entry:
  %main = alloca i32, align 4, !dbg !7
  %x = alloca i8, align 1, !dbg !7
  %a = alloca i32, align 4, !dbg !7
  call void @llvm.dbg.declare(metadata i8* %x, metadata !8, metadata !DIExpression()), !dbg !10
  store i8 0, i8* %x, align 1, !dbg !7
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11, metadata !DIExpression()), !dbg !13
  store i32 0, i32* %a, align 4, !dbg !7
  call void @llvm.dbg.declare(metadata i32* %main, metadata !14, metadata !DIExpression()), !dbg !15
  store i32 0, i32* %main, align 4, !dbg !7
  store i8 1, i8* %x, align 1, !dbg !16
  %load_x = load i8, i8* %x, align 1, !dbg !17
  br i8 %load_x, label %lbl, label %else_block, !dbg !18

else_block:                                       ; preds = %entry
  store i32 2, i32* %a, align 4, !dbg !19
  br label %lbl, !dbg !20

lbl:                                              ; preds = %else_block, %entry
  %load_a = load i32, i32* %a, align 4, !dbg !21
  %tmpVar = add i32 %load_a, 3, !dbg !21
  store i32 %tmpVar, i32* %a, align 4, !dbg !21
  %load_a1 = load i32, i32* %a, align 4, !dbg !22
  store i32 %load_a1, i32* %main, align 4, !dbg !22
  %main_ret = load i32, i32* %main, align 4, !dbg !22
  ret i32 %main_ret, !dbg !22
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Dwarf Version", i32 5}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!2 = !DIFile(filename: "main", directory: "src")
!3 = distinct !DISubprogram(name: "main", linkageName: "main", scope: !2, file: !2, line: 1, type: !4, scopeLine: 1, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !1, retainedNodes: !6)
!4 = !DISubroutineType(flags: DIFlagPublic, types: !5)
!5 = !{null}
!6 = !{}
!7 = !DILocation(line: 1, scope: !3)
!8 = !DILocalVariable(name: "x", scope: !3, file: !2, line: 1, type: !9, align: 8)
!9 = !DIBasicType(name: "BOOL", size: 8, encoding: DW_ATE_boolean, flags: DIFlagPublic)
!10 = !DILocation(line: 1, column: 29, scope: !3)
!11 = !DILocalVariable(name: "a", scope: !3, file: !2, line: 2, type: !12, align: 32)
!12 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!13 = !DILocation(line: 2, column: 9, scope: !3)
!14 = !DILocalVariable(name: "main", scope: !3, file: !2, line: 1, type: !12, align: 32)
!15 = !DILocation(line: 1, column: 9, scope: !3)
!16 = !DILocation(line: 10, scope: !3)
!17 = !DILocation(line: 2, scope: !3)
!18 = !DILocation(line: 4, scope: !3)
!19 = !DILocation(line: 5, scope: !3)
!20 = !DILocation(line: 3, scope: !3)
!21 = !DILocation(line: 7, scope: !3)
!22 = !DILocation(line: 13, scope: !3)

