{"run_id":"1737024959-262323271","line":4115,"new":{"module_name":"rusty__codegen__tests__code_gen_tests","snapshot_name":"function_with_array_string_return","metadata":{"source":"src/codegen/tests/code_gen_tests.rs","assertion_line":4115,"expression":"res"},"snapshot":"; ModuleID = '<internal>'\nsource_filename = \"<internal>\"\n\n@utf08_literal_0 = private unnamed_addr constant [6 x i8] c\"hello\\00\"\n@utf08_literal_1 = private unnamed_addr constant [6 x i8] c\"world\\00\"\n\ndefine void @foo([81 x i8]* %0) {\nentry:\n  %foo = alloca [81 x i8]*, align 8\n  store [81 x i8]* %0, [81 x i8]** %foo, align 8\n  %deref = load [81 x i8]*, [81 x i8]** %foo, align 8\n  %tmpVar = getelementptr inbounds [81 x i8], [81 x i8]* %deref, i32 0, i32 0\n  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %tmpVar, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @utf08_literal_0, i32 0, i32 0), i32 6, i1 false)\n  %deref1 = load [81 x i8]*, [81 x i8]** %foo, align 8\n  %tmpVar2 = getelementptr inbounds [81 x i8], [81 x i8]* %deref1, i32 0, i32 1\n  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %tmpVar2, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @utf08_literal_1, i32 0, i32 0), i32 6, i1 false)\n  ret void\n}\n\ndefine void @main() {\nentry:\n  %__foo0 = alloca [2 x [81 x i8]], align 1\n  %0 = bitcast [2 x [81 x i8]]* %__foo0 to i8*\n  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 ptrtoint ([2 x [81 x i8]]* getelementptr ([2 x [81 x i8]], [2 x [81 x i8]]* null, i32 1) to i64), i1 false)\n  %1 = bitcast [2 x [81 x i8]]* %__foo0 to [81 x i8]*\n  call void @foo([81 x i8]* %1)\n  %load___foo0 = load [2 x [81 x i8]], [2 x [81 x i8]]* %__foo0, align 1\n  ret void\n}\n\n; Function Attrs: argmemonly nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #0\n\n; Function Attrs: argmemonly nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1\n\nattributes #0 = { argmemonly nofree nounwind willreturn }\nattributes #1 = { argmemonly nofree nounwind willreturn writeonly }\n; ModuleID = '__init___testproject'\nsource_filename = \"__init___testproject\"\n\n@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___testproject, i8* null }]\n\ndefine void @__init___testproject() {\nentry:\n  ret void\n}"},"old":{"module_name":"rusty__codegen__tests__code_gen_tests","metadata":{},"snapshot":""}}
