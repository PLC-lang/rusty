---
source: src/codegen/tests/initialization_test/type_initializers.rs
expression: not_working
---
; ModuleID = 'main'
source_filename = "main"

%myStruct = type { i32, i32 }

@__myStruct__init = unnamed_addr constant %myStruct zeroinitializer
@__main.arr__init = unnamed_addr constant [2 x %myStruct] [%myStruct { i32 1, i32 2 }, %myStruct { i32 3, i32 4 }]

define i32 @main() {
entry:
  %main = alloca i32, align 4
  %arr = alloca [2 x %myStruct], align 8
  %0 = bitcast [2 x %myStruct]* %arr to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 bitcast ([2 x %myStruct]* @__main.arr__init to i8*), i64 ptrtoint ([2 x %myStruct]* getelementptr ([2 x %myStruct], [2 x %myStruct]* null, i32 1) to i64), i1 false)
  store i32 0, i32* %main, align 4
  %main_ret = load i32, i32* %main, align 4
  ret i32 %main_ret
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn }

