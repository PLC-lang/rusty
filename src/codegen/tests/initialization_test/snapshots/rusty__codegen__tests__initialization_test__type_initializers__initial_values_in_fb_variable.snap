---
source: src/codegen/tests/initialization_test/type_initializers.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"
target datalayout = "[filtered]"
target triple = "[filtered]"

%TON = type { i32*, i16, i16 }
%main = type { i16, %TON, %TON }

@__TON__init = unnamed_addr constant %TON zeroinitializer
@main_instance = global %main { i16 10, %TON { i32* null, i16 10, i16 17 }, %TON { i32* null, i16 17, i16 10 } }
@__main.struct1__init = unnamed_addr constant %TON { i32* null, i16 10, i16 17 }
@__main.struct2__init = unnamed_addr constant %TON { i32* null, i16 17, i16 10 }

define void @TON(%TON* %0) {
entry:
  %this = alloca %TON*, align 8
  store %TON* %0, %TON** %this, align 8
  %__vtable = getelementptr inbounds %TON, %TON* %0, i32 0, i32 0
  %a = getelementptr inbounds %TON, %TON* %0, i32 0, i32 1
  %b = getelementptr inbounds %TON, %TON* %0, i32 0, i32 2
  ret void
}

define void @main(%main* %0) {
entry:
  %TEN = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %struct1 = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %struct2 = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  ret void
}
