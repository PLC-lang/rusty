---
source: src/codegen/tests/initialization_test/type_initializers.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%TON = type { i16, i16 }
%main = type { i16, %TON, %TON }

@__TON__init = unnamed_addr constant %TON zeroinitializer, section "var-$RUSTY$__TON__init:r2i16i16"
@main_instance = global %main { i16 10, %TON { i16 10, i16 17 }, %TON { i16 17, i16 10 } }, section "var-$RUSTY$main_instance:r3i16r2i16i16r2i16i16"
@__main.struct1__init = unnamed_addr constant %TON { i16 10, i16 17 }
@__main.struct2__init = unnamed_addr constant %TON { i16 17, i16 10 }
@__main.struct1__init.1 = unnamed_addr constant %TON { i16 10, i16 17 }
@__main.struct2__init.2 = unnamed_addr constant %TON { i16 17, i16 10 }

define void @TON(%TON* %0) section "fn-$RUSTY$TON:v[i16][i16]" {
entry:
  %a = getelementptr inbounds %TON, %TON* %0, i32 0, i32 0
  %b = getelementptr inbounds %TON, %TON* %0, i32 0, i32 1
  ret void
}

define void @main(%main* %0) section "fn-$RUSTY$main:v" {
entry:
  %TEN = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %struct1 = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %struct2 = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  ret void
}

define void @__init_ton(%TON* %0) section "fn-$RUSTY$__init_ton:v[pr2i16i16]" {
entry:
  %self = alloca %TON*, align 8
  store %TON* %0, %TON** %self, align 8
  ret void
}

define void @__init_main(%main* %0) section "fn-$RUSTY$__init_main:v[pr3i16r2i16i16r2i16i16]" {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  %deref = load %main*, %main** %self, align 8
  %struct1 = getelementptr inbounds %main, %main* %deref, i32 0, i32 1
  call void @__init_ton(%TON* %struct1)
  %deref1 = load %main*, %main** %self, align 8
  %struct2 = getelementptr inbounds %main, %main* %deref1, i32 0, i32 2
  call void @__init_ton(%TON* %struct2)
  ret void
}

define void @__init() section "fn-$RUSTY$__init:v" {
entry:
  call void @__init_main(%main* @main_instance)
  ret void
}
