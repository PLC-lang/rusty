---
source: src/codegen/tests/initialization_test/pou_initializers.rs
expression: function
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"
target datalayout = "[filtered]"
target triple = "[filtered]"

%MyStrct = type { i32, i32, i32 }

@__MyStr__init = unnamed_addr constant [11 x i8] c"init\00\00\00\00\00\00\00"
@__MyArr__init = unnamed_addr constant [10 x float] [float 0.000000e+00, float 0x3FF19999A0000000, float 0x40019999A0000000, float 0x400A666660000000, float 0x40119999A0000000, float 5.500000e+00, float 0x401A666660000000, float 0x401ECCCCC0000000, float 0x40219999A0000000, float 0x4023CCCCC0000000]
@__MyStrct__init = unnamed_addr constant %MyStrct { i32 1, i32 2, i32 3 }

define i16 @foo_int() {
entry:
  %foo_int = alloca i16, align 2
  store i16 7, i16* %foo_int, align 2
  %foo_int_ret = load i16, i16* %foo_int, align 2
  ret i16 %foo_int_ret
}

define void @foo_str(i8* %0) {
entry:
  %foo_str = alloca i8*, align 8
  store i8* %0, i8** %foo_str, align 8
  ret void
}

define void @foo_arr(float* %0) {
entry:
  %foo_arr = alloca float*, align 8
  store float* %0, float** %foo_arr, align 8
  ret void
}

define void @foo_strct(%MyStrct* %0) {
entry:
  %foo_strct = alloca %MyStrct*, align 8
  store %MyStrct* %0, %MyStrct** %foo_strct, align 8
  ret void
}
