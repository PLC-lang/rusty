---
source: src/codegen/tests/initialization_test/pou_initializers.rs
expression: function
---
; ModuleID = 'main'
source_filename = "main"

%MyStrct = type { i32, i32, i32 }

@__MyStr__init = unnamed_addr constant [11 x i8] c"init\00\00\00\00\00\00\00"
@__MyArr__init = unnamed_addr constant [10 x float] [float 0.000000e+00, float 0x3FF19999A0000000, float 0x40019999A0000000, float 0x400A666660000000, float 0x40119999A0000000, float 5.500000e+00, float 0x401A666660000000, float 0x401ECCCCC0000000, float 0x40219999A0000000, float 0x4023CCCCC0000000]
@__MyStrct__init = unnamed_addr constant %MyStrct { i32 1, i32 2, i32 3 }

define i16 @foo_int() {
entry:
  %foo_int = alloca i16, align 2
  store i16 7, i16* %foo_int, align 2
  %foo_int_ret = load i16, i16* %foo_int, align 2
  ret i16 %foo_int_ret
}

define void @foo_str([11 x i8]* %0) {
entry:
  %foo_str = alloca [11 x i8]*, align 8
  store [11 x i8]* %0, [11 x i8]** %foo_str, align 8
  %deref = load [11 x i8]*, [11 x i8]** %foo_str, align 8
  %1 = bitcast [11 x i8]* %deref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @__MyStr__init, i32 0, i32 0), i64 ptrtoint ([11 x i8]* getelementptr ([11 x i8], [11 x i8]* null, i32 1) to i64), i1 false)
  ret void
}

define void @foo_arr([10 x float]* %0) {
entry:
  %foo_arr = alloca [10 x float]*, align 8
  store [10 x float]* %0, [10 x float]** %foo_arr, align 8
  %deref = load [10 x float]*, [10 x float]** %foo_arr, align 8
  %1 = bitcast [10 x float]* %deref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 bitcast ([10 x float]* @__MyArr__init to i8*), i64 ptrtoint ([10 x float]* getelementptr ([10 x float], [10 x float]* null, i32 1) to i64), i1 false)
  ret void
}

define void @foo_strct(%MyStrct* %0) {
entry:
  %foo_strct = alloca %MyStrct*, align 8
  store %MyStrct* %0, %MyStrct** %foo_strct, align 8
  %deref = load %MyStrct*, %MyStrct** %foo_strct, align 8
  %1 = bitcast %MyStrct* %deref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 bitcast (%MyStrct* @__MyStrct__init to i8*), i64 ptrtoint (%MyStrct* getelementptr (%MyStrct, %MyStrct* null, i32 1) to i64), i1 false)
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn }

