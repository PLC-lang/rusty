{"run_id":"1714055182-669760809","line":144,"new":{"module_name":"rusty__codegen__tests__directaccess_test","snapshot_name":"temp_output_and_normal_assignments","metadata":{"source":"src/codegen/tests/directaccess_test.rs","assertion_line":144,"expression":"ir"},"snapshot":"; ModuleID = 'main'\nsource_filename = \"main\"\n\n%FOO = type { i8, i8 }\n\n@__FOO__init = unnamed_addr constant %FOO zeroinitializer\n\ndefine void @FOO(%FOO* %0) section \"fn-FOO:v[u8][u8]\" {\nentry:\n  %X = getelementptr inbounds %FOO, %FOO* %0, i32 0, i32 0\n  %Y = getelementptr inbounds %FOO, %FOO* %0, i32 0, i32 1\n  ret void\n}\n\ndefine i32 @main() section \"fn-main:i32\" {\nentry:\n  %main = alloca i32, align 4\n  %error_bits = alloca i8, align 1\n  %f = alloca %FOO, align 8\n  store i8 0, i8* %error_bits, align 1\n  %0 = bitcast %FOO* %f to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds (%FOO, %FOO* @__FOO__init, i32 0, i32 0), i64 ptrtoint (%FOO* getelementptr (%FOO, %FOO* null, i32 1) to i64), i1 false)\n  store i32 0, i32* %main, align 4\n  %1 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits = load i8, i8* %error_bits, align 1\n  %shift = lshr i8 %load_error_bits, 0\n  %2 = and i8 %shift, 1\n  store i8 %2, i8* %1, align 1\n  call void @FOO(%FOO* %f)\n  %bbb = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 1\n  %3 = load i8, i8* %error_bits, align 1\n  %erase = and i8 %3, -2\n  %4 = load i8, i8* %bbb, align 1\n  %value = shl i8 %4, 0\n  %or = or i8 %erase, %value\n  store i8 %or, i8* %error_bits, align 1\n  %5 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits1 = load i8, i8* %error_bits, align 1\n  %shift2 = lshr i8 %load_error_bits1, 0\n  %6 = and i8 %shift2, 1\n  store i8 %6, i8* %5, align 1\n  call void @FOO(%FOO* %f)\n  %7 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits3 = load i8, i8* %error_bits, align 1\n  %shift4 = lshr i8 %load_error_bits3, 0\n  %8 = and i8 %shift4, 1\n  store i8 %8, i8* %7, align 1\n  call void @FOO(%FOO* %f)\n  %bbb5 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 1\n  %9 = load i8, i8* %error_bits, align 1\n  %erase6 = and i8 %9, -2\n  %10 = load i8, i8* %bbb5, align 1\n  %value7 = shl i8 %10, 0\n  %or8 = or i8 %erase6, %value7\n  store i8 %or8, i8* %error_bits, align 1\n  %11 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits9 = load i8, i8* %error_bits, align 1\n  %shift10 = lshr i8 %load_error_bits9, 0\n  %12 = and i8 %shift10, 1\n  store i8 %12, i8* %11, align 1\n  call void @FOO(%FOO* %f)\n  %main_ret = load i32, i32* %main, align 4\n  ret i32 %main_ret\n}\n\n; Function Attrs: argmemonly nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0\n\nattributes #0 = { argmemonly nofree nounwind willreturn }\n"},"old":{"module_name":"rusty__codegen__tests__directaccess_test","metadata":{},"snapshot":""}}
{"run_id":"1714055307-365730799","line":201,"new":null,"old":null}
{"run_id":"1714055307-365730799","line":264,"new":null,"old":null}
{"run_id":"1714055307-365730799","line":144,"new":{"module_name":"rusty__codegen__tests__directaccess_test","snapshot_name":"temp_output_and_normal_assignments","metadata":{"source":"src/codegen/tests/directaccess_test.rs","assertion_line":144,"expression":"ir"},"snapshot":"; ModuleID = 'main'\nsource_filename = \"main\"\n\n%FOO = type { i8, i8 }\n\n@__FOO__init = unnamed_addr constant %FOO zeroinitializer\n\ndefine void @FOO(%FOO* %0) section \"fn-FOO:v[u8][u8]\" {\nentry:\n  %X = getelementptr inbounds %FOO, %FOO* %0, i32 0, i32 0\n  %Y = getelementptr inbounds %FOO, %FOO* %0, i32 0, i32 1\n  ret void\n}\n\ndefine i32 @main() section \"fn-main:i32\" {\nentry:\n  %main = alloca i32, align 4\n  %error_bits = alloca i8, align 1\n  %f = alloca %FOO, align 8\n  store i8 0, i8* %error_bits, align 1\n  %0 = bitcast %FOO* %f to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds (%FOO, %FOO* @__FOO__init, i32 0, i32 0), i64 ptrtoint (%FOO* getelementptr (%FOO, %FOO* null, i32 1) to i64), i1 false)\n  store i32 0, i32* %main, align 4\n  %1 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits = load i8, i8* %error_bits, align 1\n  %shift = lshr i8 %load_error_bits, 0\n  %2 = and i8 %shift, 1\n  store i8 %2, i8* %1, align 1\n  call void @FOO(%FOO* %f)\n  %bbb = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 1\n  %3 = load i8, i8* %error_bits, align 1\n  %erase = and i8 %3, -2\n  %4 = load i8, i8* %bbb, align 1\n  %value = shl i8 %4, 0\n  %or = or i8 %erase, %value\n  store i8 %or, i8* %error_bits, align 1\n  %5 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits1 = load i8, i8* %error_bits, align 1\n  %shift2 = lshr i8 %load_error_bits1, 0\n  %6 = and i8 %shift2, 1\n  store i8 %6, i8* %5, align 1\n  call void @FOO(%FOO* %f)\n  %7 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits3 = load i8, i8* %error_bits, align 1\n  %shift4 = lshr i8 %load_error_bits3, 0\n  %8 = and i8 %shift4, 1\n  store i8 %8, i8* %7, align 1\n  call void @FOO(%FOO* %f)\n  %bbb5 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 1\n  %9 = load i8, i8* %error_bits, align 1\n  %erase6 = and i8 %9, -2\n  %10 = load i8, i8* %bbb5, align 1\n  %value7 = shl i8 %10, 0\n  %or8 = or i8 %erase6, %value7\n  store i8 %or8, i8* %error_bits, align 1\n  %11 = getelementptr inbounds %FOO, %FOO* %f, i32 0, i32 0\n  %load_error_bits9 = load i8, i8* %error_bits, align 1\n  %shift10 = lshr i8 %load_error_bits9, 0\n  %12 = and i8 %shift10, 1\n  store i8 %12, i8* %11, align 1\n  call void @FOO(%FOO* %f)\n  %main_ret = load i32, i32* %main, align 4\n  ret i32 %main_ret\n}\n\n; Function Attrs: argmemonly nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0\n\nattributes #0 = { argmemonly nofree nounwind willreturn }\n"},"old":{"module_name":"rusty__codegen__tests__directaccess_test","metadata":{},"snapshot":""}}
{"run_id":"1714055699-714395630","line":264,"new":null,"old":null}
{"run_id":"1714055699-714395630","line":201,"new":null,"old":null}
{"run_id":"1714057317-197787208","line":201,"new":null,"old":null}
{"run_id":"1714057317-197787208","line":264,"new":null,"old":null}
{"run_id":"1714463899-874175903","line":264,"new":null,"old":null}
{"run_id":"1714463899-874175903","line":201,"new":null,"old":null}
{"run_id":"1714478129-236604043","line":201,"new":null,"old":null}
{"run_id":"1714478129-236604043","line":264,"new":null,"old":null}
{"run_id":"1714478680-12131851","line":201,"new":null,"old":null}
{"run_id":"1714478680-12131851","line":264,"new":null,"old":null}
{"run_id":"1714478890-666684973","line":201,"new":null,"old":null}
{"run_id":"1714478890-666684973","line":264,"new":null,"old":null}
{"run_id":"1714478983-408122767","line":201,"new":null,"old":null}
{"run_id":"1714478983-408122767","line":264,"new":null,"old":null}
{"run_id":"1716364259-328637857","line":264,"new":null,"old":null}
{"run_id":"1716364259-328637857","line":201,"new":null,"old":null}
{"run_id":"1716364327-746662311","line":264,"new":null,"old":null}
{"run_id":"1716364327-746662311","line":201,"new":null,"old":null}
{"run_id":"1716364821-96071461","line":201,"new":null,"old":null}
{"run_id":"1716364821-96071461","line":264,"new":null,"old":null}
{"run_id":"1716365133-78651533","line":201,"new":null,"old":null}
{"run_id":"1716365133-78651533","line":264,"new":null,"old":null}
{"run_id":"1716365147-313869683","line":201,"new":null,"old":null}
{"run_id":"1716365147-313869683","line":264,"new":null,"old":null}
{"run_id":"1716365158-976762975","line":264,"new":null,"old":null}
{"run_id":"1716365158-976762975","line":201,"new":null,"old":null}
{"run_id":"1716444789-194071813","line":201,"new":null,"old":null}
{"run_id":"1716444789-194071813","line":264,"new":null,"old":null}
{"run_id":"1716444819-152604503","line":264,"new":null,"old":null}
{"run_id":"1716444819-152604503","line":201,"new":null,"old":null}
{"run_id":"1716444851-574207320","line":201,"new":null,"old":null}
{"run_id":"1716444851-574207320","line":264,"new":null,"old":null}
