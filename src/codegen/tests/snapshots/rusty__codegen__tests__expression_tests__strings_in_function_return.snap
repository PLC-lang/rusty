---
source: src/codegen/tests/expression_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

@utf08_literal_0 = unnamed_addr constant [6 x i8] c"hello\00"

define void @func([81 x i8]* %0, [81 x i8]* %1) {
entry:
  %func = alloca [81 x i8]*, align 8
  store [81 x i8]* %0, [81 x i8]** %func, align 8
  %myout = alloca [81 x i8]*, align 8
  store [81 x i8]* %1, [81 x i8]** %myout, align 8
  %deref = load [81 x i8]*, [81 x i8]** %func, align 8
  %2 = bitcast [81 x i8]* %deref to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 ptrtoint ([81 x i8]* getelementptr ([81 x i8], [81 x i8]* null, i32 1) to i64), i1 false)
  %deref1 = load [81 x i8]*, [81 x i8]** %func, align 8
  %3 = bitcast [81 x i8]* %deref1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %3, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @utf08_literal_0, i32 0, i32 0), i32 6, i1 false)
  %deref2 = load [81 x i8]*, [81 x i8]** %myout, align 8
  %4 = bitcast [81 x i8]* %deref2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %4, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @utf08_literal_0, i32 0, i32 0), i32 6, i1 false)
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #1

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
attributes #1 = { argmemonly nofree nounwind willreturn }

