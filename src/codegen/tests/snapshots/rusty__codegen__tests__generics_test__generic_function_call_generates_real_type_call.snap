---
source: src/codegen/tests/generics_test.rs
assertion_line: 32
expression: prg

---
; ModuleID = 'main'
source_filename = "main"

%prg_interface = type { i16, i16 }
%MAX__DINT_interface = type { i32, i32 }
%MAX__INT_interface = type { i16, i16 }

@prg_instance = global %prg_interface zeroinitializer

define i32 @MAX__DINT(%MAX__DINT_interface* %0) {
entry:
  %in1 = getelementptr inbounds %MAX__DINT_interface, %MAX__DINT_interface* %0, i32 0, i32 0
  %in2 = getelementptr inbounds %MAX__DINT_interface, %MAX__DINT_interface* %0, i32 0, i32 1
  %MAX__DINT = alloca i32, align 4
  store i32 0, i32* %MAX__DINT, align 4
  %MAX__DINT_ret = load i32, i32* %MAX__DINT, align 4
  ret i32 %MAX__DINT_ret
}

define void @prg(%prg_interface* %0) {
entry:
  %a = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 0
  %b = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 1
  %MAX__DINT_instance = alloca %MAX__DINT_interface, align 8
  %1 = getelementptr inbounds %MAX__DINT_interface, %MAX__DINT_interface* %MAX__DINT_instance, i32 0, i32 0
  store i32 1, i32* %1, align 4
  %2 = getelementptr inbounds %MAX__DINT_interface, %MAX__DINT_interface* %MAX__DINT_instance, i32 0, i32 1
  store i32 2, i32* %2, align 4
  %call = call i32 @MAX__DINT(%MAX__DINT_interface* %MAX__DINT_instance)
  %MAX__INT_instance = alloca %MAX__INT_interface, align 8
  %3 = getelementptr inbounds %MAX__INT_interface, %MAX__INT_interface* %MAX__INT_instance, i32 0, i32 0
  %load_a = load i16, i16* %a, align 2
  store i16 %load_a, i16* %3, align 2
  %4 = getelementptr inbounds %MAX__INT_interface, %MAX__INT_interface* %MAX__INT_instance, i32 0, i32 1
  %load_b = load i16, i16* %b, align 2
  store i16 %load_b, i16* %4, align 2
  %call1 = call i16 @MAX__INT(%MAX__INT_interface* %MAX__INT_instance)
  ret void
}

declare i16 @MAX__INT(%MAX__INT_interface*)

