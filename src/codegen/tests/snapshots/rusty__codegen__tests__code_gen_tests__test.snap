---
source: src/codegen/tests/code_gen_tests.rs
expression: res
---
; ModuleID = 'main'
source_filename = "main"

%MyClass = type { i16 }
%MyProg = type { %MyClass*, i16 }
%__fat_pointer_to_MyClass = type { %MyClass*, [0 x i64]* }
%main = type { i16 }

@__MyClass__init = unnamed_addr constant %MyClass zeroinitializer
@MyProg_instance = global %MyProg zeroinitializer
@____fat_pointer_to_MyClass__init = unnamed_addr constant %__fat_pointer_to_MyClass zeroinitializer
@main_instance = global %main zeroinitializer

define void @MyClass(%MyClass* %0) {
entry:
  %y = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 0
  ret void
}

define void @MyProg(%MyProg* %0) {
entry:
  %cls = getelementptr inbounds %MyProg, %MyProg* %0, i32 0, i32 0
  %y = getelementptr inbounds %MyProg, %MyProg* %0, i32 0, i32 1
  %deref = load %MyClass*, %MyClass** %cls, align 8
  %y1 = getelementptr inbounds %MyClass, %MyClass* %deref, i32 0, i32 0
  %load_y = load i16, i16* %y, align 2
  store i16 %load_y, i16* %y1, align 2
  ret void
}

define void @main(%main* %0) {
entry:
  %cls = alloca %MyClass, align 8
  %y = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %1 = bitcast %MyClass* %cls to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 bitcast (%MyClass* @__MyClass__init to i8*), i64 ptrtoint (%MyClass* getelementptr (%MyClass, %MyClass* null, i32 1) to i64), i1 false)
  %load_ = load i16, i16* getelementptr inbounds (%MyProg, %MyProg* @MyProg_instance, i32 0, i32 1), align 2
  %2 = sext i16 %load_ to i32
  %tmpVar = icmp eq i32 %2, 3
  %outer_fat_pointer_gep = getelementptr inbounds %MyClass, %MyClass* %cls, i32 0
  %fat_pointer_struct = alloca %__fat_pointer_to_MyClass, align 8
  %fat_pointer_class_gep = getelementptr inbounds %__fat_pointer_to_MyClass, %__fat_pointer_to_MyClass* %fat_pointer_struct, i32 0, i32 0
  %fat_poitner_array_gep = getelementptr inbounds %__fat_pointer_to_MyClass, %__fat_pointer_to_MyClass* %fat_pointer_struct, i32 0, i32 1
  %3 = alloca i64, i32 0, align 8
  store i64* %3, [0 x i64]** %fat_poitner_array_gep, align 8
  store %MyClass* %outer_fat_pointer_gep, %MyClass** %fat_pointer_class_gep, align 8
  %4 = load %__fat_pointer_to_MyClass, %__fat_pointer_to_MyClass* %fat_pointer_struct, align 8
  store %__fat_pointer_to_MyClass %4, %MyClass** getelementptr inbounds (%MyProg, %MyProg* @MyProg_instance, i32 0, i32 0), align 8
  call void @MyProg(%MyProg* @MyProg_instance)
  %y1 = getelementptr inbounds %MyClass, %MyClass* %cls, i32 0, i32 0
  %load_2 = load i16, i16* %y1, align 2
  store i16 %load_2, i16* %y, align 2
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn }

