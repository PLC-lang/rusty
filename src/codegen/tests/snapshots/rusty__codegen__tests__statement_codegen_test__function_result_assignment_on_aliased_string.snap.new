---
source: src/codegen/tests/statement_codegen_test.rs
assertion_line: 155
expression: result

---
; ModuleID = 'main'
source_filename = "main"

declare [1025 x i8] @CONCAT([1025 x i8]*, [1025 x i8]*)

define i8 @LIST_ADD([1001 x i8]* %0, [2 x i8]* %1) {
entry:
  %INS = alloca [1001 x i8]*, align 8
  store [1001 x i8]* %0, [1001 x i8]** %INS, align 8
  %sx = alloca [2 x i8]*, align 8
  store [2 x i8]* %1, [2 x i8]** %sx, align 8
  %LIST_ADD = alloca i8, align 1
  store i8 0, i8* %LIST_ADD, align 1
  %deref = load [1001 x i8]*, [1001 x i8]** %INS, align 8
  %deref1 = load [2 x i8]*, [2 x i8]** %sx, align 8
  %deref2 = load [1001 x i8]*, [1001 x i8]** %INS, align 8
  %call = call [1025 x i8] @CONCAT([2 x i8]* %deref1, [1001 x i8]* %deref2)
  %2 = alloca [1025 x i8], align 1
  store [1025 x i8] %call, [1025 x i8]* %2, align 1
  %3 = bitcast [1001 x i8]* %deref to i8*
  %4 = bitcast [1025 x i8]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %3, i8* align 1 %4, i32 1000, i1 false)
  %LIST_ADD_ret = load i8, i8* %LIST_ADD, align 1
  ret i8 %LIST_ADD_ret
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn }

