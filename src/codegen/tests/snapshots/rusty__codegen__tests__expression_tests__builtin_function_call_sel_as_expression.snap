---
source: src/codegen/tests/expression_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type { i32, i32, i32 }

@main_instance = global %main zeroinitializer, section "var-$RUSTY$main_instance:r3i32i32i32"

define void @main(%main* %0) section "fn-$RUSTY$main:v" {
entry:
  %a = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %b = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %c = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  %load_b = load i32, i32* %b, align 4
  %load_c = load i32, i32* %c, align 4
  %1 = select i1 true, i32 %load_c, i32 %load_b
  %tmpVar = add i32 %1, 10
  store i32 %tmpVar, i32* %a, align 4
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%main = type { i32, i32, i32 }

@main_instance = external global %main, section "var-$RUSTY$main_instance:r3i32i32i32"

define void @__init_main(%main* %0) section "fn-$RUSTY$__init_main:v[pr3i32i32i32]" {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

declare void @main(%main*) section "fn-$RUSTY$main:v"
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%main = type { i32, i32, i32 }

@main_instance = external global %main, section "var-$RUSTY$main_instance:r3i32i32i32"

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" {
entry:
  call void @__init_main(%main* @main_instance)
  ret void
}

declare void @__init_main(%main*) section "fn-$RUSTY$__init_main:v[pr3i32i32i32]"

declare void @main(%main*) section "fn-$RUSTY$main:v"
