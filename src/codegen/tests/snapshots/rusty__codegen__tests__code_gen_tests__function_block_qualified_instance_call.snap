---
source: src/codegen/tests/code_gen_tests.rs
expression: result

---
; ModuleID = 'main'
source_filename = "main"

%foo_interface = type { %bar_interface }
%bar_interface = type {}
%prg_interface = type { %foo_interface }

@foo__init = addrspace(4) global %foo_interface zeroinitializer
@bar__init = addrspace(4) global %bar_interface zeroinitializer
@prg_instance = global %prg_interface zeroinitializer

define void @foo(%foo_interface* %0) {
entry:
  %bar_inst = getelementptr inbounds %foo_interface, %foo_interface* %0, i32 0, i32 0
  ret void
}

define void @bar(%bar_interface* %0) {
entry:
  ret void
}

define void @prg(%prg_interface* %0) {
entry:
  %foo_inst = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 0
  %bar_inst = getelementptr inbounds %foo_interface, %foo_interface* %foo_inst, i32 0, i32 0
  br label %input

input:                                            ; preds = %entry
  br label %call

call:                                             ; preds = %input
  call void @bar(%bar_interface* %bar_inst)
  br label %output

output:                                           ; preds = %call
  br label %continue

continue:                                         ; preds = %output
  ret void
}

