---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%foo = type { %bar }
%bar = type {}
%prg = type { %foo }

@__foo__init = unnamed_addr constant %foo zeroinitializer, section "var-$RUSTY$__foo__init:r1r0"
@__bar__init = unnamed_addr constant %bar zeroinitializer, section "var-$RUSTY$__bar__init:r0"
@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r1r1r0"

define void @foo(%foo* %0) section "fn-$RUSTY$foo:v" {
entry:
  %bar_inst = getelementptr inbounds %foo, %foo* %0, i32 0, i32 0
  ret void
}

define void @bar(%bar* %0) section "fn-$RUSTY$bar:v" {
entry:
  ret void
}

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %foo_inst = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %bar_inst = getelementptr inbounds %foo, %foo* %foo_inst, i32 0, i32 0
  call void @bar(%bar* %bar_inst)
  ret void
}

define void @__init_foo(%foo* %0) section "fn-$RUSTY$__init_foo:v[pr1r0]" {
entry:
  %self = alloca %foo*, align 8
  store %foo* %0, %foo** %self, align 8
  %deref = load %foo*, %foo** %self, align 8
  %bar_inst = getelementptr inbounds %foo, %foo* %deref, i32 0, i32 0
  call void @__init_bar(%bar* %bar_inst)
  ret void
}

define void @__init_bar(%bar* %0) section "fn-$RUSTY$__init_bar:v[pr0]" {
entry:
  %self = alloca %bar*, align 8
  store %bar* %0, %bar** %self, align 8
  ret void
}

define void @__init_prg(%prg* %0) section "fn-$RUSTY$__init_prg:v[pr1r1r0]" {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  %deref = load %prg*, %prg** %self, align 8
  %foo_inst = getelementptr inbounds %prg, %prg* %deref, i32 0, i32 0
  call void @__init_foo(%foo* %foo_inst)
  ret void
}

define void @__init() section "fn-$RUSTY$__init:v" {
entry:
  call void @__init_prg(%prg* @prg_instance)
  ret void
}
