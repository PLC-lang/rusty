---
source: src/codegen/tests/statement_codegen_test.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

define i32 @fn() {
entry:
  %fn = alloca i32, align 4
  %a = alloca float, align 4
  %b = alloca float, align 4
  %c = alloca float, align 4
  %d = alloca double, align 8
  %e = alloca double, align 8
  %f = alloca double, align 8
  store float 3.000000e+00, float* %a, align 4
  store float 3.500000e+00, float* %b, align 4
  store float 3.500000e+00, float* %c, align 4
  store double 3.000000e+00, double* %d, align 8
  store double 3.500000e+00, double* %e, align 8
  store double 3.500000e+00, double* %f, align 8
  store i32 0, i32* %fn, align 4
  store float 3.000000e+00, float* %a, align 4
  store float 3.500000e+00, float* %b, align 4
  store float 3.500000e+00, float* %c, align 4
  store double 3.000000e+00, double* %d, align 8
  store double 3.500000e+00, double* %e, align 8
  store double 3.500000e+00, double* %f, align 8
  %fn_ret = load i32, i32* %fn, align 4
  ret i32 %fn_ret
}
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___testproject, i8* null }]

define void @__init___testproject() {
entry:
  ret void
}
