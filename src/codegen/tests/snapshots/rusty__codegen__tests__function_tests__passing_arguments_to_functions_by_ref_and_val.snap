---
source: src/codegen/tests/function_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%main = type {}

@main_instance = global %main zeroinitializer

define i32 @func(i16* %0, i32* %1, i16 %2, i32 %3) {
entry:
  %func = alloca i32, align 4
  %byRef1 = alloca i16*, align 8
  store i16* %0, i16** %byRef1, align 8
  %byRef2 = alloca i32*, align 8
  store i32* %1, i32** %byRef2, align 8
  %byVal1 = alloca i16, align 2
  store i16 %2, i16* %byVal1, align 2
  %byVal2 = alloca i32, align 4
  store i32 %3, i32* %byVal2, align 4
  store i32 0, i32* %func, align 4
  %deref = load i16*, i16** %byRef1, align 8
  %load_byRef1 = load i16, i16* %deref, align 2
  %4 = sext i16 %load_byRef1 to i32
  %deref1 = load i32*, i32** %byRef2, align 8
  %load_byRef2 = load i32, i32* %deref1, align 4
  %tmpVar = mul i32 %4, %load_byRef2
  %load_byVal1 = load i16, i16* %byVal1, align 2
  %5 = sext i16 %load_byVal1 to i32
  %tmpVar2 = mul i32 %tmpVar, %5
  %deref3 = load i32*, i32** %byRef2, align 8
  %load_byRef24 = load i32, i32* %deref3, align 4
  %tmpVar5 = mul i32 %tmpVar2, %load_byRef24
  store i32 %tmpVar5, i32* %func, align 4
  %func_ret = load i32, i32* %func, align 4
  ret i32 %func_ret
}

define void @main(%main* %0) {
entry:
  %1 = alloca i32, align 4
  store i32 1, i32* %1, align 4
  %2 = alloca i32, align 4
  store i32 2, i32* %2, align 4
  %call = call i32 @func(i32* %1, i32* %2, i16 3, i32 4)
  ret void
}

