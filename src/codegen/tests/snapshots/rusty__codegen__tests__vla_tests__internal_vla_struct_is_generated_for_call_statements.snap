---
source: src/codegen/tests/vla_tests.rs
expression: res
---
; ModuleID = 'main'
source_filename = "main"

%__foo_vla = type { i16*, [2 x i32] }

@____foo_vla__init = unnamed_addr constant %__foo_vla zeroinitializer

define void @foo(%__foo_vla %0) {
entry:
  %vla = alloca %__foo_vla, align 8
  store %__foo_vla %0, %__foo_vla* %vla, align 8
  ret void
}

define void @bar() {
entry:
  %arr = alloca [2 x i16], align 2
  %0 = bitcast [2 x i16]* %arr to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 ptrtoint ([2 x i16]* getelementptr ([2 x i16], [2 x i16]* null, i32 1) to i64), i1 false)
  %load_arr = load [2 x i16], [2 x i16]* %arr, align 2
  %1 = bitcast [2 x i16]* %arr to i16*
  %vla_struct = alloca %__foo_vla, align 8
  %vla_array_gep = getelementptr inbounds %__foo_vla, %__foo_vla* %vla_struct, i32 0, i32 0
  %vla_dimensions_gep = getelementptr inbounds %__foo_vla, %__foo_vla* %vla_struct, i32 0, i32 1
  %2 = getelementptr inbounds [2 x i32], [2 x i32]* %vla_dimensions_gep, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds [2 x i32], [2 x i32]* %vla_dimensions_gep, i32 0, i32 1
  store i32 1, i32* %3, align 4
  store i16* %1, i16** %vla_array_gep, align 8
  %4 = load %__foo_vla, %__foo_vla* %vla_struct, align 8
  call void @foo(%__foo_vla %4)
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }

