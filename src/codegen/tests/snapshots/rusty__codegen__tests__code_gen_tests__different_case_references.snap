---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%prg = type { i16, i16, i32 }

@prg_instance = global %prg { i16 0, i16 1, i32 2 }, section "$RUSTY$var-prg_instance:r3i16i16i32"

define void @prg(%prg* %0) {
entry:
  %y = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %z = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %zz = getelementptr inbounds %prg, %prg* %0, i32 0, i32 2
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%prg = type { i16, i16, i32 }

@prg_instance = external global %prg, section "$RUSTY$var-prg_instance:r3i16i16i32"

define void @__init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%prg = type { i16, i16, i32 }

@prg_instance = external global %prg, section "$RUSTY$var-prg_instance:r3i16i16i32"

define void @__init___testproject() {
entry:
  call void @__init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_prg(%prg*)

declare void @prg(%prg*)
