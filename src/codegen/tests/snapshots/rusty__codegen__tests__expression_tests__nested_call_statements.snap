---
source: src/codegen/tests/expression_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type {}

@main_instance = global %main zeroinitializer

define i32 @foo(i32 %0) {
entry:
  %foo = alloca i32, align 4
  %a = alloca i32, align 4
  store i32 %0, i32* %a, align 4
  store i32 0, i32* %foo, align 4
  %foo_ret = load i32, i32* %foo, align 4
  ret i32 %foo_ret
}

define void @main(%main* %0) {
entry:
  %call = call i32 @foo(i32 2)
  %call1 = call i32 @foo(i32 %call)
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%main = type {}

@main_instance = external global %main

define void @__init_main(%main* %0) {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

declare void @main(%main*)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%main = type {}

@main_instance = external global %main

define void @__init___testproject() {
entry:
  call void @__init_main(%main* @main_instance)
  ret void
}

declare void @__init_main(%main*)

declare void @main(%main*)
