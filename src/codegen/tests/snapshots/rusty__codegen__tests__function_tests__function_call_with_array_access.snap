---
source: src/codegen/tests/function_tests.rs
expression: result
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"
target datalayout = "[filtered]"
target triple = "[filtered]"

define void @foo(i32* %0) {
entry:
  %foo = alloca i32*, align 8
  store i32* %0, i32** %foo, align 8
  %deref = load i32*, i32** %foo, align 8
  store [5 x i32] [i32 5, i32 4, i32 3, i32 2, i32 1], i32* %deref, align 4
  ret void
}

define void @main() {
entry:
  %value = alloca i32, align 4
  store i32 0, i32* %value, align 4
  %__foo0 = alloca [5 x i32], align 4
  %0 = bitcast [5 x i32]* %__foo0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 ptrtoint ([5 x i32]* getelementptr ([5 x i32], [5 x i32]* null, i32 1) to i64), i1 false)
  %1 = bitcast [5 x i32]* %__foo0 to i32*
  call void @foo(i32* %1)
  %tmpVar = getelementptr inbounds [5 x i32], [5 x i32]* %__foo0, i32 0, i32 2
  %load_tmpVar = load i32, i32* %tmpVar, align 4
  store i32 %load_tmpVar, i32* %value, align 4
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
