---
source: src/codegen/tests/code_gen_tests.rs
expression: prg
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"
target datalayout = "[filtered]"
target triple = "[filtered]"

%MyClass = type { i16, i16 }
%prg = type { %MyClass, i16 }

@__MyClass__init = unnamed_addr constant %MyClass zeroinitializer
@prg_instance = global %prg zeroinitializer

define void @MyClass(%MyClass* %0) {
entry:
  %this = alloca %MyClass*, align 8
  store %MyClass* %0, %MyClass** %this, align 8
  %x = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 0
  %y = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 1
  ret void
}

define void @MyClass__testMethod(%MyClass* %0, i16* %1) {
entry:
  %this = alloca %MyClass*, align 8
  store %MyClass* %0, %MyClass** %this, align 8
  %x = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 0
  %y = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 1
  %myMethodArg = alloca i16*, align 8
  store i16* %1, i16** %myMethodArg, align 8
  %deref = load i16*, i16** %myMethodArg, align 8
  %load_x = load i16, i16* %x, align 2
  store i16 %load_x, i16* %deref, align 2
  ret void
}

define void @prg(%prg* %0) {
entry:
  %cl = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  call void @MyClass__testMethod(%MyClass* %cl, i16* %x)
  ret void
}
