---
source: src/codegen/tests/code_gen_tests.rs
expression: res
---
; ModuleID = 'main'
source_filename = "main"

%0 = type { %cls2 }
%cls = type { i16, i16 }
%cls2 = type { %cls }
%cls2.myMethod = type {}

@__cls__init = unnamed_addr constant %cls zeroinitializer
@__cls2__init = unnamed_addr constant %cls2 zeroinitializer
@____init = unnamed_addr constant %0 zeroinitializer

define void @cls(%cls* %0) {
entry:
  %x = getelementptr inbounds %cls, %cls* %0, i32 0, i32 0
  %y = getelementptr inbounds %cls, %cls* %0, i32 0, i32 1
  ret void
}

define void @cls2(%cls2* %0) {
entry:
  %__super__ = getelementptr inbounds %cls2, %cls2* %0, i32 0, i32 0
  %x = getelementptr inbounds %cls, %cls* %__super__, i32 0, i32 0
  %y = getelementptr inbounds %cls, %cls* %__super__, i32 0, i32 1
  ret void
}

define i32 @cls2.myMethod(%cls2* %0, %cls2.myMethod* %1) {
entry:
  %__super__ = getelementptr inbounds %cls2, %cls2* %0, i32 0, i32 0
  %x = getelementptr inbounds %cls, %cls* %__super__, i32 0, i32 0
  %y = getelementptr inbounds %cls, %cls* %__super__, i32 0, i32 1
  %myMethod = alloca i32, align 4
  store i32 0, i32* %myMethod, align 4
  store i16 33, i16* %x, align 2
  %cls2.myMethod_ret = load i32, i32* %myMethod, align 4
  ret i32 %cls2.myMethod_ret
}

define void @0(%0* %0) {
entry:
  %myClass = getelementptr inbounds %0, %0* %0, i32 0, i32 0
  %load_ = load %cls2, %cls2* %myClass, align 2
  ret void
}

