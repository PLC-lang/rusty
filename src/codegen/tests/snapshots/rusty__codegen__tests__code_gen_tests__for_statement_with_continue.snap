---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%prg = type { i32 }

@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r1i32"

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  store i32 3, i32* %x, align 4
  br i1 true, label %predicate_sle, label %predicate_sge

predicate_sle:                                    ; preds = %increment, %entry
  %1 = load i32, i32* %x, align 4
  %condition = icmp sle i32 %1, 10
  br i1 %condition, label %loop, label %continue

predicate_sge:                                    ; preds = %increment, %entry
  %2 = load i32, i32* %x, align 4
  %condition1 = icmp sge i32 %2, 10
  br i1 %condition1, label %loop, label %continue

loop:                                             ; preds = %predicate_sge, %predicate_sle
  %load_x = load i32, i32* %x, align 4
  %tmpVar = add i32 %load_x, 1
  store i32 %tmpVar, i32* %x, align 4
  br label %increment

buffer_block:                                     ; No predecessors!
  %load_x2 = load i32, i32* %x, align 4
  %tmpVar3 = sub i32 %load_x2, 1
  store i32 %tmpVar3, i32* %x, align 4
  br label %increment

increment:                                        ; preds = %buffer_block, %loop
  %3 = load i32, i32* %x, align 4
  %next = add i32 7, %3
  store i32 %next, i32* %x, align 4
  br i1 true, label %predicate_sle, label %predicate_sge

continue:                                         ; preds = %predicate_sge, %predicate_sle
  ret void
}
