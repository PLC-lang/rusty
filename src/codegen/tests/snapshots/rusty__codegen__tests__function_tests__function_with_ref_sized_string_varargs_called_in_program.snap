---
source: src/codegen/tests/function_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%prg = type { i32 }

@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r1i32"
@utf08_literal_0 = private unnamed_addr constant [2 x i8] c"a\00"
@utf08_literal_1 = private unnamed_addr constant [4 x i8] c"abc\00"
@utf08_literal_2 = private unnamed_addr constant [7 x i8] c"abcdef\00"

declare i32 @foo(i32, i8**) section "fn-$RUSTY$foo:i32"

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %1 = alloca [3 x i8*], align 8
  %2 = getelementptr inbounds [3 x i8*], [3 x i8*]* %1, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @utf08_literal_0, i32 0, i32 0), i8** %2, align 8
  %3 = getelementptr inbounds [3 x i8*], [3 x i8*]* %1, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @utf08_literal_1, i32 0, i32 0), i8** %3, align 8
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* %1, i32 0, i32 2
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @utf08_literal_2, i32 0, i32 0), i8** %4, align 8
  %5 = bitcast [3 x i8*]* %1 to i8**
  %call = call i32 @foo(i32 3, i8** %5)
  store i32 %call, i32* %x, align 4
  ret void
}
