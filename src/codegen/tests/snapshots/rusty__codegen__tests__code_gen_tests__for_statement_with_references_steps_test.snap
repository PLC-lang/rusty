---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%prg = type { i32, i32, i32, i32 }

@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r4i32i32i32i32"

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %step = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %y = getelementptr inbounds %prg, %prg* %0, i32 0, i32 2
  %z = getelementptr inbounds %prg, %prg* %0, i32 0, i32 3
  %load_y = load i32, i32* %y, align 4
  store i32 %load_y, i32* %x, align 4
  %load_z = load i32, i32* %z, align 4
  %1 = load i32, i32* %x, align 4
  %load_step = load i32, i32* %step, align 4
  %is_incrementing = icmp sgt i32 %load_step, 0
  br i1 %is_incrementing, label %predicate_inc, label %predicate_dec

predicate_inc:                                    ; preds = %loop, %entry
  %2 = load i32, i32* %x, align 4
  %condition = icmp sle i32 %2, %load_z
  br i1 %condition, label %loop, label %continue

predicate_dec:                                    ; preds = %loop, %entry
  %3 = load i32, i32* %x, align 4
  %condition1 = icmp sge i32 %3, %load_z
  br i1 %condition1, label %loop, label %continue

loop:                                             ; preds = %predicate_dec, %predicate_inc
  %load_x = load i32, i32* %x, align 4
  %4 = load i32, i32* %x, align 4
  %increment = add i32 %4, %load_step
  store i32 %increment, i32* %x, align 4
  br i1 %is_incrementing, label %predicate_inc, label %predicate_dec

continue:                                         ; preds = %predicate_dec, %predicate_inc
  ret void
}
