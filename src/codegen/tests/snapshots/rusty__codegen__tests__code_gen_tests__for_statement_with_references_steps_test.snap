---
source: src/codegen/tests/code_gen_tests.rs
expression: result

---
; ModuleID = 'main'
source_filename = "main"

%prg_interface = type { i32, i32, i32, i32 }

@prg_instance = global %prg_interface zeroinitializer

define void @prg(%prg_interface* %0) {
entry:
  %step = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 0
  %x = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 1
  %y = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 2
  %z = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 3
  %load_y = load i32, i32* %y, align 4
  store i32 %load_y, i32* %x, align 4
  br label %condition_check

condition_check:                                  ; preds = %increment, %entry
  %load_x = load i32, i32* %x, align 4
  %load_x1 = load i32, i32* %x, align 4
  %load_z = load i32, i32* %z, align 4
  %tmpVar = icmp sle i32 %load_x1, %load_z
  %1 = icmp ne i1 %tmpVar, false
  br i1 %1, label %6, label %7

for_body:                                         ; preds = %4
  %load_x11 = load i32, i32* %x, align 4
  br label %increment

increment:                                        ; preds = %for_body
  %load_step = load i32, i32* %step, align 4
  %tmpVar12 = add i32 %load_x, %load_step
  store i32 %tmpVar12, i32* %x, align 4
  br label %condition_check

continue:                                         ; preds = %4
  ret void

2:                                                ; preds = %7
  %load_x5 = load i32, i32* %x, align 4
  %load_z6 = load i32, i32* %z, align 4
  %tmpVar7 = icmp sge i32 %load_x5, %load_z6
  %3 = icmp ne i1 %tmpVar7, false
  br i1 %3, label %10, label %11

4:                                                ; preds = %11, %7
  %5 = phi i1 [ %8, %7 ], [ %12, %11 ]
  br i1 %5, label %for_body, label %continue

6:                                                ; preds = %condition_check
  %load_x2 = load i32, i32* %x, align 4
  %load_y3 = load i32, i32* %y, align 4
  %tmpVar4 = icmp sge i32 %load_x2, %load_y3
  br label %7

7:                                                ; preds = %6, %condition_check
  %8 = phi i1 [ %tmpVar, %condition_check ], [ %tmpVar4, %6 ]
  %9 = icmp ne i1 %8, false
  br i1 %9, label %4, label %2

10:                                               ; preds = %2
  %load_x8 = load i32, i32* %x, align 4
  %load_y9 = load i32, i32* %y, align 4
  %tmpVar10 = icmp sle i32 %load_x8, %load_y9
  br label %11

11:                                               ; preds = %10, %2
  %12 = phi i1 [ %tmpVar7, %2 ], [ %tmpVar10, %10 ]
  br label %4
}

