---
source: src/codegen/tests/string_tests.rs
expression: program
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type { [81 x i8] }

@main_instance = global %main zeroinitializer, section "var-$RUSTY$main_instance:r1s8u81"
@utf08_literal_0 = private unnamed_addr constant [4 x i8] c"abc\00"

define void @ret([81 x i8]* %0) section "fn-$RUSTY$ret:s8u81" {
entry:
  %ret = alloca [81 x i8]*, align 8
  store [81 x i8]* %0, [81 x i8]** %ret, align 8
  %deref = load [81 x i8]*, [81 x i8]** %ret, align 8
  %1 = bitcast [81 x i8]* %deref to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 ptrtoint ([81 x i8]* getelementptr ([81 x i8], [81 x i8]* null, i32 1) to i64), i1 false)
  %deref1 = load [81 x i8]*, [81 x i8]** %ret, align 8
  %2 = bitcast [81 x i8]* %deref1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %2, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @utf08_literal_0, i32 0, i32 0), i32 4, i1 false)
  ret void
}

define void @main(%main* %0) section "fn-$RUSTY$main:v" {
entry:
  %str = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %1 = alloca [81 x i8], align 1
  call void @ret([81 x i8]* %1)
  %2 = bitcast [81 x i8]* %str to i8*
  %3 = bitcast [81 x i8]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %2, i8* align 1 %3, i32 80, i1 false)
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #1

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
attributes #1 = { argmemonly nofree nounwind willreturn }
; ModuleID = '__initializers'
source_filename = "__initializers"

%main = type { [81 x i8] }

@main_instance = external global %main, section "var-$RUSTY$main_instance:r1s8u81"

define void @__init_main(%main* %0) section "fn-$RUSTY$__init_main:v[pr1s8u81]" {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

declare void @main(%main*) section "fn-$RUSTY$main:v"
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%main = type { [81 x i8] }

@main_instance = external global %main, section "var-$RUSTY$main_instance:r1s8u81"

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" {
entry:
  call void @__init_main(%main* @main_instance)
  ret void
}

declare void @__init_main(%main*) section "fn-$RUSTY$__init_main:v[pr1s8u81]"

declare void @main(%main*) section "fn-$RUSTY$main:v"
