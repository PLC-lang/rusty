---
source: src/codegen/tests/parameters_tests.rs
assertion_line: 396
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%prog_interface = type { i32, i32, i32* }
%main_interface = type { i32, i32, i32 }

@prog_instance = global %prog_interface zeroinitializer
@main_instance = global %main_interface zeroinitializer

define void @prog(%prog_interface* %0) {
entry:
  %input1 = getelementptr inbounds %prog_interface, %prog_interface* %0, i32 0, i32 0
  %output1 = getelementptr inbounds %prog_interface, %prog_interface* %0, i32 0, i32 1
  %inout1 = getelementptr inbounds %prog_interface, %prog_interface* %0, i32 0, i32 2
  ret void
}

define void @main(%main_interface* %0) {
entry:
  %var1 = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 0
  %var2 = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 1
  %var3 = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 2
  %load_var1 = load i32, i32* %var1, align 4
  store i32 %load_var1, i32* getelementptr inbounds (%prog_interface, %prog_interface* @prog_instance, i32 0, i32 0), align 4
  store i32* %var3, i32** getelementptr inbounds (%prog_interface, %prog_interface* @prog_instance, i32 0, i32 2), align 8
  call void @prog(%prog_interface* @prog_instance)
  %1 = load i32, i32* getelementptr inbounds (%prog_interface, %prog_interface* @prog_instance, i32 0, i32 1), align 4
  store i32 %1, i32* %var2, align 4
  ret void
}

