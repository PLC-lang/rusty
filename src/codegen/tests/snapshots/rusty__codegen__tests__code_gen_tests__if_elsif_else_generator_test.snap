---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%prg = type { i32, i32, i32, i32, i8, i8, i8 }

@prg_instance = global %prg zeroinitializer

define void @prg(%prg* %0) section "fn-prg:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %y = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %z = getelementptr inbounds %prg, %prg* %0, i32 0, i32 2
  %u = getelementptr inbounds %prg, %prg* %0, i32 0, i32 3
  %b1 = getelementptr inbounds %prg, %prg* %0, i32 0, i32 4
  %b2 = getelementptr inbounds %prg, %prg* %0, i32 0, i32 5
  %b3 = getelementptr inbounds %prg, %prg* %0, i32 0, i32 6
  %load_b1 = load i8, i8* %b1, align 1
  %1 = icmp ne i8 %load_b1, 0
  br i1 %1, label %condition_body, label %branch

condition_body:                                   ; preds = %entry
  %load_x = load i32, i32* %x, align 4
  br label %continue

branch:                                           ; preds = %entry
  %load_b2 = load i8, i8* %b2, align 1
  %2 = icmp ne i8 %load_b2, 0
  br i1 %2, label %condition_body2, label %branch1

condition_body2:                                  ; preds = %branch
  %load_y = load i32, i32* %y, align 4
  br label %continue

branch1:                                          ; preds = %branch
  %load_b3 = load i8, i8* %b3, align 1
  %3 = icmp ne i8 %load_b3, 0
  br i1 %3, label %condition_body3, label %else

condition_body3:                                  ; preds = %branch1
  %load_z = load i32, i32* %z, align 4
  br label %continue

else:                                             ; preds = %branch1
  %load_u = load i32, i32* %u, align 4
  br label %continue

continue:                                         ; preds = %else, %condition_body3, %condition_body2, %condition_body
  ret void
}
