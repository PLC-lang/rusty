---
source: src/codegen/tests/code_gen_tests.rs
assertion_line: 1697
expression: result

---
; ModuleID = 'main'
source_filename = "main"

%prg_interface = type { [8 x i8] }

@prg_instance = global %prg_interface zeroinitializer
@main.bArray__init = unnamed_addr constant [8 x i8] zeroinitializer
@prg.bArray__init = unnamed_addr constant [8 x i8] zeroinitializer

define i16 @main() {
entry:
  %bArray = alloca [8 x i8], align 1
  %main = alloca i16, align 2
  %0 = bitcast [8 x i8]* %bArray to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @main.bArray__init, i32 0, i32 0), i64 mul nuw (i64 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i64), i64 8), i1 false)
  store i16 0, i16* %main, align 2
  %tmpVar = getelementptr inbounds [8 x i8], [8 x i8]* %bArray, i32 0, i32 2
  store i8 1, i8* %tmpVar, align 1
  %main_ret = load i16, i16* %main, align 2
  ret i16 %main_ret
}

define void @prg(%prg_interface* %0) {
entry:
  %bArray = getelementptr inbounds %prg_interface, %prg_interface* %0, i32 0, i32 0
  %load_bArray = load [8 x i8], [8 x i8]* %bArray, align 1
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nosync nounwind willreturn }

