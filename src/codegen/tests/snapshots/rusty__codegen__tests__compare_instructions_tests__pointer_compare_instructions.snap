---
source: src/codegen/tests/compare_instructions_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%main = type { i16, i16, i16*, i8 }

@main_instance = global %main { i16 10, i16 20, i16* null, i8 0 }

define void @main(%main* %0) {
entry:
  %x = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %y = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %pt = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  %comp = getelementptr inbounds %main, %main* %0, i32 0, i32 3
  store i16* %x, i16** %pt, align 8
  %load_pt = load i16*, i16** %pt, align 8
  %load_pt1 = load i16*, i16** %pt, align 8
  %1 = ptrtoint i16* %load_pt to i64
  %2 = ptrtoint i16* %load_pt1 to i64
  %tmpVar = icmp eq i64 %1, %2
  store i1 %tmpVar, i8* %comp, align 1
  %load_pt2 = load i16*, i16** %pt, align 8
  %load_y = load i16, i16* %y, align 2
  %3 = sext i16 %load_y to i64
  %4 = ptrtoint i16* %load_pt2 to i64
  %tmpVar3 = icmp ne i64 %4, %3
  store i1 %tmpVar3, i8* %comp, align 1
  %load_pt4 = load i16*, i16** %pt, align 8
  %load_pt5 = load i16*, i16** %pt, align 8
  %5 = ptrtoint i16* %load_pt4 to i64
  %6 = ptrtoint i16* %load_pt5 to i64
  %tmpVar6 = icmp slt i64 %5, %6
  store i1 %tmpVar6, i8* %comp, align 1
  %load_pt7 = load i16*, i16** %pt, align 8
  %load_y8 = load i16, i16* %y, align 2
  %7 = sext i16 %load_y8 to i64
  %8 = ptrtoint i16* %load_pt7 to i64
  %tmpVar9 = icmp sgt i64 %8, %7
  store i1 %tmpVar9, i8* %comp, align 1
  %load_pt10 = load i16*, i16** %pt, align 8
  %load_pt11 = load i16*, i16** %pt, align 8
  %9 = ptrtoint i16* %load_pt10 to i64
  %10 = ptrtoint i16* %load_pt11 to i64
  %tmpVar12 = icmp sle i64 %9, %10
  store i1 %tmpVar12, i8* %comp, align 1
  %load_y13 = load i16, i16* %y, align 2
  %11 = sext i16 %load_y13 to i64
  %load_pt14 = load i16*, i16** %pt, align 8
  %12 = ptrtoint i16* %load_pt14 to i64
  %tmpVar15 = icmp sge i64 %11, %12
  store i1 %tmpVar15, i8* %comp, align 1
  ret void
}

