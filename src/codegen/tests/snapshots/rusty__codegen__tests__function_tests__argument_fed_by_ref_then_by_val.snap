---
source: src/codegen/tests/function_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

define i32 @main() section "fn-main:i32" {
entry:
  %main = alloca i32, align 4
  %arr = alloca [5 x i32], align 4
  %0 = bitcast [5 x i32]* %arr to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 ptrtoint ([5 x i32]* getelementptr ([5 x i32], [5 x i32]* null, i32 1) to i64), i1 false)
  store i32 0, i32* %main, align 4
  %1 = bitcast [5 x i32]* %arr to i32*
  %call = call i32 @fn_by_ref(i32* %1)
  %main_ret = load i32, i32* %main, align 4
  ret i32 %main_ret
}

define i32 @fn_by_ref(i32* %0) section "fn-fn_by_ref:i32[pv]" {
entry:
  %fn_by_ref = alloca i32, align 4
  %arg_by_ref = alloca i32*, align 8
  store i32* %0, i32** %arg_by_ref, align 8
  store i32 0, i32* %fn_by_ref, align 4
  %deref = load i32*, i32** %arg_by_ref, align 8
  %1 = bitcast i32* %deref to [5 x i32]*
  %load_arg_by_ref = load [5 x i32], [5 x i32]* %1, align 4
  %call = call i32 @fn_by_val([5 x i32] %load_arg_by_ref)
  %fn_by_ref_ret = load i32, i32* %fn_by_ref, align 4
  ret i32 %fn_by_ref_ret
}

define i32 @fn_by_val([5 x i32] %0) section "fn-fn_by_val:i32[v]" {
entry:
  %fn_by_val = alloca i32, align 4
  %arg_by_val = alloca [5 x i32], align 4
  store [5 x i32] %0, [5 x i32]* %arg_by_val, align 4
  store i32 0, i32* %fn_by_val, align 4
  %fn_by_val_ret = load i32, i32* %fn_by_val, align 4
  ret i32 %fn_by_val_ret
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
