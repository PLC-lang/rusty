---
source: src/codegen/tests/code_gen_tests.rs
expression: result

---
; ModuleID = 'main'
source_filename = "main"

%prg_interface = type {}
%foo_interface = type { i32, i16, i16, i16 }

@prg_instance = global %prg_interface zeroinitializer

define i32 @foo(%foo_interface* %0) {
entry:
  %in1 = getelementptr inbounds %foo_interface, %foo_interface* %0, i32 0, i32 0
  %x = getelementptr inbounds %foo_interface, %foo_interface* %0, i32 0, i32 1
  %y = getelementptr inbounds %foo_interface, %foo_interface* %0, i32 0, i32 2
  %z = getelementptr inbounds %foo_interface, %foo_interface* %0, i32 0, i32 3
  %foo = alloca i32, align 4
  store i16 7, i16* %x, align 2
  store i16 9, i16* %z, align 2
  store i32 1, i32* %foo, align 4
  %foo_ret = load i32, i32* %foo, align 4
  ret i32 %foo_ret
}

define void @prg(%prg_interface* %0) {
entry:
  %foo_instance = alloca %foo_interface, align 8
  br label %input

input:                                            ; preds = %entry
  %1 = getelementptr inbounds %foo_interface, %foo_interface* %foo_instance, i32 0, i32 0
  store i32 5, i32* %1, align 4
  br label %call

call:                                             ; preds = %input
  %call1 = call i32 @foo(%foo_interface* %foo_instance)
  br label %output

output:                                           ; preds = %call
  br label %continue

continue:                                         ; preds = %output
  ret void
}

