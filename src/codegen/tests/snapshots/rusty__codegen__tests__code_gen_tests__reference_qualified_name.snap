---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%fb = type { i32 }
%foo = type { i32, i32, %fb }
%prg = type { i32 }

@__fb__init = unnamed_addr constant %fb zeroinitializer
@foo_instance = global %foo zeroinitializer
@prg_instance = global %prg zeroinitializer

define void @fb(%fb* %0) section "fn-fb:v[i32]" {
entry:
  %x = getelementptr inbounds %fb, %fb* %0, i32 0, i32 0
  ret void
}

define void @foo(%foo* %0) section "fn-foo:v[i32][i32][v]" {
entry:
  %x = getelementptr inbounds %foo, %foo* %0, i32 0, i32 0
  %y = getelementptr inbounds %foo, %foo* %0, i32 0, i32 1
  %baz = getelementptr inbounds %foo, %foo* %0, i32 0, i32 2
  ret void
}

define void @prg(%prg* %0) section "fn-prg:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %load_x = load i32, i32* getelementptr inbounds (%foo, %foo* @foo_instance, i32 0, i32 0), align 4
  store i32 %load_x, i32* %x, align 4
  %load_y = load i32, i32* getelementptr inbounds (%foo, %foo* @foo_instance, i32 0, i32 1), align 4
  store i32 %load_y, i32* %x, align 4
  %load_x1 = load i32, i32* getelementptr inbounds (%foo, %foo* @foo_instance, i32 0, i32 2, i32 0), align 4
  store i32 %load_x1, i32* %x, align 4
  ret void
}
