---
source: src/codegen/tests/debug_tests.rs
expression: codegen
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%myStruct = type { i32, double, [11 x i32] }

@b = global [11 x %myStruct] zeroinitializer, !dbg !0
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___Test, i8* null }]
@__myStruct__init = constant %myStruct zeroinitializer, !dbg !14
@gStruct = global %myStruct zeroinitializer, !dbg !16

define void @__init_mystruct(%myStruct* %0) {
entry:
  %self = alloca %myStruct*, align 8
  store %myStruct* %0, %myStruct** %self, align 8
  ret void
}

define void @__init___Test() {
entry:
  call void @__init_mystruct(%myStruct* @gStruct)
  ret void
}

!llvm.module.flags = !{!18, !19}
!llvm.dbg.cu = !{!20}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "b", scope: !2, file: !2, line: 12, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 5632, elements: !12)
!4 = !DICompositeType(tag: DW_TAG_structure_type, name: "myStruct", scope: !2, file: !2, line: 2, size: 512, flags: DIFlagPublic, elements: !5, identifier: "myStruct")
!5 = !{!6, !8, !10}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, line: 3, baseType: !7, size: 32, flags: DIFlagPublic)
!7 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, line: 4, baseType: !9, size: 64, offset: 64, flags: DIFlagPublic)
!9 = !DIBasicType(name: "LREAL", size: 64, encoding: DW_ATE_float, flags: DIFlagPublic)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2, file: !2, line: 5, baseType: !11, size: 352, offset: 128, flags: DIFlagPublic)
!11 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 352, elements: !12)
!12 = !{!13}
!13 = !DISubrange(count: 11, lowerBound: 0)
!14 = !DIGlobalVariableExpression(var: !15, expr: !DIExpression())
!15 = distinct !DIGlobalVariable(name: "__myStruct__init", scope: !2, file: !2, line: 2, type: !4, isLocal: false, isDefinition: true)
!16 = !DIGlobalVariableExpression(var: !17, expr: !DIExpression())
!17 = distinct !DIGlobalVariable(name: "gStruct", scope: !2, file: !2, line: 11, type: !4, isLocal: false, isDefinition: true)
!18 = !{i32 2, !"Dwarf Version", i32 5}
!19 = !{i32 2, !"Debug Info Version", i32 3}
!20 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !21, splitDebugInlining: false)
!21 = !{!16, !14, !0}
