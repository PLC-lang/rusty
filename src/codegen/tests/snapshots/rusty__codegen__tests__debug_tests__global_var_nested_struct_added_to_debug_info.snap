---
source: src/codegen/tests/debug_tests.rs
expression: codegen
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%myStruct = type { i32, %myStruct2 }
%myStruct2 = type { i32, double }

@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___Test, i8* null }]
@__myStruct__init = constant %myStruct zeroinitializer, !dbg !0
@__myStruct2__init = constant %myStruct2 zeroinitializer, !dbg !13
@gStruct = global %myStruct zeroinitializer, !dbg !15

define void @__init_mystruct(%myStruct* %0) {
entry:
  %self = alloca %myStruct*, align 8
  store %myStruct* %0, %myStruct** %self, align 8
  %deref = load %myStruct*, %myStruct** %self, align 8
  %b = getelementptr inbounds %myStruct, %myStruct* %deref, i32 0, i32 1
  call void @__init_mystruct2(%myStruct2* %b)
  ret void
}

define void @__init_mystruct2(%myStruct2* %0) {
entry:
  %self = alloca %myStruct2*, align 8
  store %myStruct2* %0, %myStruct2** %self, align 8
  ret void
}

define void @__init___Test() {
entry:
  call void @__init_mystruct(%myStruct* @gStruct)
  ret void
}

!llvm.module.flags = !{!17, !18}
!llvm.dbg.cu = !{!19}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__myStruct__init", scope: !2, file: !2, line: 2, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "<internal>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "myStruct", scope: !2, file: !2, line: 2, size: 192, flags: DIFlagPublic, elements: !4, identifier: "myStruct")
!4 = !{!5, !7}
!5 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, line: 3, baseType: !6, size: 32, flags: DIFlagPublic)
!6 = !DIBasicType(name: "DINT", size: 32, encoding: DW_ATE_signed, flags: DIFlagPublic)
!7 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, line: 4, baseType: !8, size: 128, offset: 32, flags: DIFlagPublic)
!8 = !DICompositeType(tag: DW_TAG_structure_type, name: "myStruct2", scope: !2, file: !2, line: 8, size: 128, flags: DIFlagPublic, elements: !9, identifier: "myStruct2")
!9 = !{!10, !11}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2, file: !2, line: 9, baseType: !6, size: 32, flags: DIFlagPublic)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2, file: !2, line: 10, baseType: !12, size: 64, offset: 32, flags: DIFlagPublic)
!12 = !DIBasicType(name: "LREAL", size: 64, encoding: DW_ATE_float, flags: DIFlagPublic)
!13 = !DIGlobalVariableExpression(var: !14, expr: !DIExpression())
!14 = distinct !DIGlobalVariable(name: "__myStruct2__init", scope: !2, file: !2, line: 8, type: !8, isLocal: false, isDefinition: true)
!15 = !DIGlobalVariableExpression(var: !16, expr: !DIExpression())
!16 = distinct !DIGlobalVariable(name: "gStruct", scope: !2, file: !2, line: 15, type: !3, isLocal: false, isDefinition: true)
!17 = !{i32 2, !"Dwarf Version", i32 5}
!18 = !{i32 2, !"Debug Info Version", i32 3}
!19 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !20, splitDebugInlining: false)
!20 = !{!15, !0, !13}
