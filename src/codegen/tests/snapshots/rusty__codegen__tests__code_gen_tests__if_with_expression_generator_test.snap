---
source: src/codegen/tests/code_gen_tests.rs
expression: result
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%prg = type { i32, i8 }

@prg_instance = global %prg zeroinitializer

define void @prg(%prg* %0) {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %b1 = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %load_x = load i32, i32* %x, align 4
  %tmpVar = icmp sgt i32 %load_x, 1
  %1 = zext i1 %tmpVar to i8
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %5, label %3

condition_body:                                   ; preds = %5
  %load_x1 = load i32, i32* %x, align 4
  br label %continue

continue:                                         ; preds = %condition_body, %5
  ret void

3:                                                ; preds = %entry
  %load_b1 = load i8, i8* %b1, align 1
  %4 = icmp ne i8 %load_b1, 0
  br label %5

5:                                                ; preds = %3, %entry
  %6 = phi i1 [ %2, %entry ], [ %4, %3 ]
  %7 = zext i1 %6 to i8
  %8 = icmp ne i8 %7, 0
  br i1 %8, label %condition_body, label %continue
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%prg = type { i32, i8 }

@prg_instance = external global %prg

define void @__init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*)

define void @__user_init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%prg = type { i32, i8 }

@prg_instance = external global %prg
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___testproject, i8* null }]

define void @__init___testproject() {
entry:
  call void @__init_prg(%prg* @prg_instance)
  call void @__user_init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_prg(%prg*)

declare void @prg(%prg*)

declare void @__user_init_prg(%prg*)
