---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%MyClass = type { i16, i16 }
%prg = type { %MyClass, i16 }
%MyClass.testMethod = type { i16, i16 }

@__MyClass__init = unnamed_addr constant %MyClass zeroinitializer, section "var-$RUSTY$__MyClass__init:r2i16i16"
@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r2r2i16i16i16"

define void @MyClass(%MyClass* %0) section "fn-$RUSTY$MyClass:v" {
entry:
  %x = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 0
  %y = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 1
  ret void
}

define void @MyClass.testMethod(%MyClass* %0, %MyClass.testMethod* %1) section "fn-$RUSTY$MyClass.testMethod:v[i16]" {
entry:
  %x = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 0
  %y = getelementptr inbounds %MyClass, %MyClass* %0, i32 0, i32 1
  %myMethodArg = getelementptr inbounds %MyClass.testMethod, %MyClass.testMethod* %1, i32 0, i32 0
  %myMethodLocalVar = getelementptr inbounds %MyClass.testMethod, %MyClass.testMethod* %1, i32 0, i32 1
  store i16 0, i16* %myMethodLocalVar, align 2
  %load_myMethodArg = load i16, i16* %myMethodArg, align 2
  store i16 %load_myMethodArg, i16* %x, align 2
  %load_x = load i16, i16* %x, align 2
  store i16 %load_x, i16* %y, align 2
  %load_myMethodLocalVar = load i16, i16* %myMethodLocalVar, align 2
  %2 = sext i16 %load_myMethodLocalVar to i32
  %load_y = load i16, i16* %y, align 2
  %3 = sext i16 %load_y to i32
  %tmpVar = icmp eq i32 %2, %3
  ret void
}

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %cl = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %x1 = getelementptr inbounds %MyClass, %MyClass* %cl, i32 0, i32 0
  %load_x = load i16, i16* %x1, align 2
  store i16 %load_x, i16* %x, align 2
  %MyClass.testMethod_instance = alloca %MyClass.testMethod, align 8
  %1 = getelementptr inbounds %MyClass.testMethod, %MyClass.testMethod* %MyClass.testMethod_instance, i32 0, i32 0
  %load_x2 = load i16, i16* %x, align 2
  store i16 %load_x2, i16* %1, align 2
  call void @MyClass.testMethod(%MyClass* %cl, %MyClass.testMethod* %MyClass.testMethod_instance)
  %MyClass.testMethod_instance3 = alloca %MyClass.testMethod, align 8
  %2 = getelementptr inbounds %MyClass.testMethod, %MyClass.testMethod* %MyClass.testMethod_instance3, i32 0, i32 0
  %load_x4 = load i16, i16* %x, align 2
  store i16 %load_x4, i16* %2, align 2
  call void @MyClass.testMethod(%MyClass* %cl, %MyClass.testMethod* %MyClass.testMethod_instance3)
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%MyClass = type { i16, i16 }
%prg = type { %MyClass, i16 }
%MyClass.testMethod = type { i16, i16 }

@__MyClass__init = external global %MyClass, section "var-$RUSTY$__MyClass__init:r2i16i16"
@prg_instance = external global %prg, section "var-$RUSTY$prg_instance:r2r2i16i16i16"

define void @__init_myclass.testmethod(%MyClass.testMethod* %0) section "fn-$RUSTY$__init_myclass.testmethod:v[pr2i16i16]" {
entry:
  %self = alloca %MyClass.testMethod*, align 8
  store %MyClass.testMethod* %0, %MyClass.testMethod** %self, align 8
  ret void
}

declare void @MyClass.testMethod(%MyClass*, %MyClass.testMethod*) section "fn-$RUSTY$MyClass.testMethod:v[i16]"

define void @__init_myclass(%MyClass* %0) section "fn-$RUSTY$__init_myclass:v[pr2i16i16]" {
entry:
  %self = alloca %MyClass*, align 8
  store %MyClass* %0, %MyClass** %self, align 8
  ret void
}

declare void @MyClass(%MyClass*) section "fn-$RUSTY$MyClass:v"

define void @__init_prg(%prg* %0) section "fn-$RUSTY$__init_prg:v[pr2r2i16i16i16]" {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  %deref = load %prg*, %prg** %self, align 8
  %cl = getelementptr inbounds %prg, %prg* %deref, i32 0, i32 0
  call void @__init_myclass(%MyClass* %cl)
  ret void
}

declare void @prg(%prg*) section "fn-$RUSTY$prg:v"
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%prg = type { %MyClass, i16 }
%MyClass = type { i16, i16 }

@prg_instance = external global %prg, section "var-$RUSTY$prg_instance:r2r2i16i16i16"
@__MyClass__init = external global %MyClass, section "var-$RUSTY$__MyClass__init:r2i16i16"

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" {
entry:
  call void @__init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_prg(%prg*) section "fn-$RUSTY$__init_prg:v[pr2r2i16i16i16]"

declare void @prg(%prg*) section "fn-$RUSTY$prg:v"

declare void @MyClass(%MyClass*) section "fn-$RUSTY$MyClass:v"
