---
source: src/codegen/tests/expression_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

define i16 @baz() {
entry:
  %baz = alloca i16, align 2
  %ptr_x = alloca i16*, align 8
  %y = alloca i64, align 8
  store i16* null, i16** %ptr_x, align 8
  store i64 0, i64* %y, align 4
  store i16 0, i16* %baz, align 2
  %load_ptr_x = load i16*, i16** %ptr_x, align 8
  %0 = ptrtoint i16* %load_ptr_x to i64
  store i64 %0, i64* %y, align 4
  %baz_ret = load i16, i16* %baz, align 2
  ret i16 %baz_ret
}
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___testproject, i8* null }]

define void @__init___testproject() {
entry:
  ret void
}
