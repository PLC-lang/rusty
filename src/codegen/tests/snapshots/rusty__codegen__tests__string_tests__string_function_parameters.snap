---
source: src/codegen/tests/string_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%prg = type { [11 x i8], [81 x i8] }

@prg_instance = global %prg { [11 x i8] c"hello\00\00\00\00\00\00", [81 x i8] zeroinitializer }, section "var-prg_instance:v"
@__prg.s__init = unnamed_addr constant [11 x i8] c"hello\00\00\00\00\00\00"
@utf08_literal_0 = private unnamed_addr constant [6 x i8] c"hello\00"

define i16 @foo(i8* %0) section "fn-foo:i16[s8u81]" {
entry:
  %foo = alloca i16, align 2
  %s = alloca [81 x i8], align 1
  %bitcast = bitcast [81 x i8]* %s to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %bitcast, i8 0, i64 81, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %bitcast, i8* align 1 %0, i64 80, i1 false)
  store i16 0, i16* %foo, align 2
  %foo_ret = load i16, i16* %foo, align 2
  ret i16 %foo_ret

buffer_block:                                     ; No predecessors!
  %foo_ret1 = load i16, i16* %foo, align 2
  ret i16 %foo_ret1
}

define void @prg(%prg* %0) section "fn-prg:v" {
entry:
  %s = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %a = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %1 = bitcast [81 x i8]* %a to i8*
  %2 = bitcast [11 x i8]* %s to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %1, i8* align 1 %2, i32 11, i1 false)
  %3 = bitcast [81 x i8]* %a to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %3, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @utf08_literal_0, i32 0, i32 0), i32 6, i1 false)
  %4 = bitcast [11 x i8]* %s to i8*
  %call = call i16 @foo(i8* %4)
  %call1 = call i16 @foo(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @utf08_literal_0, i32 0, i32 0))
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #1

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
attributes #1 = { argmemonly nofree nounwind willreturn }
