---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%prg = type { float, float, float }

@prg_instance = global %prg zeroinitializer, section "$RUSTY$var-prg_instance:r3f32f32f32"

define void @prg(%prg* %0) {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %y = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %z = getelementptr inbounds %prg, %prg* %0, i32 0, i32 2
  store float 1.237500e+01, float* %x, align 4
  store float 2.500000e-01, float* %y, align 4
  %load_x = load float, float* %x, align 4
  %load_y = load float, float* %y, align 4
  %tmpVar = fadd float %load_x, %load_y
  store float %tmpVar, float* %z, align 4
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%prg = type { float, float, float }

@prg_instance = external global %prg, section "$RUSTY$var-prg_instance:r3f32f32f32"

define void @__init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%prg = type { float, float, float }

@prg_instance = external global %prg, section "$RUSTY$var-prg_instance:r3f32f32f32"

define void @__init___testproject() {
entry:
  call void @__init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_prg(%prg*)

declare void @prg(%prg*)
