---
source: src/codegen/tests/code_gen_tests.rs
assertion_line: 3159
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%main = type { i8, i64 }

@main_instance = global %main zeroinitializer

define i32 @CheckRangeSigned(i32 %0, i32 %1, i32 %2) {
entry:
  %CheckRangeSigned = alloca i32, align 4
  %v = alloca i32, align 4
  store i32 %0, i32* %v, align 4
  %low = alloca i32, align 4
  store i32 %1, i32* %low, align 4
  %up = alloca i32, align 4
  store i32 %2, i32* %up, align 4
  store i32 0, i32* %CheckRangeSigned, align 4
  %CheckRangeSigned_ret = load i32, i32* %CheckRangeSigned, align 4
  ret i32 %CheckRangeSigned_ret
}

define i32 @CheckRangeUnsigned(i32 %0, i32 %1, i32 %2) {
entry:
  %CheckRangeUnsigned = alloca i32, align 4
  %v = alloca i32, align 4
  store i32 %0, i32* %v, align 4
  %low = alloca i32, align 4
  store i32 %1, i32* %low, align 4
  %up = alloca i32, align 4
  store i32 %2, i32* %up, align 4
  store i32 0, i32* %CheckRangeUnsigned, align 4
  %CheckRangeUnsigned_ret = load i32, i32* %CheckRangeUnsigned, align 4
  ret i32 %CheckRangeUnsigned_ret
}

define i64 @CheckLRangeSigned(i64 %0, i64 %1, i64 %2) {
entry:
  %CheckLRangeSigned = alloca i64, align 8
  %v = alloca i64, align 8
  store i64 %0, i64* %v, align 4
  %low = alloca i64, align 8
  store i64 %1, i64* %low, align 4
  %up = alloca i64, align 8
  store i64 %2, i64* %up, align 4
  store i64 0, i64* %CheckLRangeSigned, align 4
  %CheckLRangeSigned_ret = load i64, i64* %CheckLRangeSigned, align 4
  ret i64 %CheckLRangeSigned_ret
}

define i64 @CheckLRangeUnsigned(i64 %0, i64 %1, i64 %2) {
entry:
  %CheckLRangeUnsigned = alloca i64, align 8
  %v = alloca i64, align 8
  store i64 %0, i64* %v, align 4
  %low = alloca i64, align 8
  store i64 %1, i64* %low, align 4
  %up = alloca i64, align 8
  store i64 %2, i64* %up, align 4
  store i64 0, i64* %CheckLRangeUnsigned, align 4
  %CheckLRangeUnsigned_ret = load i64, i64* %CheckLRangeUnsigned, align 4
  ret i64 %CheckLRangeUnsigned_ret
}

define void @main(%main* %0) {
entry:
  %a = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %j = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %call = call i32 @CheckRangeUnsigned(i32 1, i32 0, i32 100)
  %1 = trunc i32 %call to i8
  store i8 %1, i8* %a, align 1
  %call1 = call i64 @CheckLRangeUnsigned(i64 1, i64 0, i64 100)
  store i64 %call1, i64* %j, align 4
  ret void
}

