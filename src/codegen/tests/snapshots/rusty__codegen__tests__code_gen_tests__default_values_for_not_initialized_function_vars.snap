---
source: src/codegen/tests/code_gen_tests.rs
assertion_line: 2777
expression: result

---
; ModuleID = 'main'
source_filename = "main"

%func_interface = type { i16, [3 x i32], i32*, float }

define i16 @func(%func_interface* %0) {
entry:
  %int_var = getelementptr inbounds %func_interface, %func_interface* %0, i32 0, i32 0
  %arr_var = getelementptr inbounds %func_interface, %func_interface* %0, i32 0, i32 1
  %ptr_var = getelementptr inbounds %func_interface, %func_interface* %0, i32 0, i32 2
  %float_var = getelementptr inbounds %func_interface, %func_interface* %0, i32 0, i32 3
  %func = alloca i16, align 2
  store i16 0, i16* %int_var, align 2
  %1 = bitcast [3 x i32]* %arr_var to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 ptrtoint ([3 x i32]* getelementptr ([3 x i32], [3 x i32]* null, i32 1) to i64), i1 false)
  store i32* null, i32** %ptr_var, align 8
  store float 0.000000e+00, float* %float_var, align 4
  store i16 0, i16* %func, align 2
  %func_ret = load i16, i16* %func, align 2
  ret i16 %func_ret
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }

