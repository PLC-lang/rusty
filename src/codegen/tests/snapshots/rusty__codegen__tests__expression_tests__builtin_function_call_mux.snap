---
source: src/codegen/tests/expression_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type { i32, i32, i32, i32, i32 }

@main_instance = global %main zeroinitializer, section "var-$RUSTY$main_instance:r5i32i32i32i32i32"

define void @main(%main* %0) section "fn-$RUSTY$main:v" {
entry:
  %a = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %b = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %c = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  %d = getelementptr inbounds %main, %main* %0, i32 0, i32 3
  %e = getelementptr inbounds %main, %main* %0, i32 0, i32 4
  %1 = alloca i32, align 4
  switch i32 3, label %continue_block [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %4
    i32 3, label %5
  ]

2:                                                ; preds = %entry
  %load_b = load i32, i32* %b, align 4
  store i32 %load_b, i32* %1, align 4
  br label %continue_block

3:                                                ; preds = %entry
  %load_c = load i32, i32* %c, align 4
  store i32 %load_c, i32* %1, align 4
  br label %continue_block

4:                                                ; preds = %entry
  %load_d = load i32, i32* %d, align 4
  store i32 %load_d, i32* %1, align 4
  br label %continue_block

5:                                                ; preds = %entry
  %load_e = load i32, i32* %e, align 4
  store i32 %load_e, i32* %1, align 4
  br label %continue_block

continue_block:                                   ; preds = %entry, %5, %4, %3, %2
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %a, align 4
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%main = type { i32, i32, i32, i32, i32 }

@main_instance = external global %main, section "var-$RUSTY$main_instance:r5i32i32i32i32i32"

define void @__init_main(%main* %0) section "fn-$RUSTY$__init_main:v[pr5i32i32i32i32i32]" {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

declare void @main(%main*) section "fn-$RUSTY$main:v"
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%main = type { i32, i32, i32, i32, i32 }

@main_instance = external global %main, section "var-$RUSTY$main_instance:r5i32i32i32i32i32"

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" {
entry:
  call void @__init_main(%main* @main_instance)
  ret void
}

declare void @__init_main(%main*) section "fn-$RUSTY$__init_main:v[pr5i32i32i32i32i32]"

declare void @main(%main*) section "fn-$RUSTY$main:v"
