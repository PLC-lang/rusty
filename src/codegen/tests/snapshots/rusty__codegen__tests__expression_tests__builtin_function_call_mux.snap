---
source: src/codegen/tests/expression_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%main_interface = type { i32, i32, i32, i32, i32 }

@main_instance = global %main_interface zeroinitializer

define void @main(%main_interface* %0) {
entry:
  %a = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 0
  %b = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 1
  %c = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 2
  %d = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 3
  %e = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 4
  %load_b = load i32, i32* %b, align 4
  %load_c = load i32, i32* %c, align 4
  %load_d = load i32, i32* %d, align 4
  %load_e = load i32, i32* %e, align 4
  %1 = alloca [4 x i32], align 4
  %2 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i32 0, i32 0
  store i32 %load_b, i32* %2, align 4
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i32 0, i32 1
  store i32 %load_c, i32* %3, align 4
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i32 0, i32 2
  store i32 %load_d, i32* %4, align 4
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i32 0, i32 3
  store i32 %load_e, i32* %5, align 4
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %a, align 4
  ret void
}

