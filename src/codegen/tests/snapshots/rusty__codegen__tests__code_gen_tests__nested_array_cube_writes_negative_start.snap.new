---
source: src/codegen/tests/code_gen_tests.rs
assertion_line: 3149
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type { i16, i16, i16, [125 x i32] }

@main_instance = global %main zeroinitializer

define void @main(%main* %0) {
entry:
  %x = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %y = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %z = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  %cube = getelementptr inbounds %main, %main* %0, i32 0, i32 3
  %load_x = load i16, i16* %x, align 2
  %1 = sub i16 %load_x, -2
  %2 = zext i16 %1 to i32
  %load_y = load i16, i16* %y, align 2
  %3 = sub i16 %load_y, -2
  %4 = zext i16 %3 to i32
  %load_z = load i16, i16* %z, align 2
  %5 = sub i16 %load_z, -2
  %6 = zext i16 %5 to i32
  %7 = mul i32 25, %2
  %8 = add i32 %7, 0
  %9 = mul i32 5, %4
  %10 = add i32 %9, %8
  %11 = mul i32 1, %6
  %12 = add i32 %11, %10
  %tmpVar = getelementptr inbounds [125 x i32], [125 x i32]* %cube, i32 0, i32 %12
  %load_x1 = load i16, i16* %x, align 2
  %13 = sext i16 %load_x1 to i32
  %load_y2 = load i16, i16* %y, align 2
  %14 = sext i16 %load_y2 to i32
  %tmpVar3 = mul i32 %13, %14
  %load_z4 = load i16, i16* %z, align 2
  %15 = sext i16 %load_z4 to i32
  %tmpVar5 = mul i32 %tmpVar3, %15
  store i32 %tmpVar5, i32* %tmpVar, align 4
  ret void
}
