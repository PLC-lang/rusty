---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%foo = type { i32* }
%prg = type { i32 }

@foo_instance = global %foo zeroinitializer, section "$RUSTY$var-foo_instance:r1pi32"
@prg_instance = global %prg zeroinitializer, section "$RUSTY$var-prg_instance:r1i32"

define void @foo(%foo* %0) {
entry:
  %inout = getelementptr inbounds %foo, %foo* %0, i32 0, i32 0
  %deref = load i32*, i32** %inout, align 8
  %deref1 = load i32*, i32** %inout, align 8
  %load_inout = load i32, i32* %deref1, align 4
  %tmpVar = add i32 %load_inout, 1
  store i32 %tmpVar, i32* %deref, align 4
  ret void
}

define void @prg(%prg* %0) {
entry:
  %baz = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  store i32 7, i32* %baz, align 4
  store i32* %baz, i32** getelementptr inbounds (%foo, %foo* @foo_instance, i32 0, i32 0), align 8
  call void @foo(%foo* @foo_instance)
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%foo = type { i32* }
%prg = type { i32 }

@foo_instance = external global %foo, section "$RUSTY$var-foo_instance:r1pi32"
@prg_instance = external global %prg, section "$RUSTY$var-prg_instance:r1i32"

define void @__init_foo(%foo* %0) {
entry:
  %self = alloca %foo*, align 8
  store %foo* %0, %foo** %self, align 8
  ret void
}

declare void @foo(%foo*)

define void @__init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%foo = type { i32* }
%prg = type { i32 }

@foo_instance = external global %foo, section "$RUSTY$var-foo_instance:r1pi32"
@prg_instance = external global %prg, section "$RUSTY$var-prg_instance:r1i32"

define void @__init___testproject() {
entry:
  call void @__init_foo(%foo* @foo_instance)
  call void @__init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_foo(%foo*)

declare void @foo(%foo*)

declare void @__init_prg(%prg*)

declare void @prg(%prg*)
