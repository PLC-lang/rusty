---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%bar = type { %fb }
%fb = type { i32 }

@bar_instance = global %bar zeroinitializer
@__fb__init = unnamed_addr constant %fb zeroinitializer

define void @bar(%bar* %0) {
entry:
  %fb_inst = getelementptr inbounds %bar, %bar* %0, i32 0, i32 0
  call void @fb.foo(%fb* %fb_inst)
  ret void
}

define void @fb(%fb* %0) {
entry:
  %x = getelementptr inbounds %fb, %fb* %0, i32 0, i32 0
  ret void
}

define void @fb.foo(%fb* %0) {
entry:
  %x = getelementptr inbounds %fb, %fb* %0, i32 0, i32 0
  store i32 2, i32* %x, align 4
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%bar = type { %fb }
%fb = type { i32 }

@bar_instance = external global %bar
@__fb__init = external global %fb

define void @__init_bar(%bar* %0) {
entry:
  %self = alloca %bar*, align 8
  store %bar* %0, %bar** %self, align 8
  %deref = load %bar*, %bar** %self, align 8
  %fb_inst = getelementptr inbounds %bar, %bar* %deref, i32 0, i32 0
  call void @__init_fb(%fb* %fb_inst)
  ret void
}

declare void @bar(%bar*)

declare void @fb(%fb*)

define void @__init_fb(%fb* %0) {
entry:
  %self = alloca %fb*, align 8
  store %fb* %0, %fb** %self, align 8
  ret void
}
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%bar = type { %fb }
%fb = type { i32 }

@bar_instance = external global %bar
@__fb__init = external global %fb

define void @__init___testproject() {
entry:
  call void @__init_bar(%bar* @bar_instance)
  ret void
}

declare void @__init_bar(%bar*)

declare void @bar(%bar*)

declare void @fb(%fb*)
