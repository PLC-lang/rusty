---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%bar = type {}
%prg = type { i32 }

@bar_instance = global %bar zeroinitializer, section "var-$RUSTY$bar_instance:r0"
@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r1i32"

define void @bar(%bar* %0) section "fn-$RUSTY$bar:v" {
entry:
  call void @prg.foo(%prg* @prg_instance)
  ret void
}

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  ret void
}

define void @prg.foo(%prg* %0) section "fn-$RUSTY$prg.foo:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  store i32 2, i32* %x, align 4
  ret void
}

define void @__init_bar(%bar* %0) section "fn-$RUSTY$__init_bar:v[pr0]" {
entry:
  %self = alloca %bar*, align 8
  store %bar* %0, %bar** %self, align 8
  ret void
}

define void @__init_prg(%prg* %0) section "fn-$RUSTY$__init_prg:v[pr1i32]" {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

define void @__init() section "fn-$RUSTY$__init:v" {
entry:
  call void @__init_bar(%bar* @bar_instance)
  call void @__init_prg(%prg* @prg_instance)
  ret void
}
