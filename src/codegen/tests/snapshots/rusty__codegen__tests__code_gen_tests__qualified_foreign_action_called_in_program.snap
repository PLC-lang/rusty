---
source: src/codegen/tests/code_gen_tests.rs
expression: result
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%bar = type {}
%prg = type { i32 }

@bar_instance = global %bar zeroinitializer
@prg_instance = global %prg zeroinitializer

define void @bar(%bar* %0) {
entry:
  call void @prg.foo(%prg* @prg_instance)
  ret void
}

define void @prg(%prg* %0) {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  ret void
}

define void @prg.foo(%prg* %0) {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  store i32 2, i32* %x, align 4
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%bar = type {}
%prg = type { i32 }

@bar_instance = external global %bar
@prg_instance = external global %prg

define void @__init_bar(%bar* %0) {
entry:
  %self = alloca %bar*, align 8
  store %bar* %0, %bar** %self, align 8
  ret void
}

declare void @bar(%bar*)

define void @__init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*)

define void @__user_init_bar(%bar* %0) {
entry:
  %self = alloca %bar*, align 8
  store %bar* %0, %bar** %self, align 8
  ret void
}

define void @__user_init_prg(%prg* %0) {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%bar = type {}
%prg = type { i32 }

@bar_instance = external global %bar
@prg_instance = external global %prg
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___testproject, i8* null }]

define void @__init___testproject() {
entry:
  call void @__init_bar(%bar* @bar_instance)
  call void @__init_prg(%prg* @prg_instance)
  call void @__user_init_bar(%bar* @bar_instance)
  call void @__user_init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_bar(%bar*)

declare void @bar(%bar*)

declare void @__init_prg(%prg*)

declare void @prg(%prg*)

declare void @__user_init_bar(%bar*)

declare void @__user_init_prg(%prg*)
