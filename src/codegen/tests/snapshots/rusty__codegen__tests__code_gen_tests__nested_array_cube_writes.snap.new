---
source: src/codegen/tests/code_gen_tests.rs
assertion_line: 3129
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type { i16, i16, i16, [125 x i32] }

@main_instance = global %main zeroinitializer

define void @main(%main* %0) {
entry:
  %x = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %y = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %z = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  %cube = getelementptr inbounds %main, %main* %0, i32 0, i32 3
  %load_x = load i16, i16* %x, align 2
  %1 = zext i16 %load_x to i32
  %load_y = load i16, i16* %y, align 2
  %2 = zext i16 %load_y to i32
  %load_z = load i16, i16* %z, align 2
  %3 = zext i16 %load_z to i32
  %4 = mul i32 25, %1
  %5 = add i32 %4, 0
  %6 = mul i32 5, %2
  %7 = add i32 %6, %5
  %8 = mul i32 1, %3
  %9 = add i32 %8, %7
  %tmpVar = getelementptr inbounds [125 x i32], [125 x i32]* %cube, i32 0, i32 %9
  %load_x1 = load i16, i16* %x, align 2
  %10 = sext i16 %load_x1 to i32
  %load_y2 = load i16, i16* %y, align 2
  %11 = sext i16 %load_y2 to i32
  %tmpVar3 = mul i32 %10, %11
  %load_z4 = load i16, i16* %z, align 2
  %12 = sext i16 %load_z4 to i32
  %tmpVar5 = mul i32 %tmpVar3, %12
  store i32 %tmpVar5, i32* %tmpVar, align 4
  ret void
}
