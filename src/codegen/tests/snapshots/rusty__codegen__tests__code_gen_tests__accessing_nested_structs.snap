---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%Main = type { %OuterStruct }
%OuterStruct = type { %InnerStruct, %InnerStruct }
%InnerStruct = type { i16, i16 }

@Main_instance = global %Main zeroinitializer
@__OuterStruct__init = unnamed_addr constant %OuterStruct zeroinitializer
@__InnerStruct__init = unnamed_addr constant %InnerStruct zeroinitializer

define void @Main(%Main* %0) {
entry:
  %m = getelementptr inbounds %Main, %Main* %0, i32 0, i32 0
  %out1 = getelementptr inbounds %OuterStruct, %OuterStruct* %m, i32 0, i32 0
  %inner1 = getelementptr inbounds %InnerStruct, %InnerStruct* %out1, i32 0, i32 0
  store i16 3, i16* %inner1, align 2
  %out2 = getelementptr inbounds %OuterStruct, %OuterStruct* %m, i32 0, i32 1
  %inner2 = getelementptr inbounds %InnerStruct, %InnerStruct* %out2, i32 0, i32 1
  store i16 7, i16* %inner2, align 2
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%InnerStruct = type { i16, i16 }
%OuterStruct = type { %InnerStruct, %InnerStruct }
%Main = type { %OuterStruct }

@__InnerStruct__init = external global %InnerStruct
@__OuterStruct__init = external global %OuterStruct
@Main_instance = external global %Main

define void @__init_innerstruct(%InnerStruct* %0) {
entry:
  %self = alloca %InnerStruct*, align 8
  store %InnerStruct* %0, %InnerStruct** %self, align 8
  ret void
}

define void @__init_outerstruct(%OuterStruct* %0) {
entry:
  %self = alloca %OuterStruct*, align 8
  store %OuterStruct* %0, %OuterStruct** %self, align 8
  %deref = load %OuterStruct*, %OuterStruct** %self, align 8
  %out1 = getelementptr inbounds %OuterStruct, %OuterStruct* %deref, i32 0, i32 0
  call void @__init_innerstruct(%InnerStruct* %out1)
  %deref1 = load %OuterStruct*, %OuterStruct** %self, align 8
  %out2 = getelementptr inbounds %OuterStruct, %OuterStruct* %deref1, i32 0, i32 1
  call void @__init_innerstruct(%InnerStruct* %out2)
  ret void
}

define void @__init_main(%Main* %0) {
entry:
  %self = alloca %Main*, align 8
  store %Main* %0, %Main** %self, align 8
  %deref = load %Main*, %Main** %self, align 8
  %m = getelementptr inbounds %Main, %Main* %deref, i32 0, i32 0
  call void @__init_outerstruct(%OuterStruct* %m)
  ret void
}

declare void @Main(%Main*)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%Main = type { %OuterStruct }
%OuterStruct = type { %InnerStruct, %InnerStruct }
%InnerStruct = type { i16, i16 }

@Main_instance = external global %Main
@__OuterStruct__init = external global %OuterStruct
@__InnerStruct__init = external global %InnerStruct

define void @__init___testproject() {
entry:
  call void @__init_main(%Main* @Main_instance)
  ret void
}

declare void @__init_main(%Main*)

declare void @Main(%Main*)
