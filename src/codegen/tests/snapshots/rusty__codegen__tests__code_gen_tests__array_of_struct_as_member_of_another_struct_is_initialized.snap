---
source: src/codegen/tests/code_gen_tests.rs
expression: res
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%mainProg = type { %STRUCT1 }
%STRUCT1 = type { i16, [11 x %STRUCT2] }
%STRUCT2 = type { i8, i32 }

@mainProg_instance = global %mainProg { %STRUCT1 { i16 10, [11 x %STRUCT2] [%STRUCT2 { i8 1, i32 128 }, %STRUCT2 { i8 0, i32 1024 }, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer] } }, section "$RUSTY$var-mainprog_instance:r1r2i16ar2u8i32"
@__STRUCT1__init = unnamed_addr constant %STRUCT1 zeroinitializer, section "$RUSTY$var-__struct1__init:r2i16ar2u8i32"
@__STRUCT2__init = unnamed_addr constant %STRUCT2 zeroinitializer, section "$RUSTY$var-__struct2__init:r2u8i32"
@__mainProg.var_str1__init = unnamed_addr constant %STRUCT1 { i16 10, [11 x %STRUCT2] [%STRUCT2 { i8 1, i32 128 }, %STRUCT2 { i8 0, i32 1024 }, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer, %STRUCT2 zeroinitializer] }

define void @mainProg(%mainProg* %0) {
entry:
  %var_str1 = getelementptr inbounds %mainProg, %mainProg* %0, i32 0, i32 0
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%STRUCT1 = type { i16, [11 x %STRUCT2] }
%STRUCT2 = type { i8, i32 }
%mainProg = type { %STRUCT1 }

@__STRUCT1__init = external global %STRUCT1, section "$RUSTY$var-__struct1__init:r2i16ar2u8i32"
@__STRUCT2__init = external global %STRUCT2, section "$RUSTY$var-__struct2__init:r2u8i32"
@mainProg_instance = external global %mainProg, section "$RUSTY$var-mainprog_instance:r1r2i16ar2u8i32"

define void @__init_struct1(%STRUCT1* %0) {
entry:
  %self = alloca %STRUCT1*, align 8
  store %STRUCT1* %0, %STRUCT1** %self, align 8
  ret void
}

define void @__init_struct2(%STRUCT2* %0) {
entry:
  %self = alloca %STRUCT2*, align 8
  store %STRUCT2* %0, %STRUCT2** %self, align 8
  ret void
}

define void @__init_mainprog(%mainProg* %0) {
entry:
  %self = alloca %mainProg*, align 8
  store %mainProg* %0, %mainProg** %self, align 8
  %deref = load %mainProg*, %mainProg** %self, align 8
  %var_str1 = getelementptr inbounds %mainProg, %mainProg* %deref, i32 0, i32 0
  call void @__init_struct1(%STRUCT1* %var_str1)
  ret void
}

declare void @mainProg(%mainProg*)
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%mainProg = type { %STRUCT1 }
%STRUCT1 = type { i16, [11 x %STRUCT2] }
%STRUCT2 = type { i8, i32 }

@mainProg_instance = external global %mainProg, section "$RUSTY$var-mainprog_instance:r1r2i16ar2u8i32"
@__STRUCT1__init = external global %STRUCT1, section "$RUSTY$var-__struct1__init:r2i16ar2u8i32"
@__STRUCT2__init = external global %STRUCT2, section "$RUSTY$var-__struct2__init:r2u8i32"

define void @__init___testproject() {
entry:
  call void @__init_mainprog(%mainProg* @mainProg_instance)
  ret void
}

declare void @__init_mainprog(%mainProg*)

declare void @mainProg(%mainProg*)
