---
source: src/codegen/tests/typesystem_test.rs
expression: result
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%prg = type { i8, i32, i32 }

@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r3u8i32i32"

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %b = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  %c = getelementptr inbounds %prg, %prg* %0, i32 0, i32 1
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 2
  %load_b = load i8, i8* %b, align 1
  %1 = zext i8 %load_b to i32
  %load_c = load i32, i32* %c, align 4
  %tmpVar = add i32 %1, %load_c
  store i32 %tmpVar, i32* %x, align 4
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%prg = type { i8, i32, i32 }

@prg_instance = external global %prg, section "var-$RUSTY$prg_instance:r3u8i32i32"

define void @__init_prg(%prg* %0) section "fn-$RUSTY$__init_prg:v[pr3u8i32i32]" {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*) section "fn-$RUSTY$prg:v"
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%prg = type { i8, i32, i32 }

@prg_instance = external global %prg, section "var-$RUSTY$prg_instance:r3u8i32i32"

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" {
entry:
  call void @__init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_prg(%prg*) section "fn-$RUSTY$__init_prg:v[pr3u8i32i32]"

declare void @prg(%prg*) section "fn-$RUSTY$prg:v"
