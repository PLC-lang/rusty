---
source: src/codegen/tests/expression_tests.rs
assertion_line: 482
expression: result

---
; ModuleID = 'main'
source_filename = "main"

%main_interface = type { i16, i16, i16, i16, i8 }

@main_instance = global %main_interface zeroinitializer

define void @main(%main_interface* %0) {
entry:
  %a = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 0
  %b = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 1
  %c = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 2
  %d = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 3
  %bb = getelementptr inbounds %main_interface, %main_interface* %0, i32 0, i32 4
  %load_a = load i16, i16* %a, align 2
  %1 = sext i16 %load_a to i32
  %tmpVar = icmp sge i32 %1, 0
  br i1 %tmpVar, label %2, label %4

2:                                                ; preds = %entry
  %load_a1 = load i16, i16* %a, align 2
  %3 = sext i16 %load_a1 to i32
  %tmpVar2 = icmp sle i32 %3, 10
  br label %4

4:                                                ; preds = %2, %entry
  %5 = phi i1 [ %tmpVar, %entry ], [ %tmpVar2, %2 ]
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %load_b = load i16, i16* %b, align 2
  %7 = sext i16 %load_b to i32
  %tmpVar3 = icmp sle i32 %7, -10
  br i1 %tmpVar3, label %11, label %13

8:                                                ; preds = %13, %4
  %9 = phi i1 [ %5, %4 ], [ %14, %13 ]
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %bb, align 1
  ret void

11:                                               ; preds = %6
  %load_b4 = load i16, i16* %b, align 2
  %12 = sext i16 %load_b4 to i32
  %tmpVar5 = icmp sge i32 %12, -20
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i1 [ %tmpVar3, %6 ], [ %tmpVar5, %11 ]
  br label %8
}

