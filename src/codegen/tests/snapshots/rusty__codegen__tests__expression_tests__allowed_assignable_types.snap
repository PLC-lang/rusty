---
source: src/codegen/tests/expression_tests.rs
expression: result
snapshot_kind: text
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%main = type { i16, [2 x i16], i16*, [2 x i16]* }

@main_instance = global %main zeroinitializer

define void @main(%main* %0) {
entry:
  %v = getelementptr inbounds %main, %main* %0, i32 0, i32 0
  %x = getelementptr inbounds %main, %main* %0, i32 0, i32 1
  %y = getelementptr inbounds %main, %main* %0, i32 0, i32 2
  %z = getelementptr inbounds %main, %main* %0, i32 0, i32 3
  store i16 0, i16* %v, align 2
  %tmpVar = getelementptr inbounds [2 x i16], [2 x i16]* %x, i32 0, i32 0
  store i16 1, i16* %tmpVar, align 2
  %deref = load i16*, i16** %y, align 8
  store i16 2, i16* %deref, align 2
  %deref1 = load i16*, i16** %y, align 8
  %1 = load i16, i16* %deref1, align 2
  %erase = and i16 %1, -3
  %or = or i16 %erase, 6
  store i16 %or, i16* %deref1, align 2
  %deref2 = load [2 x i16]*, [2 x i16]** %z, align 8
  %tmpVar3 = getelementptr inbounds [2 x i16], [2 x i16]* %deref2, i32 0, i32 0
  store i16 4, i16* %tmpVar3, align 2
  %deref4 = load [2 x i16]*, [2 x i16]** %z, align 8
  %tmpVar5 = getelementptr inbounds [2 x i16], [2 x i16]* %deref4, i32 0, i32 1
  %2 = load i16, i16* %tmpVar5, align 2
  %erase6 = and i16 %2, -3
  %or7 = or i16 %erase6, 10
  store i16 %or7, i16* %tmpVar5, align 2
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%main = type { i16, [2 x i16], i16*, [2 x i16]* }

@main_instance = external global %main

define void @__init_main(%main* %0) {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}

declare void @main(%main*)

define void @__user_init_main(%main* %0) {
entry:
  %self = alloca %main*, align 8
  store %main* %0, %main** %self, align 8
  ret void
}
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%main = type { i16, [2 x i16], i16*, [2 x i16]* }

@main_instance = external global %main
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 0, void ()* @__init___testproject, i8* null }]

define void @__init___testproject() {
entry:
  call void @__init_main(%main* @main_instance)
  call void @__user_init_main(%main* @main_instance)
  ret void
}

declare void @__init_main(%main*)

declare void @main(%main*)

declare void @__user_init_main(%main*)
