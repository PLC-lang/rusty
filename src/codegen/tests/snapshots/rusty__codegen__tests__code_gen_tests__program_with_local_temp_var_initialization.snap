---
source: src/codegen/tests/code_gen_tests.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

%foo = type { i16 }
%prg = type {}

@foo_instance = global %foo { i16 7 }, section "var-$RUSTY$foo_instance:r3i16i16i16"
@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r0"

define void @foo(%foo* %0) section "fn-$RUSTY$foo:v" {
entry:
  %x = getelementptr inbounds %foo, %foo* %0, i32 0, i32 0
  %y = alloca i16, align 2
  %z = alloca i16, align 2
  store i16 0, i16* %y, align 2
  store i16 9, i16* %z, align 2
  %load_z = load i16, i16* %z, align 2
  %1 = sext i16 %load_z to i32
  %tmpVar = add i32 %1, 1
  %2 = trunc i32 %tmpVar to i16
  store i16 %2, i16* %y, align 2
  ret void
}

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  call void @foo(%foo* @foo_instance)
  ret void
}

define void @__init_foo(%foo* %0) section "fn-$RUSTY$__init_foo:v[pr3i16i16i16]" {
entry:
  %self = alloca %foo*, align 8
  store %foo* %0, %foo** %self, align 8
  ret void
}

define void @__init_prg(%prg* %0) section "fn-$RUSTY$__init_prg:v[pr0]" {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

define void @__init() section "fn-$RUSTY$__init:v" {
entry:
  call void @__init_foo(%foo* @foo_instance)
  call void @__init_prg(%prg* @prg_instance)
  ret void
}
