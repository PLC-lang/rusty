---
source: src/codegen/tests/code_gen_tests.rs
expression: function
---
; ModuleID = '<internal>'
source_filename = "<internal>"

%prg = type { i16 }

@gX = global i16 0, section "var-$RUSTY$gX:i16"
@prg_instance = global %prg zeroinitializer, section "var-$RUSTY$prg_instance:r1i16"

define void @prg(%prg* %0) section "fn-$RUSTY$prg:v" {
entry:
  %x = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0
  store i16 20, i16* @gX, align 2
  %load_gX = load i16, i16* @gX, align 2
  store i16 %load_gX, i16* %x, align 2
  ret void
}
; ModuleID = '__initializers'
source_filename = "__initializers"

%prg = type { i16 }

@prg_instance = external global %prg, section "var-$RUSTY$prg_instance:r1i16"

define void @__init_prg(%prg* %0) section "fn-$RUSTY$__init_prg:v[pr1i16]" {
entry:
  %self = alloca %prg*, align 8
  store %prg* %0, %prg** %self, align 8
  ret void
}

declare void @prg(%prg*) section "fn-$RUSTY$prg:v"
; ModuleID = '__init___testproject'
source_filename = "__init___testproject"

%prg = type { i16 }

@prg_instance = external global %prg, section "var-$RUSTY$prg_instance:r1i16"

define void @__init___testproject() section "fn-$RUSTY$__init___testproject:v" {
entry:
  call void @__init_prg(%prg* @prg_instance)
  ret void
}

declare void @__init_prg(%prg*) section "fn-$RUSTY$__init_prg:v[pr1i16]"

declare void @prg(%prg*) section "fn-$RUSTY$prg:v"
