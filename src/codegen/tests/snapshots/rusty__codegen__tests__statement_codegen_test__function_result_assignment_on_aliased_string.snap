---
source: src/codegen/tests/statement_codegen_test.rs
expression: result
---
; ModuleID = 'main'
source_filename = "main"

declare void @CONCAT([1025 x i8]*, [1025 x i8], [1025 x i8])

define i8 @LIST_ADD([1001 x i8] %0, [2 x i8] %1) {
entry:
  %LIST_ADD = alloca i8, align 1
  %INS = alloca [1001 x i8], align 1
  store [1001 x i8] %0, [1001 x i8]* %INS, align 1
  %sx = alloca [2 x i8], align 1
  store [2 x i8] %1, [2 x i8]* %sx, align 1
  store i8 0, i8* %LIST_ADD, align 1
  %2 = alloca [1025 x i8], align 1
  %3 = bitcast [1025 x i8]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 ptrtoint ([1025 x i8]* getelementptr ([1025 x i8], [1025 x i8]* null, i32 1) to i64), i1 false)
  %4 = bitcast [1025 x i8]* %2 to i8*
  %5 = bitcast [2 x i8]* %sx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %4, i8* align 1 %5, i32 2, i1 false)
  %6 = load [1025 x i8], [1025 x i8]* %2, align 1
  %7 = alloca [1025 x i8], align 1
  %8 = bitcast [1025 x i8]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 ptrtoint ([1025 x i8]* getelementptr ([1025 x i8], [1025 x i8]* null, i32 1) to i64), i1 false)
  %9 = bitcast [1025 x i8]* %7 to i8*
  %10 = bitcast [1001 x i8]* %INS to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %9, i8* align 1 %10, i32 1001, i1 false)
  %11 = load [1025 x i8], [1025 x i8]* %7, align 1
  %12 = alloca [1025 x i8], align 1
  call void @CONCAT([1025 x i8]* %12, [1025 x i8] %6, [1025 x i8] %11)
  %13 = bitcast [1001 x i8]* %INS to i8*
  %14 = bitcast [1025 x i8]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %13, i8* align 1 %14, i32 1000, i1 false)
  %LIST_ADD_ret = load i8, i8* %LIST_ADD, align 1
  ret i8 %LIST_ADD_ret
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #1

attributes #0 = { argmemonly nofree nounwind willreturn writeonly }
attributes #1 = { argmemonly nofree nounwind willreturn }

