---
source: src/parser/tests/expressions_parser_tests.rs
expression: result
---
CompilationUnit {
    global_vars: [],
    units: [
        POU {
            name: "prg",
            variable_blocks: [],
            pou_type: Program,
            return_type: None,
        },
    ],
    implementations: [
        Implementation {
            name: "prg",
            type_name: "prg",
            linkage: Internal,
            pou_type: Program,
            statements: [
                Assignment {
                    left: ReferenceExpr {
                        kind: Member(
                            Identifier {
                                name: "x",
                            },
                        ),
                        base: None,
                    },
                    right: BinaryExpression {
                        operator: Plus,
                        left: LiteralInteger {
                            value: 6,
                        },
                        right: HardwareAccess {
                            direction: Input,
                            access: Bit,
                            address: [
                                LiteralInteger {
                                    value: 2,
                                },
                                LiteralInteger {
                                    value: 1,
                                },
                            ],
                            location: SourceLocation {
                                span: Range(
                                    TextLocation {
                                        line: 2,
                                        column: 15,
                                        offset: 32,
                                    }..TextLocation {
                                        line: 2,
                                        column: 23,
                                        offset: 40,
                                    },
                                ),
                            },
                        },
                    },
                },
                Assignment {
                    left: ReferenceExpr {
                        kind: Member(
                            Identifier {
                                name: "y",
                            },
                        ),
                        base: None,
                    },
                    right: HardwareAccess {
                        direction: Memory,
                        access: Byte,
                        address: [
                            LiteralInteger {
                                value: 200,
                            },
                        ],
                        location: SourceLocation {
                            span: Range(
                                TextLocation {
                                    line: 3,
                                    column: 10,
                                    offset: 52,
                                }..TextLocation {
                                    line: 3,
                                    column: 19,
                                    offset: 61,
                                },
                            ),
                        },
                    },
                },
                Assignment {
                    left: ReferenceExpr {
                        kind: Member(
                            Identifier {
                                name: "z",
                            },
                        ),
                        base: None,
                    },
                    right: BinaryExpression {
                        operator: Multiplication,
                        left: HardwareAccess {
                            direction: Global,
                            access: DWord,
                            address: [
                                LiteralInteger {
                                    value: 5,
                                },
                            ],
                            location: SourceLocation {
                                span: Range(
                                    TextLocation {
                                        line: 4,
                                        column: 10,
                                        offset: 73,
                                    }..TextLocation {
                                        line: 4,
                                        column: 17,
                                        offset: 80,
                                    },
                                ),
                            },
                        },
                        right: LiteralInteger {
                            value: 2,
                        },
                    },
                },
            ],
            location: SourceLocation {
                span: Range(
                    TextLocation {
                        line: 2,
                        column: 8,
                        offset: 25,
                    }..TextLocation {
                        line: 5,
                        column: 15,
                        offset: 101,
                    },
                ),
            },
            name_location: SourceLocation {
                span: Range(
                    TextLocation {
                        line: 1,
                        column: 12,
                        offset: 13,
                    }..TextLocation {
                        line: 1,
                        column: 15,
                        offset: 16,
                    },
                ),
            },
            overriding: false,
            generic: false,
            access: None,
        },
    ],
    user_types: [],
    file_name: "test.st",
}
