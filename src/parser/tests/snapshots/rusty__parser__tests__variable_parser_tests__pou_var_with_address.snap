---
source: src/parser/tests/variable_parser_tests.rs
expression: "format!(\"{result:?}\")"
---
CompilationUnit { global_vars: [], units: [POU { name: "main", variable_blocks: [VariableBlock { variables: [Variable { name: "a", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Input, access: Template, address: [], location: SourceLocation { span: Range(TextLocation { line: 2, column: 14, offset: 35 }..TextLocation { line: 2, column: 20, offset: 41 }) } }) }, Variable { name: "b", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Output, access: Template, address: [], location: SourceLocation { span: Range(TextLocation { line: 3, column: 14, offset: 63 }..TextLocation { line: 3, column: 20, offset: 69 }) } }) }, Variable { name: "c", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Memory, access: Template, address: [], location: SourceLocation { span: Range(TextLocation { line: 4, column: 16, offset: 93 }..TextLocation { line: 4, column: 22, offset: 99 }) } }) }, Variable { name: "d", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Memory, access: Template, address: [], location: SourceLocation { span: Range(TextLocation { line: 4, column: 16, offset: 93 }..TextLocation { line: 4, column: 22, offset: 99 }) } }) }, Variable { name: "aa", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Input, access: Bit, address: [LiteralInteger { value: 7 }], location: SourceLocation { span: Range(TextLocation { line: 5, column: 15, offset: 122 }..TextLocation { line: 5, column: 22, offset: 129 }) } }) }, Variable { name: "bb", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Output, access: Byte, address: [LiteralInteger { value: 5 }, LiteralInteger { value: 5 }], location: SourceLocation { span: Range(TextLocation { line: 6, column: 15, offset: 152 }..TextLocation { line: 6, column: 24, offset: 161 }) } }) }, Variable { name: "cc", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Memory, access: DWord, address: [LiteralInteger { value: 3 }, LiteralInteger { value: 3 }, LiteralInteger { value: 3 }], location: SourceLocation { span: Range(TextLocation { line: 7, column: 15, offset: 184 }..TextLocation { line: 7, column: 26, offset: 195 }) } }) }, Variable { name: "dd", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Global, access: DWord, address: [LiteralInteger { value: 4 }, LiteralInteger { value: 3 }, LiteralInteger { value: 3 }], location: SourceLocation { span: Range(TextLocation { line: 8, column: 15, offset: 218 }..TextLocation { line: 8, column: 26, offset: 229 }) } }) }], variable_block_type: Local }], pou_type: Program, return_type: None }], implementations: [Implementation { name: "main", type_name: "main", linkage: Internal, pou_type: Program, statements: [], location: SourceLocation { span: Range(TextLocation { line: 10, column: 4, offset: 253 }..TextLocation { line: 10, column: 15, offset: 264 }) }, name_location: SourceLocation { span: Range(TextLocation { line: 0, column: 8, offset: 8 }..TextLocation { line: 0, column: 12, offset: 12 }) }, overriding: false, generic: false, access: None }], user_types: [], file_name: "test.st" }
