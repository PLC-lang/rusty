---
source: src/parser/tests/expressions_parser_tests.rs
expression: ast
---
CompilationUnit {
    global_vars: [],
    var_config: [],
    pous: [
        POU {
            name: "foo",
            variable_blocks: [],
            pou_type: Function,
            return_type: Some(
                DataTypeReference {
                    referenced_type: "INT",
                },
            ),
            interfaces: [],
        },
    ],
    implementations: [
        Implementation {
            name: "foo",
            type_name: "foo",
            linkage: Internal,
            pou_type: Function,
            statements: [
                BinaryExpression {
                    operator: Multiplication,
                    left: ReferenceExpr {
                        kind: Member(
                            Identifier {
                                name: "a",
                            },
                        ),
                        base: None,
                    },
                    right: CallStatement {
                        operator: ReferenceExpr {
                            kind: Member(
                                Identifier {
                                    name: "EXPT",
                                },
                            ),
                            base: None,
                        },
                        parameters: Some(
                            ExpressionList {
                                expressions: [
                                    ReferenceExpr {
                                        kind: Member(
                                            Identifier {
                                                name: "b",
                                            },
                                        ),
                                        base: None,
                                    },
                                    ReferenceExpr {
                                        kind: Member(
                                            Identifier {
                                                name: "c",
                                            },
                                        ),
                                        base: None,
                                    },
                                ],
                            },
                        ),
                    },
                },
            ],
            overriding: false,
            generic: false,
            access: None,
        },
    ],
    interfaces: [],
    user_types: [],
    file: File(
        "test.st",
    ),
}
