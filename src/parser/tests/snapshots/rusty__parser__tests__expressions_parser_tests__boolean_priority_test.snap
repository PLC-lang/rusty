---
source: src/parser/tests/expressions_parser_tests.rs
expression: statement
---
BinaryExpression {
    operator: Or,
    left: BinaryExpression {
        operator: Xor,
        left: BinaryExpression {
            operator: And,
            left: ReferenceExpr {
                kind: Member(
                    Identifier {
                        name: "a",
                    },
                ),
                base: None,
            },
            right: ReferenceExpr {
                kind: Member(
                    Identifier {
                        name: "b",
                    },
                ),
                base: None,
            },
        },
        right: ReferenceExpr {
            kind: Member(
                Identifier {
                    name: "c",
                },
            ),
            base: None,
        },
    },
    right: ReferenceExpr {
        kind: Member(
            Identifier {
                name: "d",
            },
        ),
        base: None,
    },
}
