---
source: src/parser/tests/variable_parser_tests.rs
expression: "format!(\"{result:?}\")"
---
CompilationUnit { global_vars: [], units: [], implementations: [], user_types: [UserTypeDeclaration { data_type: StructType { name: Some("t"), variables: [Variable { name: "a", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Input, access: Template, address: [], location: SourceLocation { span: Range(30..36) } }) }, Variable { name: "b", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Output, access: Template, address: [], location: SourceLocation { span: Range(59..65) } }) }, Variable { name: "c", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Memory, access: Template, address: [], location: SourceLocation { span: Range(88..94) } }) }, Variable { name: "aa", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Input, access: Bit, address: [LiteralInteger { value: 7 }], location: SourceLocation { span: Range(118..125) } }) }, Variable { name: "bb", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Output, access: Byte, address: [LiteralInteger { value: 5 }, LiteralInteger { value: 5 }], location: SourceLocation { span: Range(149..158) } }) }, Variable { name: "cc", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Memory, access: DWord, address: [LiteralInteger { value: 3 }, LiteralInteger { value: 3 }, LiteralInteger { value: 3 }], location: SourceLocation { span: Range(182..193) } }) }, Variable { name: "dd", data_type: DataTypeReference { referenced_type: "INT" }, address: Some(HardwareAccess { direction: Global, access: DWord, address: [LiteralInteger { value: 4 }, LiteralInteger { value: 3 }, LiteralInteger { value: 3 }], location: SourceLocation { span: Range(217..228) } }) }] }, initializer: None, scope: None }], file_name: "test.st", new_lines: NewLines { line_breaks: [16, 45, 74, 103, 134, 167, 202, 237, 252, 265, 270] } }
