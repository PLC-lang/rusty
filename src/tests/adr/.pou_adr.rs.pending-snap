{"run_id":"1692276329-511434278","line":492,"new":{"module_name":"rusty__tests__adr__pou_adr","snapshot_name":"return_a_complex_type_from_function","metadata":{"source":"src/tests/adr/pou_adr.rs","assertion_line":492,"expression":"codegen(returning_string)"},"snapshot":"; ModuleID = 'main'\nsource_filename = \"main\"\n\n%prg = type { [81 x i8] }\n\n@prg_instance = global %prg zeroinitializer\n@utf08_literal_0 = private unnamed_addr constant [13 x i8] c\"hello world!\\00\"\n\ndefine void @foo([81 x i8]* %0) {\nentry:\n  %foo = alloca [81 x i8]*, align 8\n  store [81 x i8]* %0, [81 x i8]** %foo, align 8\n  %deref = load [81 x i8]*, [81 x i8]** %foo, align 8\n  %1 = bitcast [81 x i8]* %deref to i8*\n  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 ptrtoint ([81 x i8]* getelementptr ([81 x i8], [81 x i8]* null, i32 1) to i64), i1 false)\n  %2 = bitcast [81 x i8]** %foo to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %2, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @utf08_literal_0, i32 0, i32 0), i32 13, i1 false)\n  ret void\n}\n\ndefine void @prg(%prg* %0) {\nentry:\n  %s = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0\n  %1 = alloca [81 x i8], align 1\n  call void @foo([81 x i8]* %1)\n  %2 = bitcast [81 x i8]* %s to i8*\n  %3 = bitcast [81 x i8]* %1 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %2, i8* align 1 %3, i32 80, i1 false)\n  ret void\n}\n\n; Function Attrs: argmemonly nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0\n\n; Function Attrs: argmemonly nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #1\n\nattributes #0 = { argmemonly nofree nounwind willreturn writeonly }\nattributes #1 = { argmemonly nofree nounwind willreturn }\n"},"old":{"module_name":"rusty__tests__adr__pou_adr","metadata":{},"snapshot":"; ModuleID = 'main'\nsource_filename = \"main\"\n\n%prg = type { [81 x i8] }\n\n@prg_instance = global %prg zeroinitializer\n@utf08_literal_0 = private unnamed_addr constant [13 x i8] c\"hello world!\\00\"\n\ndefine void @foo([81 x i8]* %0) {\nentry:\n  %foo = alloca [81 x i8]*, align 8\n  store [81 x i8]* %0, [81 x i8]** %foo, align 8\n  %deref = load [81 x i8]*, [81 x i8]** %foo, align 8\n  %1 = bitcast [81 x i8]* %deref to i8*\n  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 ptrtoint ([81 x i8]* getelementptr ([81 x i8], [81 x i8]* null, i32 1) to i64), i1 false)\n  %deref1 = load [81 x i8]*, [81 x i8]** %foo, align 8\n  %2 = bitcast [81 x i8]* %deref1 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %2, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @utf08_literal_0, i32 0, i32 0), i32 13, i1 false)\n  ret void\n}\n\ndefine void @prg(%prg* %0) {\nentry:\n  %s = getelementptr inbounds %prg, %prg* %0, i32 0, i32 0\n  %1 = alloca [81 x i8], align 1\n  call void @foo([81 x i8]* %1)\n  %2 = bitcast [81 x i8]* %s to i8*\n  %3 = bitcast [81 x i8]* %1 to i8*\n  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %2, i8* align 1 %3, i32 80, i1 false)\n  ret void\n}\n\n; Function Attrs: argmemonly nofree nounwind willreturn writeonly\ndeclare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0\n\n; Function Attrs: argmemonly nofree nounwind willreturn\ndeclare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #1\n\nattributes #0 = { argmemonly nofree nounwind willreturn writeonly }\nattributes #1 = { argmemonly nofree nounwind willreturn }"}}
{"run_id":"1692281663-537988399","line":188,"new":null,"old":null}
{"run_id":"1692283614-665373117","line":188,"new":null,"old":null}
