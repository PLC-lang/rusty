---
source: compiler/plc_cfc/src/tests/xml.rs
expression: "crate::deserializer::visit(CONTENT)"
---
Ok(
    Pou {
        name: "program_0",
        pou_type: Program,
        body: Body {
            function_block_diagram: FunctionBlockDiagram {
                nodes: {
                    5: Block(
                        Block {
                            local_id: 5,
                            global_id: None,
                            type_name: "MyAdd",
                            instance_name: Some(
                                "local_add",
                            ),
                            execution_order_id: Some(
                                0,
                            ),
                            variables: [
                                BlockVariable {
                                    kind: Input,
                                    formal_parameter: "a",
                                    negated: false,
                                    ref_local_id: Some(
                                        6,
                                    ),
                                    edge: None,
                                    storage: None,
                                    enable: None,
                                },
                                BlockVariable {
                                    kind: Input,
                                    formal_parameter: "b",
                                    negated: false,
                                    ref_local_id: Some(
                                        7,
                                    ),
                                    edge: None,
                                    storage: None,
                                    enable: None,
                                },
                                BlockVariable {
                                    kind: Output,
                                    formal_parameter: "c",
                                    negated: false,
                                    ref_local_id: None,
                                    edge: None,
                                    storage: None,
                                    enable: None,
                                },
                            ],
                        },
                    ),
                    6: FunctionBlockVariable(
                        FunctionBlockVariable {
                            kind: Input,
                            local_id: 6,
                            negated: false,
                            expression: "local_a",
                            execution_order_id: None,
                            ref_local_id: None,
                        },
                    ),
                    7: FunctionBlockVariable(
                        FunctionBlockVariable {
                            kind: Input,
                            local_id: 7,
                            negated: false,
                            expression: "local_b",
                            execution_order_id: None,
                            ref_local_id: None,
                        },
                    ),
                    8: FunctionBlockVariable(
                        FunctionBlockVariable {
                            kind: Output,
                            local_id: 8,
                            negated: false,
                            expression: "local_c",
                            execution_order_id: Some(
                                1,
                            ),
                            ref_local_id: Some(
                                5,
                            ),
                        },
                    ),
                },
            },
            global_id: None,
        },
        declaration: "\n                            PROGRAM program_0\n                            VAR\n                            local_a : DINT := 1;\n                            local_b : DINT := 2;\n                            local_c : DINT := 0;\n                            local_add : MyAdd;\n                            END_VAR\n                        \nEND_PROGRAM",
    },
)
