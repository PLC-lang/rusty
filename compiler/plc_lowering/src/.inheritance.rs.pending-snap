{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":1643,"new":{"module_name":"plc_lowering__inheritance__resolve_bases_tests","snapshot_name":"base_types_resolved","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":1643,"expression":"annotations.get(&left)"},"snapshot":"None"},"old":{"module_name":"plc_lowering__inheritance__resolve_bases_tests","metadata":{},"snapshot":"Some(\n    Variable {\n        resulting_type: \"INT\",\n        qualified_name: \"fb.x\",\n        constant: false,\n        argument_type: ByVal(\n            Local,\n        ),\n        auto_deref: None,\n    },\n)"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":464,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"write_to_grandparent_variable_in_initializer","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":464,"expression":"unit"},"snapshot":"Implementation {\n    name: \"child\",\n    type_name: \"child\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n                base: None,\n            },\n            right: LiteralInteger {\n                value: 420,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 11,\n                column: 16,\n                offset: 289,\n            }..TextLocation {\n                line: 11,\n                column: 25,\n                offset: 298,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 10,\n                column: 27,\n                offset: 252,\n            }..TextLocation {\n                line: 10,\n                column: 32,\n                offset: 257,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":""}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":1427,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"pointer_deref_in_grandparent","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":1427,"expression":"unit"},"snapshot":"Implementation {\n    name: \"main\",\n    type_name: \"main\",\n    linkage: Internal,\n    pou_type: Function,\n    statements: [\n        CallStatement {\n            operator: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"__init_child\",\n                    },\n                ),\n                base: None,\n            },\n            parameters: Some(\n                ReferenceExpr {\n                    kind: Member(\n                        Identifier {\n                            name: \"fb\",\n                        },\n                    ),\n                    base: None,\n                },\n            ),\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Deref,\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"c\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"fb\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 10,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Deref,\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"b\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"fb\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 20,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Deref,\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"a\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    Identifier {\n                                                        name: \"__BASE\",\n                                                    },\n                                                ),\n                                                base: None,\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"fb\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 30,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 23,\n                column: 20,\n                offset: 627,\n            }..TextLocation {\n                line: 25,\n                column: 32,\n                offset: 705,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 19,\n                column: 25,\n                offset: 527,\n            }..TextLocation {\n                line: 19,\n                column: 29,\n                offset: 531,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"main\",\n    type_name: \"main\",\n    linkage: Internal,\n    pou_type: Function,\n    statements: [\n        CallStatement {\n            operator: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"__init_child\",\n                    },\n                ),\n                base: None,\n            },\n            parameters: Some(\n                ReferenceExpr {\n                    kind: Member(\n                        Identifier {\n                            name: \"fb\",\n                        },\n                    ),\n                    base: None,\n                },\n            ),\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Deref,\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"c\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"fb\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 10,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Deref,\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"b\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"fb\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 20,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Deref,\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"a\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    Identifier {\n                                                        name: \"fb\",\n                                                    },\n                                                ),\n                                                base: None,\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 30,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 23,\n                column: 20,\n                offset: 627,\n            }..TextLocation {\n                line: 25,\n                column: 32,\n                offset: 705,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 19,\n                column: 25,\n                offset: 527,\n            }..TextLocation {\n                line: 19,\n                column: 29,\n                offset: 531,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":277,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"write_to_parent_variable_qualified_access","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":277,"expression":"unit"},"snapshot":"Implementation {\n    name: \"foo\",\n    type_name: \"foo\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"x\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"myFb\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 1,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"x\",\n                    },\n                ),\n                base: None,\n            },\n            right: LiteralInteger {\n                value: 2,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 16,\n                column: 16,\n                offset: 359,\n            }..TextLocation {\n                line: 17,\n                column: 23,\n                offset: 417,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 11,\n                column: 27,\n                offset: 250,\n            }..TextLocation {\n                line: 11,\n                column: 30,\n                offset: 253,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"foo\",\n    type_name: \"foo\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"x\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"myFb\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 1,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"x\",\n                    },\n                ),\n                base: None,\n            },\n            right: LiteralInteger {\n                value: 2,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 16,\n                column: 16,\n                offset: 359,\n            }..TextLocation {\n                line: 17,\n                column: 23,\n                offset: 395,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 11,\n                column: 27,\n                offset: 250,\n            }..TextLocation {\n                line: 11,\n                column: 30,\n                offset: 253,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":817,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"multi_level_reference_handling","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":817,"expression":"unit"},"snapshot":"Implementation {\n    name: \"foo\",\n    type_name: \"foo\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"x\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"myFb\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 1,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 21,\n                column: 16,\n                offset: 470,\n            }..TextLocation {\n                line: 21,\n                column: 28,\n                offset: 482,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 17,\n                column: 27,\n                offset: 377,\n            }..TextLocation {\n                line: 17,\n                column: 30,\n                offset: 380,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"foo\",\n    type_name: \"foo\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"x\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"myFb\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 1,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 21,\n                column: 16,\n                offset: 470,\n            }..TextLocation {\n                line: 21,\n                column: 28,\n                offset: 482,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 17,\n                column: 27,\n                offset: 377,\n            }..TextLocation {\n                line: 17,\n                column: 30,\n                offset: 380,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":379,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"write_to_parent_variable_in_instance","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":379,"expression":"unit"},"snapshot":"Implementation {\n    name: \"bar\",\n    type_name: \"bar\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"s\",\n                    },\n                ),\n                base: None,\n            },\n            right: LiteralString {\n                value: \"world\",\n                is_wide: false,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 8,\n                column: 16,\n                offset: 187,\n            }..TextLocation {\n                line: 8,\n                column: 29,\n                offset: 200,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 7,\n                column: 27,\n                offset: 155,\n            }..TextLocation {\n                line: 7,\n                column: 30,\n                offset: 158,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"bar\",\n    type_name: \"bar\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"s\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralString {\n                value: \"world\",\n                is_wide: false,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 8,\n                column: 16,\n                offset: 187,\n            }..TextLocation {\n                line: 8,\n                column: 29,\n                offset: 200,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 7,\n                column: 27,\n                offset: 155,\n            }..TextLocation {\n                line: 7,\n                column: 30,\n                offset: 158,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":1247,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"complex_array_access","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":1247,"expression":"unit"},"snapshot":"Implementation {\n    name: \"main\",\n    type_name: \"main\",\n    linkage: Internal,\n    pou_type: Function,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    BinaryExpression {\n                        operator: Minus,\n                        left: BinaryExpression {\n                            operator: Plus,\n                            left: ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"b\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                            right: ReferenceExpr {\n                                kind: Index(\n                                    BinaryExpression {\n                                        operator: Multiplication,\n                                        left: ReferenceExpr {\n                                            kind: Member(\n                                                Identifier {\n                                                    name: \"b\",\n                                                },\n                                            ),\n                                            base: None,\n                                        },\n                                        right: LiteralInteger {\n                                            value: 2,\n                                        },\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"z\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        },\n                        right: ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"a\",\n                                },\n                            ),\n                            base: None,\n                        },\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"y\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    Identifier {\n                                                        name: \"__BASE\",\n                                                    },\n                                                ),\n                                                base: None,\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Index(\n                                    LiteralInteger {\n                                        value: 0,\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"arr\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 20,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 25,\n                column: 16,\n                offset: 668,\n            }..TextLocation {\n                line: 25,\n                column: 47,\n                offset: 699,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 21,\n                column: 21,\n                offset: 567,\n            }..TextLocation {\n                line: 21,\n                column: 25,\n                offset: 571,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"main\",\n    type_name: \"main\",\n    linkage: Internal,\n    pou_type: Function,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    BinaryExpression {\n                        operator: Minus,\n                        left: BinaryExpression {\n                            operator: Plus,\n                            left: ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"b\",\n                                    },\n                                ),\n                                base: None,                 // <- missing base\n                            },\n                            right: ReferenceExpr {\n                                kind: Index(\n                                    BinaryExpression {\n                                        operator: Multiplication,\n                                        left: ReferenceExpr {\n                                            kind: Member(\n                                                Identifier {\n                                                    name: \"b\",\n                                                },\n                                            ),\n                                            base: None,     // <- same here\n                                        },\n                                        right: LiteralInteger {\n                                            value: 2,\n                                        },\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"z\", // <: and here\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        },\n                        right: ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"a\",\n                                },\n                            ),\n                            base: None,\n                        },\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"y\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Index(\n                                                    LiteralInteger {\n                                                        value: 0,\n                                                    },\n                                                ),\n                                                base: Some(\n                                                    ReferenceExpr {\n                                                        kind: Member(\n                                                            Identifier {\n                                                                name: \"arr\",\n                                                            },\n                                                        ),\n                                                        base: None,\n                                                    },\n                                                ),\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 20,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 25,\n                column: 16,\n                offset: 668,\n            }..TextLocation {\n                line: 25,\n                column: 47,\n                offset: 699,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 21,\n                column: 21,\n                offset: 567,\n            }..TextLocation {\n                line: 21,\n                column: 25,\n                offset: 571,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":500,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"array_access_in_nested_function_blocks_with_base_references","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":500,"expression":"unit"},"snapshot":"Implementation {\n    name: \"child\",\n    type_name: \"child\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    LiteralInteger {\n                        value: 0,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"x\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 42,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    LiteralInteger {\n                        value: 2,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"y\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 5,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    LiteralInteger {\n                        value: 3,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: BinaryExpression {\n                operator: Plus,\n                left: ReferenceExpr {\n                    kind: Index(\n                        LiteralInteger {\n                            value: 1,\n                        },\n                    ),\n                    base: Some(\n                        ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"x\",\n                                },\n                            ),\n                            base: None,\n                        },\n                    ),\n                },\n                right: ReferenceExpr {\n                    kind: Index(\n                        LiteralInteger {\n                            value: 2,\n                        },\n                    ),\n                    base: Some(\n                        ReferenceExpr {\n                            kind: Member(\n                                ReferenceExpr {\n                                    kind: Member(\n                                        Identifier {\n                                            name: \"y\",\n                                        },\n                                    ),\n                                    base: Some(\n                                        ReferenceExpr {\n                                            kind: Member(\n                                                Identifier {\n                                                    name: \"__BASE\",\n                                                },\n                                            ),\n                                            base: None,\n                                        },\n                                    ),\n                                },\n                            ),\n                            base: None,\n                        },\n                    ),\n                },\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"a\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"x\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 5,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"b\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"y\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 6,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    BinaryExpression {\n                        operator: Plus,\n                        left: ReferenceExpr {\n                            kind: Member(\n                                ReferenceExpr {\n                                    kind: Member(\n                                        Identifier {\n                                            name: \"a\",\n                                        },\n                                    ),\n                                    base: Some(\n                                        ReferenceExpr {\n                                            kind: Member(\n                                                Identifier {\n                                                    name: \"__BASE\",\n                                                },\n                                            ),\n                                            base: None,\n                                        },\n                                    ),\n                                },\n                            ),\n                            base: None,\n                        },\n                        right: ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"b\",\n                                },\n                            ),\n                            base: None,\n                        },\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 10,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 19,\n                column: 20,\n                offset: 598,\n            }..TextLocation {\n                line: 24,\n                column: 33,\n                offset: 938,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 15,\n                column: 31,\n                offset: 456,\n            }..TextLocation {\n                line: 15,\n                column: 36,\n                offset: 461,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"child\",\n    type_name: \"child\",\n    linkage: Internal,\n    pou_type: FunctionBlock,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    LiteralInteger {\n                        value: 0,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"x\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 42,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    LiteralInteger {\n                        value: 2,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"y\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 5,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    LiteralInteger {\n                        value: 3,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: BinaryExpression {\n                operator: Plus,\n                left: ReferenceExpr {\n                    kind: Member(\n                        LiteralInteger {\n                            value: 1,\n                        },\n                    ),\n                    base: Some(\n                        ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"x\",\n                                },\n                            ),\n                            base: Some(\n                                ReferenceExpr {\n                                    kind: Member(\n                                        Identifier {\n                                            name: \"__BASE\",\n                                        },\n                                    ),\n                                    base: None,\n                                },\n                            ),\n                        },\n                    ),\n                },\n                right: ReferenceExpr {\n                    kind: Member(\n                        LiteralInteger {\n                            value: 2,\n                        },\n                    ),\n                    base: Some(\n                        ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"y\",\n                                },\n                            ),\n                            base: Some(\n                                ReferenceExpr {\n                                    kind: Member(\n                                        Identifier {\n                                            name: \"__BASE\",\n                                        },\n                                    ),\n                                    base: Some(\n                                        ReferenceExpr {\n                                            kind: Member(\n                                                Identifier {\n                                                    name: \"__BASE\",\n                                                },\n                                            ),\n                                            base: None,\n                                        },\n                                    ),\n                                },\n                            ),\n                        },\n                    ),\n                },\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"a\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 5,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"b\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 6,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    BinaryExpression {\n                        operator: Plus,\n                        left: ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"a\",\n                                },\n                            ),\n                            base: None,\n                        },\n                        right: ReferenceExpr {\n                            kind: Member(\n                                Identifier {\n                                    name: \"b\",\n                                },\n                            ),\n                            base: None,\n                        },\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: None,\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 10,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 19,\n                column: 20,\n                offset: 598,\n            }..TextLocation {\n                line: 24,\n                column: 33,\n                offset: 938,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 15,\n                column: 31,\n                offset: 456,\n            }..TextLocation {\n                line: 15,\n                column: 36,\n                offset: 461,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
{"run_id":"c3488716-4666-45cf-ab21-84a8a6e2ad84","line":936,"new":{"module_name":"plc_lowering__inheritance__units_tests","snapshot_name":"array_of_objects","metadata":{"source":"compiler/plc_lowering/src/inheritance.rs","assertion_line":936,"expression":"unit"},"snapshot":"Implementation {\n    name: \"main\",\n    type_name: \"main\",\n    linkage: Internal,\n    pou_type: Function,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"a\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Index(\n                            LiteralInteger {\n                                value: 0,\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"arr\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 10,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    LiteralInteger {\n                        value: 0,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"y\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    Identifier {\n                                                        name: \"__BASE\",\n                                                    },\n                                                ),\n                                                base: None,\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Index(\n                                    LiteralInteger {\n                                        value: 0,\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"arr\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 20,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"b\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Index(\n                            LiteralInteger {\n                                value: 1,\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"arr\",\n                                    },\n                                ),\n                                base: None,\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 30,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    LiteralInteger {\n                        value: 1,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"x\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Index(\n                                    LiteralInteger {\n                                        value: 1,\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"arr\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 40,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Index(\n                    LiteralInteger {\n                        value: 2,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Index(\n                                    LiteralInteger {\n                                        value: 2,\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"arr\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 50,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 25,\n                column: 16,\n                offset: 668,\n            }..TextLocation {\n                line: 29,\n                column: 34,\n                offset: 820,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 21,\n                column: 21,\n                offset: 567,\n            }..TextLocation {\n                line: 21,\n                column: 25,\n                offset: 571,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"},"old":{"module_name":"plc_lowering__inheritance__units_tests","metadata":{},"snapshot":"Implementation {\n    name: \"main\",\n    type_name: \"main\",\n    linkage: Internal,\n    pou_type: Function,\n    statements: [\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"a\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            LiteralInteger {\n                                                value: 0,\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    Identifier {\n                                                        name: \"arr\",\n                                                    },\n                                                ),\n                                                base: None,\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 10,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    LiteralInteger {\n                        value: 0,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"y\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"__BASE\",\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    LiteralInteger {\n                                                        value: 0,\n                                                    },\n                                                ),\n                                                base: Some(\n                                                    ReferenceExpr {\n                                                        kind: Member(\n                                                            Identifier {\n                                                                name: \"arr\",\n                                                            },\n                                                        ),\n                                                        base: None,\n                                                    },\n                                                ),\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 20,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    Identifier {\n                        name: \"b\",\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"__BASE\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    LiteralInteger {\n                                        value: 1,\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"arr\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 30,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    LiteralInteger {\n                        value: 1,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"x\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    Identifier {\n                                        name: \"__BASE\",\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            LiteralInteger {\n                                                value: 1,\n                                            },\n                                        ),\n                                        base: Some(\n                                            ReferenceExpr {\n                                                kind: Member(\n                                                    Identifier {\n                                                        name: \"arr\",\n                                                    },\n                                                ),\n                                                base: None,\n                                            },\n                                        ),\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 40,\n            },\n        },\n        Assignment {\n            left: ReferenceExpr {\n                kind: Member(\n                    LiteralInteger {\n                        value: 2,\n                    },\n                ),\n                base: Some(\n                    ReferenceExpr {\n                        kind: Member(\n                            Identifier {\n                                name: \"z\",\n                            },\n                        ),\n                        base: Some(\n                            ReferenceExpr {\n                                kind: Member(\n                                    LiteralInteger {\n                                        value: 2,\n                                    },\n                                ),\n                                base: Some(\n                                    ReferenceExpr {\n                                        kind: Member(\n                                            Identifier {\n                                                name: \"arr\",\n                                            },\n                                        ),\n                                        base: None,\n                                    },\n                                ),\n                            },\n                        ),\n                    },\n                ),\n            },\n            right: LiteralInteger {\n                value: 50,\n            },\n        },\n    ],\n    location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 25,\n                column: 16,\n                offset: 668,\n            }..TextLocation {\n                line: 29,\n                column: 34,\n                offset: 820,\n            },\n        ),\n    },\n    name_location: SourceLocation {\n        span: Range(\n            TextLocation {\n                line: 21,\n                column: 21,\n                offset: 567,\n            }..TextLocation {\n                line: 21,\n                column: 25,\n                offset: 571,\n            },\n        ),\n    },\n    overriding: false,\n    generic: false,\n    access: None,\n}"}}
