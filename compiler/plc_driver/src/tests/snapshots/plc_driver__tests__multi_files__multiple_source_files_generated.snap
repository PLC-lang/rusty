---
source: compiler/plc_driver/src/tests/multi_files.rs
expression: "results.join(\"\\n\")"
---
; ModuleID = 'external_file1.st'
source_filename = "external_file1.st"
target datalayout = "[filtered]"
target triple = "[filtered]"

%mainProg = type {}

@mainProg_instance = external global %mainProg

define i16 @main() {
entry:
  %main = alloca i16, align 2
  store i16 0, i16* %main, align 2
  call void @mainProg(%mainProg* @mainProg_instance)
  %main_ret = load i16, i16* %main, align 2
  ret i16 %main_ret
}

declare void @mainProg(%mainProg*)

; ModuleID = 'external_file2.st'
source_filename = "external_file2.st"
target datalayout = "[filtered]"
target triple = "[filtered]"

%mainProg = type {}

@mainProg_instance = global %mainProg zeroinitializer

define void @mainProg(%mainProg* %0) {
entry:
  ret void
}

; ModuleID = '__initializers'
source_filename = "__initializers"
target datalayout = "[filtered]"
target triple = "[filtered]"

%mainProg = type {}

@mainProg_instance = external global %mainProg

define void @__init_mainprog(%mainProg* %0) {
entry:
  %self = alloca %mainProg*, align 8
  store %mainProg* %0, %mainProg** %self, align 8
  ret void
}

declare void @mainProg(%mainProg*)

define void @__user_init_mainProg(%mainProg* %0) {
entry:
  %self = alloca %mainProg*, align 8
  store %mainProg* %0, %mainProg** %self, align 8
  ret void
}

; ModuleID = '__init___TestProject'
source_filename = "__init___TestProject"
target datalayout = "[filtered]"
target triple = "[filtered]"

%mainProg = type {}

@mainProg_instance = external global %mainProg
@__init_array_entry___init___TestProject = internal unnamed_addr global void ()* @__init___TestProject, section ".init_array"
@llvm.used = appending global [2 x i8*] [i8* bitcast (void ()* @__init___TestProject to i8*), i8* bitcast (void ()** @__init_array_entry___init___TestProject to i8*)]

define void @__init___TestProject() {
entry:
  call void @__init_mainprog(%mainProg* @mainProg_instance)
  call void @__user_init_mainProg(%mainProg* @mainProg_instance)
  ret void
}

declare void @__init_mainprog(%mainProg*)

declare void @mainProg(%mainProg*)

declare void @__user_init_mainProg(%mainProg*)
