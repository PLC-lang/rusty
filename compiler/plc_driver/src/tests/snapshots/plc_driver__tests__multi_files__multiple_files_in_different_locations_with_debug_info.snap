---
source: compiler/plc_driver/./src/tests/multi_files.rs
expression: "results.join(\"\\n\")"
---
; ModuleID = 'app/file1.st'
source_filename = "app/file1.st"

%mainProg = type {}

@mainProg_instance = external global %mainProg, !dbg !0

define i16 @main() !dbg !9 {
entry:
  %main = alloca i16, align 2, !dbg !13
  call void @llvm.dbg.declare(metadata i16* %main, metadata !14, metadata !DIExpression()), !dbg !16
  store i16 0, i16* %main, align 2, !dbg !13
  call void @mainProg(%mainProg* @mainProg_instance), !dbg !13
  %main_ret = load i16, i16* %main, align 2, !dbg !13
  ret i16 %main_ret, !dbg !13
}

declare !dbg !17 void @mainProg(%mainProg*)

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!5}
!llvm.dbg.cu = !{!6}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mainProg", scope: !2, file: !2, line: 2, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "file2.st", directory: "lib")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "mainProg", scope: !2, file: !2, line: 2, align: 64, flags: DIFlagPublic, elements: !4, identifier: "mainProg")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 5}
!6 = distinct !DICompileUnit(language: DW_LANG_C, file: !7, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !8, splitDebugInlining: false)
!7 = !DIFile(filename: "app/file1.st", directory: "root")
!8 = !{!0}
!9 = distinct !DISubprogram(name: "main", linkageName: "main", scope: !10, file: !10, line: 2, type: !11, scopeLine: 10, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !6, retainedNodes: !4)
!10 = !DIFile(filename: "file1.st", directory: "app")
!11 = !DISubroutineType(flags: DIFlagPublic, types: !12)
!12 = !{null}
!13 = !DILocation(line: 10, column: 4, scope: !9)
!14 = !DILocalVariable(name: "main", scope: !9, file: !10, line: 2, type: !15, align: 16)
!15 = !DIBasicType(name: "INT", size: 16, encoding: DW_ATE_signed, flags: DIFlagPublic)
!16 = !DILocation(line: 2, column: 13, scope: !9)
!17 = distinct !DISubprogram(name: "mainProg", linkageName: "mainProg", scope: !2, file: !2, line: 2, type: !11, scopeLine: 5, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !6, retainedNodes: !4)

; ModuleID = 'lib/file2.st'
source_filename = "lib/file2.st"

%mainProg = type {}

@mainProg_instance = global %mainProg zeroinitializer, !dbg !0

define void @mainProg(%mainProg* %0) !dbg !9 {
entry:
  call void @llvm.dbg.declare(metadata %mainProg* %0, metadata !12, metadata !DIExpression()), !dbg !13
  ret void, !dbg !13
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!5}
!llvm.dbg.cu = !{!6}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mainProg", scope: !2, file: !2, line: 2, type: !3, isLocal: false, isDefinition: true)
!2 = !DIFile(filename: "file2.st", directory: "lib")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "mainProg", scope: !2, file: !2, line: 2, align: 64, flags: DIFlagPublic, elements: !4, identifier: "mainProg")
!4 = !{}
!5 = !{i32 2, !"Dwarf Version", i32 5}
!6 = distinct !DICompileUnit(language: DW_LANG_C, file: !7, producer: "RuSTy Structured text Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !8, splitDebugInlining: false)
!7 = !DIFile(filename: "lib/file2.st", directory: "root")
!8 = !{!0}
!9 = distinct !DISubprogram(name: "mainProg", linkageName: "mainProg", scope: !2, file: !2, line: 2, type: !10, scopeLine: 5, flags: DIFlagPublic, spFlags: DISPFlagDefinition, unit: !6, retainedNodes: !4)
!10 = !DISubroutineType(flags: DIFlagPublic, types: !11)
!11 = !{null}
!12 = !DILocalVariable(name: "mainProg", scope: !9, file: !2, line: 2, type: !3)
!13 = !DILocation(line: 5, column: 4, scope: !9)

