name: Build

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  IMAGE_NAME: rust-llvm
  IMAGE_VERSION: 12-1.56.1

jobs:
  check: 
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run Check
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --check --container --container-name=$IMAGE_ID

  test-linux:
    name: Test Linux
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Cargo test
        shell: bash
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          echo "Build command : ./scripts/build.sh --verbose --build --test --container --container-name=$IMAGE_ID"
          ./scripts/build.sh --verbose --build --test --container --container-name=$IMAGE_ID

      - run: mkdir -p linux

      - name: Move artifacts
        env:
          ARTIFACTS: "rustyc"
          OUT_DIR: "linux"
        run: |
          import os
          artifacts = os.environ['ARTIFACTS'].split()
          for artifact in artifacts:
            src = "target/debug/%s" % artifact
            dst = os.environ['OUT_DIR'] + "/" + artifact
            os.rename(src, dst)
        shell: python

      - uses: actions/upload-artifact@master
        with:
          name: linux-debug
          path: linux

  test-windows:
    name: Test Windows
    runs-on: windows-latest
    needs: check
    env:
      toolchain-version: 1.56
      llvm-version: 12.0.1
    steps:

      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain-version }}
          profile: minimal
          override: true

      - name: Install LLVM
        uses: ghaith/install-llvm-action@latest
        with:
          version: ${{ env.llvm-version }}
          directory: "./llvm"
          
      - name: Cargo test (Unit)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib -- --nocapture

      - name: Cargo test (Correctness)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: correctness -- --nocapture --test-threads=1

      - name: Cargo test (Integration)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: integration -- --nocapture --test-threads=1
 
      - run: mkdir -p windows
      - run: ls target/debug

      - name: Move artifacts
        env:
          ARTIFACTS: "rustyc.exe rustyc.pdb"
          OUT_DIR: "windows"
        run: |
          import os
          artifacts = os.environ['ARTIFACTS'].split()
          for artifact in artifacts:
            src = "target/debug/%s" % artifact
            dst = os.environ['OUT_DIR'] + "/" + artifact
            os.rename(src, dst)
        shell: python

      - uses: actions/upload-artifact@master
        with:
          name: windows-debug
          path: windows

  style:
    name: Check Style
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Run Checks
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --check-style --container --container-name=$IMAGE_ID

  coverage:
    name: Run Coverage 
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Run Checks
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --container --container-name=$IMAGE_ID --coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
            files: lcov.info 

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: lcov.info
