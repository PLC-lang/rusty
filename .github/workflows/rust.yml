name: Build

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  IMAGE_NAME: rust-llvm
  IMAGE_VERSION: 12-1.56

jobs:
  check: 
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run Check
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --check --container --container-name=$IMAGE_ID

  test:
    name: Test
    runs-on: ${{ matrix.config.os }}
    needs: check
    strategy:
      fail-fast: false
      matrix:
        config:
          - { 
            os: "ubuntu-latest",
            dir: linux,
            arch: linux,
            artifacts: "rustyc"
          }
          - { 
            os: "windows-latest",
            dir: windows,
            arch: win,
            artifacts: "rustyc.exe rustyc.pdb"
          }
    steps:

      - uses: actions/checkout@v2

      - name: Cargo test
        shell: bash
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-${{ matrix.config.arch }}
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --build --check --container --container-name=$IMAGE_ID
          sudo chmod a+rw -R target/debug

      - run: mkdir -p ${{ matrix.config.dir }}

      - name: Move artifacts
        env:
          ARTIFACTS: ${{ matrix.config.artifacts }}
          OUT_DIR: ${{ matrix.config.dir }}
        run: |
          import os
          artifacts = os.environ['ARTIFACTS'].split()
          for artifact in artifacts:
            src = "target/debug/%s" % artifact
            dst = os.environ['OUT_DIR'] + "/" + artifact
            os.rename(src, dst)
        shell: python

      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.config.dir }}-debug
          path: ${{ matrix.config.dir }}

  style:
    name: Check Style
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Run Checks
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --check --container --container-name=$IMAGE_ID

  coverage:
    name: Run Coverage 
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: Run Checks
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION-linux
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --container --container-name=$IMAGE_ID --coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
            files: lcov.info 

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: lcov.info
