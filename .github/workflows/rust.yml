name: Build

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  IMAGE_NAME: rust-llvm
  IMAGE_VERSION: 14-1.67

jobs:
  check: 
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Run Check
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --check --container --container-name=$IMAGE_ID

  test-linux:
    name: Test Linux
    runs-on: ubuntu-latest
    container: ghcr.io/plc-lang/rust-llvm:latest
    needs: check
    steps:
      - uses: actions/checkout@v3

      - name: Cargo test
        shell: bash
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          echo "Build command : ./scripts/build.sh --verbose --build --package --test"
          ./scripts/build.sh --verbose --build --package --test

  test-windows:
    name: Test Windows
    runs-on: windows-2022
    needs: check
    env:
      toolchain-version: 1.67.0
      llvm-version: 14.0.6
    steps:

      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.toolchain-version }}

      - name: Install LLVM
        uses: ghaith/install-llvm-action@latest
        with:
          version: ${{ env.llvm-version }}
          directory: "./llvm"
          
      - name: Cargo test (Unit)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib -- --nocapture

      - name: Cargo test (Correctness)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: correctness -- --nocapture --test-threads=1

      - name: Cargo test (Integration)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: integration -- --nocapture --test-threads=1

      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
 
      - uses: actions/upload-artifact@master
        with:
          name: rustyc.exe
          path: target/release/rustyc.exe

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: check
    container: ghcr.io/plc-lang/rust-llvm:latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Standard libs Build
        run: |
          ./libs/stdlib/scripts/build.sh --verbose --build --package \
          --target x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu

      - uses: actions/upload-artifact@master
        with:
          name: output
          path: stdlib

  style:
    name: Check Style
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v3

      - name: Run Checks
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --check-style --container --container-name=$IMAGE_ID

  coverage:
    name: Run Coverage 
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v3

      - name: Run Checks
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:$IMAGE_VERSION
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker pull $IMAGE_ID
          ./scripts/build.sh --container --container-name=$IMAGE_ID --coverage

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
            files: lcov.info 

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: lcov.info
